//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_07_ARMS_FRONT_gunner_2 {

using ToColor for bytes4;

function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('30.255-20.49-44.983 29.62-59.599 86.82-32.645 127.75 26.953 40.94 85.27 50.11 130.254 20.49Z"/><path fill="#000" fill-rule="evenodd" d="M735.668 2409.48c22.288-15.35 48.058-21.2 71.954-18.48 25.986 2.96 49.687 16.16 64.819 38.25 15.216 22.43 18.677 49.72 11.786 75.29-6.454 23.94-22.092 46.28-45.291 61.77-23.393 15.19-50.1 20.72-74.638 17.19-26.208-3.78-49.902-17.73-64.496-40.58-14.311-22.62-17.071-49.61-9.524-74.64 6.94-23.03 22.494-44.39 45.39-58.8Zm3.283 4.98c-20.712 14.26-34.42 34.61-40.036 56.24-5.82 22.43-2.79 46.25 10.613 65.82 13.127 19.35 33.917 30.63 56.581 33.42 21.427 2.65 44.593-2.34 64.793-15.83 20.368-13.23 34.101-32.54 40.137-53.27 6.385-21.92 4.235-45.47-8.346-65.17-12.681-20.05-33.365-32.24-56.264-35.75-22.087-3.39-46.198 1.15-67.478 14.54Z" clip-rule="evenodd"/><path fill','="gray" d="M894.293 2523.85c29.643-41.64 22.655-97.48-15.608-124.72-38.264-27.23-93.313-15.56-122.957 26.09-29.643 41.64-22.656 97.48 15.608 124.72 38.263 27.24 93.313 15.56 122.957-26.09Z"/><path fill="#000" fill-rule="evenodd" d="M753.407 2423.57c14.507-21.3 35.474-35.3 57.76-40.98 24.065-6.13 49.648-2.44 70.745 12.01 21.299 14.72 33.882 37.7 36.735 62.68 2.692 23.57-3.403 48.87-18.677 70.62-15.551 21.54-37.465 35.58-60.609 40.75-24.535 5.48-50.368 1.12-71.246-14.19-20.553-15.2-32.411-38.16-34.502-62.9-1.935-22.92 4.422-47.31 19.794-67.99Zm4.639 3.3c-13.472 19.78-18.543 42.61-15.92 63.8 2.701 21.86 13.72 41.93 32.431 54.75 18.384 12.7 40.749 15.69 61.834 10.53 20.03-4.9 38.945-17.23 52.223-36.14 13.519-18.74 18.967-40.65 17.04-61.18-2.031-21.6-12.173-41.75-30.197-54.96-18.227-13.48-40.79','9-17.32-62.335-12.72-20.88 4.46-40.796 16.72-55.076 35.92Z" clip-rule="evenodd"/><path fill="#000" d="M859.819 2495.59c14.763-20.74 11.355-48.5-7.612-62-18.968-13.5-46.313-7.63-61.077 13.11-14.763 20.74-11.355 48.5 7.613 62 18.967 13.5 46.312 7.63 61.076-13.11Z"/><path fill="#000" fill-rule="evenodd" d="M788.864 2445.08c7.25-11.11 17.915-18.46 29.3-21.63 12.58-3.5 26.005-1.67 37.197 5.71 11.388 7.65 18.155 19.8 19.754 33.06 1.498 12.42-1.747 25.78-9.75 37.32-8.285 11.33-19.854 18.77-32.075 21.42-13.049 2.83-26.743.41-37.695-7.84-10.631-8.16-16.757-20.24-17.565-33.27-.734-11.79 2.713-24.28 10.834-34.77Zm4.535 3.23c-6.272 9.61-8.46 20.58-7.052 30.7 1.419 10.2 6.724 19.45 15.543 25.27 8.51 5.71 18.793 6.78 28.452 4.28 9.198-2.38 17.856-8.15 23.93-16.92 6.293-8.61 8.905-18.67 8.142-28.14-.804-','9.95-5.18-19.31-13.362-25.48-8.379-6.43-18.857-8.4-28.946-6.41-10.028 1.98-19.677 7.63-26.707 16.7Z" clip-rule="evenodd"/><path fill="gray" d="M762.82 2214.3c52.665-32.94 67.977-99.27 34.201-148.16-33.775-48.9-103.849-61.83-156.514-28.89-52.664 32.94-67.977 99.27-34.201 148.16s103.849 61.83 156.514 28.89Z"/><path fill="#000" fill-rule="evenodd" d="M638.589 2034.18c26.579-17.42 57.84-23.24 87.009-18.76 30.543 4.7 58.689 20.83 77.271 46.68 18.811 26.42 24.046 57.95 17.23 87.26-6.625 28.48-24.761 54.79-52.588 72.44-27.915 17.2-60.317 22.61-90.259 17.07-30.727-5.68-58.796-22.73-76.713-49.48-17.687-26.66-22.085-57.82-14.496-86.52 7.227-27.31 25.198-52.37 52.546-68.69Zm3.834 6.13c-24.533 16.07-40.224 39.72-45.874 65.12-5.696 25.61-.994 53.03 15.523 76 16.262 22.83 41.158 36.77 68.016 41.16 26.04','6 4.25 54.044-.56 78.04-15.79 24.001-14.8 39.669-37.12 45.834-61.37 6.361-25.02 2.714-52.13-12.789-75.26-15.7-23.65-40.397-38.7-67.456-43.96-26.851-5.23-55.993-.99-81.294 14.1Z" clip-rule="evenodd"/><path fill="gray" d="M832.435 2174.03c33.868-47.58 23.401-113.15-23.379-146.45-46.78-33.29-112.159-21.72-146.027 25.86-33.869 47.58-23.402 113.14 23.378 146.44 46.781 33.3 112.159 21.73 146.028-25.85Z"/><path fill="#000" fill-rule="evenodd" d="M660.279 2051.48c16.988-24.95 42.357-40.72 69.578-46.21 27.97-5.64 57.861-.29 83.025 16.94 25.388 17.54 41.087 44.01 45.806 72.49 4.692 28.32-1.593 58.58-19.523 84.12-18.259 25.3-44.799 41.14-73.09 45.97-28.457 4.86-58.6-1.3-83.485-19.54-24.51-18.14-39.346-44.63-43.173-72.9-3.727-27.51 2.857-56.64 20.862-80.87Zm5.501 3.92c-15.7 23.04-20.773 50.13-16.344 7','5.39 4.403 25.1 18.322 48.35 40.789 63.73 22.091 15.27 48.416 19.8 73.094 15.06 24.251-4.65 46.962-18.37 62.389-40.34 15.703-21.77 21.225-47.72 17.679-72.16-3.605-24.86-16.5-48.25-38.157-64.12-21.889-16.19-48.405-21.73-73.553-17.67-25.324 4.08-49.263 17.73-65.897 40.11Z" clip-rule="evenodd"/><path fill="#000" d="M802.341 2148.02c21.999-30.9 15.196-73.49-15.195-95.12-30.391-21.64-72.861-14.12-94.859 16.78-21.999 30.91-15.196 73.5 15.195 95.13 30.391 21.63 72.861 14.12 94.859-16.79Z"/><path fill="#000" fill-rule="evenodd" d="M688.771 2067.18c11.117-17.05 28.075-27.89 46.363-31.93 19.051-4.22 39.495-.71 56.911 10.77 17.703 11.88 28.716 30.08 32.17 49.73 3.45 19.61-.925 40.62-13.257 58.41-12.773 17.47-31.194 28.48-50.853 31.64-19.688 3.16-40.49-1.29-57.511-14.12-16.535-12.7-26.543-30.86-28.798','-50.24-2.166-18.6 2.507-38.17 14.975-54.26Zm7.042 5.01c-9.516 14.58-12.253 31.54-9.189 47.25 2.988 15.32 11.82 29.33 25.746 38.51 13.448 9.02 29.353 11.37 44.206 8.37 14.489-2.93 28-11.22 37.155-24.42 9.477-12.98 12.876-28.46 10.896-43.11-2.026-15.01-9.452-29.26-22.38-39.01-13.221-10.15-29.349-13.9-44.794-11.72-15.853 2.25-30.98 10.38-41.64 24.13Z" clip-rule="evenodd"/><path fill="',colors[1].toColor()));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="M763.541 2099.63c11.541 0 20.897-9.32 20.897-20.82s-9.356-20.82-20.897-20.82c-11.541 0-20.897 9.32-20.897 20.82s9.356 20.82 20.897 20.82Z"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h2160v2700H0z"/></clipPath></defs>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn6(colors),renderFn7(colors)));
      
        return render;
      }
}