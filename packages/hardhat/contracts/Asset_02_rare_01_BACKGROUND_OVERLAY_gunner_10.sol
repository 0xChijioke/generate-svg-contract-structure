//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_gunner_10 {

using ToColor for bytes4;

function renderFn36(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('d" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.152" d="M1787.06-64.878c80.99-48.51 291.57-73.875 320.1 97.135 11.75 70.158 9.71 118.011-44.57 135.7-20.84 6.769 21.57 1.74-49.76 35.818-28.32 13.513-3.4 74.768-24.45 93.283-7.83 6.877-22.77 18.996-40.92 30.522-13.52 8.612-30.97 13.406-46.48 18.834-13.82 4.9-31.41-.621-43.83-.998-10.14-.254-15.12.034-23.7-7.31-11.94-10.182-18.09-48.736-24.9-70.552-9.91-31.82-58.68 8.175-58.68 8.175l-44.78-41.439s6.4-32.652-5.25-55.427c-6.43-12.558-19.7-11.656-24.73-22.908-8.26-18.475-3.55-40.571.65-60.107 1.04-4.648 27.73-43.328 28.47-48.36 6.8-46.47 33.19-82.585 82.83-112.366Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1813.45 111v.001c-1.1 3.081-6.74 22.452 6.69 34.662 7.36 6.694 19.37 12.834 21.15 18.78.74 2.448.25 ','6.846-6.2 8.011-2.62.473-12.69 1.185-24.11-2.721-23.41-8.014-39.82-29.196-56.76-36.512-11.84-5.113-23.77-3.667-30.43.066-9.47 5.313-10.83 15.578 2.4 29.962.93 1.003.55 1.188.03 2.45.01.007-1.19.52-1.22.522-.95.013-.9-.179-1.61-.813-1.92-1.733-16.89-14.57-11.45-28.578 5.46-14.046 28.75-20.15 48.58-11.425 23.32 10.259 39.73 35.153 66.11 38.147 1.7.19 3.01.298 4.06.345-4.48-4.246-13.29-10.708-17.53-16.22-12.54-16.338-3.45-37.653-2.55-38.677a1.75 1.75 0 0 1 3.07.718c.13.572-.08 1.033-.23 1.282Zm-2.99-.566c-.07-.05-.13-.107-.2-.161l.05.195.15-.034Zm54.37-114.616c-2.58 1.338-8.95 10.804-15.97 32.35-.62 1.928-9.85 29.507-8.92 48.273.06 1.236-.29 1.15-1.38 1.739a33.58 33.58 0 0 1-1.16-.339c-.67-.536-.53-.645-.66-1.49-3.64-23.503 7.86-75.285 20.92-87.232 2.05-1.874 3.61-2.49 7.48-3.517 24.12-6.388 ','48.46 5.04 54.75 8.042 23.51 11.231 42.89 29.448 47.47 37.053.68 1.123.36 1.239-.38 2.32-.01.006-1.16.203-1.17.2-.84-.185-.77-.344-1.28-1.03-5.05-6.708-26.1-23.429-50.64-32.597-26.69-9.973-42.55-5.723-49.06-3.772Zm180.93 132.03-23.03-16.057c-.29-.446-.76-.823-.87-1.342-.01-.018.24-1.509.25-1.513.42-.281.77-.733 1.27-.836 1.08-.223 1.09-.033 2.05.519 12.96 7.461 12.97 7.436 25.87 15.005 1.38.811 1.7 2.285 1.75 2.525.26 1.262 1.5 8.816 1.63 9.583.21 1.287 3.88 23.832 5.09 39.004 1.34 16.628.47 21.61-3.05 24.27-1.63 1.228-2.85 1.461-13.79 3.137-18.92 2.902-55.68 6.539-60.53 7.02-7.38.729-7.38.742-36.42 3.378-2.5.228-9.3.845-31.27 2.678-.83.069-.87.066-1.52-.439-.02-.011-.79-1.327-.79-1.336.14-.484.11-1.051.42-1.449.68-.893.82-.748 1.92-.949l25.93-4.696 32.92-5.825c5.4-.952 29.77-5.055 34.82-5','.871 19.34-3.123 33.55-5.177 39.68-6.079.43-4.631.2-12.859.17-13.93-.14-4.997-.38-15.818-2.5-46.797Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".2" fill-rule="evenodd" d="M2066.25 314.357c5.41-7.954 11.78-21.12 5.23-43.301-10.52-35.59-3.51-78.275-5.17-96.075-2.5-26.77 29.24-19.16 34.5-33.52 10.51-28.723 6.59-83.904 1-71.391-23.7 53.021-58.69 8.766-62.91 36.23-.67 4.359-3.68 54.731-25 69.619-20.79 14.52-110.24 29.513-121.22 44.399-10.98 14.887 50.81-10.523 60.9 24.82 5.23 18.352 12.54 54.984 18.49 62.325 35.94 17.076 33.65-94.145 33.65-94.145 17.47-19.048 39.14 21.456 50.14 57.755 7.43 24.485 5.98 49.764 10.39 43.284Zm-354.5-168.929c-5.99-32.482 24.34-26.825 56.74-15.704 32.06 11.004 31.18-39.338 48.35-36.936 0 0-8.85 52.4 31.89 66.57 13 4.524 4.91-22.319 8.58-15.179 5.75 11.184 ','3.42 24.45 7.09 25.978 2.16.9-28.99 13.82-33.98 19.314l-118.67-44.043Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".2" fill-rule="evenodd" d="M1798.06 256.774c-.93 5.16-26.47 20.985-46.56 17.532-6.26-1.073-29.17-17.44-38.12-40.989-16.19-42.618-66.21-132.733-13.05-185.549 34.6-79.985 35.27-15.235 7.6 44.588-17.2 37.173 6.18 66.484 15.43 77.222 14.47 16.783 10.54 54.288 25.77 61.812 20.72 10.236 73.02-24.193 80.79-29.012 1.54 2.964-5.72 71.5 10.32 80.392 8.46 4.682 6.11-29.22 13.56-21.055 3.15 3.458-.78 27.166 7.39 29.443 38.17 10.68-2.57-88.384 44.82 3.012 6.27 12.095-15.32 7.754-23.68 17.727-9.43 11.247 8.85 30.393-5.3 37.414-7.58 3.755-48.44-3.171-58.39-59.781l-20.58-32.756Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-l','inejoin="round" stroke-miterlimit="1.5" stroke-width="13.034" d="M1841.42 195.936s-1.65 20.902 3.74 28.932c5.41 8.091 15.15-26.394 15.15-26.394l21.03 29.975s5.37-27.612-3.94-34.267c-9.3-6.655-35.98 1.754-35.98 1.754Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.948" d="M1833.38 332.833c-5.99-61.622 8.61-31.85 39.25 6.017-15.2-80.846 19.72-63.604 40.84-7.106-4.09-63.655 17.47-39.55 35.46-20.528-7.72-71.31-8.98-79.224 27.71-20.948-12.28-50.921-5.13-51.258 19.84-25.679"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.451" d="M1883.71 149.696c-5.1-1.526-8.23 2.297-10.44-5.661-2.34-8.426-1.62-36.44 5.77-52.84 6.74-14.887 30.25-54.87 51.57-48.134 45.36 14.168 37.65 41.486 33.91 61.216-5.07 26.496-44.08 56.118-80.81 45.419Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn37(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.624" d="M1827.68 177.151s-51.71-49.371-87.28-46.176c-35.6 3.247-19.27 31.26-12.41 44.961 6.89 13.701 99.69 1.215 99.69 1.215Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.162" d="M2176.67 2001.62c6.83 7.1 14.9 18.51 9.55 31.06-4.55 10.7-21.03 22.26-32.73 32.3-12.63 10.82-28.34 23.81-40.76 26.69-12.6 2.92-21.88-4.38-28.25-11-6.63-6.9-12.74-15.37-7.86-27.5 4.42-11 18.93-25.49 31.04-35.87 11.96-10.25 26.24-25.42 38.15-28.58 13.43-3.57 24.16 5.92 30.86 12.9Zm-20.88 17.19c2.96 3.07 7.31 8.01 5.13 13.9-2.49 6.71-12.12 14.55-18.89 20.35-7.13 6.11-16.04 12.86-22.8 13.85-5.3.78-8.92-3.12-11.7-6.01-2.89-3.01-7.54-7.25-5.99-12.41 1.84-6.11 10.68-13.36 17.58-19.27 7.06-6.05 17.78-15.76 25.1-17.51 5.86-1.39 8.76 4.17 11.57 7.1Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.146" d="M2152.31 2003.56c-4.04 8.35-5.28 24.46 2.17 25.05 8.15.64 46.29-38.93 46.29-38.93l-22.08-11.16s-22.35 16.69-26.38 25.04Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.269" d="M2043.05 2101.33c10.11 10.51 22.53 27 17.47 43.12-4.3 13.74-24.16 26.97-37.98 38.82-14.9 12.78-33.52 28.02-49.41 30.15-16.12 2.16-29.49-8.96-38.91-18.77-9.81-10.2-19.19-22.45-14.68-38.07 4.09-14.18 20.9-31.61 35.19-43.86 14.12-12.11 30.52-30.49 45.69-33.07 17.11-2.9 32.71 11.36 42.63 21.68Zm-24.75 20.18c4.37 4.55 10.87 11.8 8.93 19.42-2.21 8.67-13.65 17.85-21.64 24.7-8.41 7.22-19.09 15.03-27.82 15.41-6.85.31-12.23-5.44-16.34-9.72-4.28-4.46-11.06-10.81-9.83-17.53 1.46-7.96 11.94-16.45 20.09-23.44 8.33-7.14 20.9-18.69 30.26-20 7.49-1.06 12.19 6.83 16.35 11.16Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn38(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.252" d="M1903.92 2217.56c9.86 9.33 21.77 24.43 15.55 41.47-5.29 14.53-26.7 30.59-41.76 44.45-16.24 14.95-36.49 32.9-53.11 37.16-16.87 4.33-30.08-5.2-39.27-13.91-9.57-9.07-18.57-20.26-12.96-36.72 5.1-14.94 23.6-34.87 39.18-49.21 15.37-14.16 33.5-35 49.41-39.62 17.94-5.21 33.29 7.21 42.96 16.38Zm-26.91 23.76c4.27 4.05 10.58 10.55 8.11 18.54-2.81 9.1-15.24 19.93-23.95 27.95-9.17 8.44-20.72 17.79-29.81 19.33-7.13 1.22-12.37-3.91-16.38-7.71-4.18-3.96-10.83-9.51-9.15-16.5 1.98-8.27 13.38-18.29 22.26-26.46 9.08-8.36 22.83-21.75 32.62-24.32 7.84-2.06 12.24 5.33 16.3 9.17Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.122" d="M1659.21 2474.83c-10.76-7.83-24.01-21.27-18.74-40.24 4.5-16.18 25.48-37.07 40.07-54.44 15.73-18.74 35.4-41.38 52.23-49.04 17.08-7.79 31.29-.42 41.34 6.89 10.44 7.59 20.44 17.53 15.74 35.78-4.26 16.56-21.99 40.93-37.08 58.9-14.9 17.75-32.19 42.99-48.26 50.9-18.13 8.91-34.74-1.07-45.3-8.75Zm26.14-30c-4.67-3.39-11.58-8.95-9.57-17.77 2.3-10.02 14.38-23.73 22.81-33.78 8.89-10.58 20.16-22.56 29.42-25.94 7.26-2.65 12.99 1.68 17.37 4.87 4.56 3.32 11.77 7.82 10.51 15.43-1.51 9.02-12.58 21.67-21.18 31.91-8.8 10.48-22.07 27.1-31.97 31.68-7.94 3.67-12.96-3.18-17.39-6.4Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.542" d="M1627.43 2448.51c10.72 10.37 23.77 27.6 17.6 49.35-5.24 18.55-27.58 40.87-43.22 59.74-16.87 20.35-37.93 44.86-55.48 52.07-17.81 7.32-32.1-2.89-42.1-12.56-10.4-10.07-20.26-22.83-14.71-43.79 5.02-19.04 24.16-45.79 40.35-65.31 15.97-19.27 34.7-47.11 51.48-54.68 18.93-8.53 35.56 5 46.08 15.18Zm-27.98 32.48c4.64 4.49 11.51 11.77 9.1 21.92-2.76 11.55-15.68 26.38-24.73 37.29-9.52 11.49-21.55 24.38-31.18 27.35-7.54 2.33-13.24-3.38-17.6-7.6-4.54-4.39-11.76-10.47-10.16-19.28 1.9-10.45 13.75-24.14 22.97-35.26 9.44-11.38 23.7-29.51 34.03-33.84 8.28-3.46 13.15 5.14 17.57 9.42Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.003" d="M1281.1 2677.86c-13.41-14.92-29.62-38.49-21.29-62.48 7.09-20.45 36.02-40.97 56.34-59.14 21.93-19.6 49.27-43.03 71.77-47.01 22.83-4.04 40.78 11.59 53.28 25.51 13.02 14.48 25.27 32 17.75 55.21-6.82 21.08-31.78 47.63-52.81 66.42-20.76 18.56-45.21 46.49-66.74 51.09-24.28 5.19-45.14-14.95-58.3-29.6Zm36.34-31.01c-5.81-6.46-14.39-16.77-11.09-28.08 3.76-12.87 20.54-26.99 32.3-37.5 12.38-11.07 27.98-23.13 40.29-24.17 9.65-.81 16.77 7.36 22.23 13.43 5.68 6.32 14.73 15.3 12.5 25.25-2.66 11.79-18.05 24.85-30.03 35.56-12.26 10.96-30.81 28.62-44.06 31.06-10.61 1.95-16.62-9.4-22.14-15.55Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn39(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.25" d="m2083.11 2052.69 9.09-14.49s27.81 16.12 22.49 23.48c-10.7 14.8-86.64 65.35-86.64 65.35s-21.06 17.45-24.53 2.73c-3.48-14.72 10.47-19.41 10.47-19.41l69.12-57.66Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.885" d="m1958.51 2186.46 18.57-8.33s-18.86-34.29-28.32-29.26c-19.03 10.12-85.84 89.96-85.84 89.96s-22.83 21.64-4.58 27.78c18.25 6.14 24.79-9.19 24.79-9.19l75.38-70.96Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.639" d="m1727.4 2366.36-18.67 9.4s24.13 33.21 33.55 27.63c18.95-11.22 80.11-94.94 80.11-94.94s21.58-22.96 1.5-28.04c-20.09-5.09-25.16 10.62-25.16 10.62l-71.33 75.33Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.335" d="m1691.26 2444.19 20.32-5.73s-11.84-41.48-22.36-37.69c-21.14 7.62-104.52 83.39-104.52 83.39s-27.32 19.64-10.3 29.87c17.02 10.22 26.73-5.52 26.73-5.52l90.13-64.32Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn40(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.222" d="m1528.38 2558.44 23.29 2.12s.6-51.96-11.71-52.13c-24.76-.33-136.85 50.14-136.85 50.14s-35.08 10.66-20.33 29.44c14.76 18.78 29.99 5.07 29.99 5.07l115.61-34.64Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.115" d="m1348.71 2664.16 13.27-21.85s-55.63-24.33-61.61-12.34c-12.04 24.11-10.59 157-10.59 157s-5.08 39.26 22.09 33.38c27.17-5.88 19.6-27.07 19.6-27.07l17.24-129.12Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M2155.05 2041.21c-22.3 16.8-42.61 21.56-59.25 42.56-.15 6.99 6.72 8.2 19.08 4.9l65.61-43.13-6.37-25.14-19.07 20.81ZM264.319 1149.93l-.364 23.15c25.413 21.03 52.389 35.74 81.014 43.77l14.464-8.31 9.817 6.51-4.656 23.48c17.409 21.85 42.665 37.83 77.89 46.32l17.238-7.82 12.08 12.08-4.407 13.63 51.134 57.31 12.736 23.8-9.483 56.41-21.346 15.07 49.014-14.86-12.831-8.34 5.463-25.5 7.548 7.04-30.788-81.33-6.808 6.55-25.316-33.78 11.2','45 2.57-65.414-66.91 6.072 16.59-10.432 4.89-39.823-28.11 11.361-3.2-73.291-53.37 9.003 13.58-46.209-21.43 10.396-6.54 1.872-16.56-37.179 3.31Zm1761.351 999.74c-50.28 33.07-96.94 32.08-126.58 85.15l42.73-27.78 34.98 1.78c28.75-7.21 54.09-31.44 79.82-53.75l.01-43.92 39.81-39.34-74.24 51.29 3.47 26.57Zm-141.29 115.31c-28.85 28.62-62.06 43.24-82.93 72.47l26.93-1.52c27.81-17.66 56.98-39.51 89.53-71.94.11-28.67-.4-36.36-6.94-30.12l-26.59 31.11Zm-134.9 125.29c-29.71 52.98-61.16 65.06-92.55 78.86 7.57 12.28 16.95 21.5 36.24 13.91 17.13-3.78 33.59-5.99 95-112.51l13.67-39.22-52.36 58.96Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1597.44 2516.48c-14.05 24.83-30.79 42.39-50.98 50.34 13.62-25.91-24.31-16.73-101.77 10.28l40.15-.28c17.27 11.45 31.2 32.55 56.29 32.','43 37.78-27.25 73.39-62.17 102.75-118.91l55.45-58.17c-45.44 22.06-80.94 49.35-101.89 84.31Zm-181.74 79.21c-21.12 29.89-44.87 48.3-70.82 57.27l-20.57 64.75 35.45-23.11c36.84-30.68 72.73-62.83 99.03-109.9l-43.09 10.99Z" clip-rule="evenodd"/></g><defs><clipPath id="b"><path fill="#fff" d="M0 0h2160v2700H0z"/></clipPath></defs></svg>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn36(colors),renderFn37(colors),renderFn38(colors),renderFn39(colors),renderFn40(colors)));
      
        return render;
      }
}