//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_02_POD_gunner_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" d="M1088.3 2081.31c296.66 0 537.16-273.99 537.16-611.97s-240.5-611.965-537.16-611.965c-296.667 0-537.161 273.985-537.161 611.965s240.494 611.97 537.161 611.97Z"/><path stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9" d="m588.098 1599.59 77.416-12.6 30.152 16.71c48.177 156.49 113.847 295.05 179.375 433.76m722.079-469.94-77.41-12.6-30.16 16.71c-48.17 156.49-113.84 295.05-179.37 433.76"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="m804.994 979.563 16.757 43.867-28.184 47.61 15.838 74.29-20.975 32.33-12.346 44.52-59.028-31.31-8.048-89.26-12.113-34.36-10.382 14.25c14.547 62.24 5.361 54.21-13.269 18.22l-16.302 22.39 27.172 44.97.739 31.53 10.714 32.96-27.19 21.47-39.043-56.44-17.641 63.96 46.573 41.95 67.833 17.43 39.716 7.94',' 53.218-12.89-2.001-37.38 32.766 28.53 36.514 18.89-5.238 41.99 27.061 65.51-19.301 44.28 12.586 49.63 1.17 40.8 12.442 2.19 11.84-31.57-14.378-21.86 21.595-76.67-19.281-95.78 7.925-20.81-34.684-28.86 20.368-29.19 43.793-155.15 13.617-134.652-27.608-70.763-40.771 21.406-15.112 98.369 26.064 55.73-18.284 32.25-3.602 34.65 12.566 55.74-22.044 30.37 15.433 41.79-38.264-16.98-19.787-58.98-.295-39.86 7.811-57.57-9.861-17.79-15.006-11.99 20.649-35.73 28.056-5.4 3.391-91.963-17.643 11.382c-.571 59.871-7.041 56.961-22.571 18.033l-23.955 11.981Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m1010.52 1445.45 147.56-3.21a6.007 6.007 0 0 1 6.13 5.81l2.7 85.28a5.99 5.99 0 0 1-2.83 5.29s-43.93 27.17-77.46 32.66c-14.21 2.33-29.27-1.84-42.19-7.9-18.6-8.73-32.63-21.15-32.63-21.15a5.971 5.9','71 0 0 1-2.01-4.14l-5.13-86.29a6 6 0 0 1 5.86-6.35Zm.13 6 5.13 86.29s37.28 32.96 69.87 27.62 75.27-31.83 75.27-31.83l-2.71-85.29-147.56 3.21Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4" d="M1023.5 1486.88s-4.71 20.84 6.12 23.1c10.84 2.26 116.93-4.32 116.93-4.32l.8-18.92-8.16-3.24.91 15.39-106.16 3.16-5.16-17.86-5.28 2.69Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1128.72 1508.77s-94.24-1.21-95.44 2.31c-.43 1.26 92.77 6.22 92.16 7.73-3.59 8.89-10.41 21.16-21.82 25.81-14.69 5.99-27.12 12.01-27.12 12.01 26.44-1.7 54.65-8 77.73-30.18l-1.93-69.83-118.18 29.46c34.09.87 66.3 3.66 94.06 10.98l8.43-.21 3.63-9.75 7.22.06-1.1 20.56-17.64 1.05Z" clip-rule="evenodd"/><path fill=','"',colors[1].toColor(),'" fill-rule="evenodd" d="m1023.3 1458.56.2 28.32 7.01-3.77 104.75-1.53 11.17 3.68.7-27.52-123.83.82Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m1023.28 1455.57 123.83-.83c.81-.01 1.59.32 2.16.89.57.58.88 1.37.86 2.18l-.7 27.53c-.02.95-.5 1.83-1.27 2.38-.78.54-1.77.69-2.67.39l-10.69-3.53-103.51 1.52-6.37 3.42c-.92.5-2.04.48-2.95-.06-.9-.54-1.46-1.51-1.47-2.56l-.2-28.31c-.01-.8.3-1.56.86-2.13.56-.57 1.32-.89 2.12-.89Zm.02 2.99.2 28.32 7.01-3.77 104.75-1.53 11.17 3.68.7-27.52-123.83.82Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[2].toColor(),'" fill-rule="evenodd" d="m965.958 1333.32-.046 8.2 35.688.83 1.89-12.6-37.532 3.57Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m965.674 1330.33 37.526-3.57c.92-.08 1.83.26 2.46.93.64.66.93 1.59.79 2.51l-1.88 12.59a3.013 3.013 0 0 1-3.04 2.56l-35.687-.83a3.003 3.003 0 0 1-2.931-3.02l.046-8.2a3.004 3.004 0 0 1 2.716-2.97Zm.284 2.99-.046 8.2 35.688.83 1.89-12.6-37.532 3.57Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="m1147.38 1343.56-13.27-.38-2.32 51.12-8.18-.53-.64-50.78-13.51 3.66.77-14.91 39.04-.78-1.89 12.6Zm-38.09 53.34 37.53-3.56-1.89 12.6-35.69-.83.05-8.21Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m1120.6 1392.82-.58-45.92-9.78 2.65c-.92.25-1.92.04-2.67-.56a3.03 3.03 0 0 1-1.11-2.49l.77-14.91a3.003 3.003 0 0 1 2.94-2.85l39.04-.78a3 3 0 0 1 2.31 1.02c.58.66.84 1.55.71 2.43l-1.88 12.59a3.01 3.01 0 0 1-3.06 2.56l-10.32-.3-2.05 45.19 11.62-1.1c.92-.09 1.82.26 2.46.92.63.67.92 1.6.79 2.51l-1.89 12.6a2.996 2.996 0 0 1-3.04 2.55l-35.69-.83c-1.63-.03-2.93-1.38-2.93-3.01l.05-8.2a2.996 2.996 0 0 1 2.72-2.97l11.59-1.1Zm-11.31 4.09-.05 8.2 35.69.83 1.89-12.6-37.53 3.57Zm38.09-53.35 1.89-12.6-39.04.78-.77 14.91 13.51-3.66.64 50.78 8.18.53 2.32-51.12 13.27.38Z" ','clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="m1208.83 1344.49-17.79-1.87-1.15 65.16-17.98-1.91 5.33-63.4-12.53.29-2.21-13.46 44.12.07 2.21 15.12Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m1208.51 1347.48-14.53-1.53-1.09 61.87c-.01.85-.38 1.64-1.01 2.2-.63.56-1.47.82-2.3.74l-17.98-1.91a3.006 3.006 0 0 1-2.68-3.24l5.05-60.06-9.19.21a3.01 3.01 0 0 1-3.04-2.52l-2.2-13.46a2.984 2.984 0 0 1 2.96-3.48l44.12.07c1.49 0 2.75 1.1 2.97 2.57l2.21 15.12a3.012 3.012 0 0 1-3.29 3.42Zm.32-2.99-2.21-15.12-44.12-.07 2.2 13.46 12.54-.29-5.33 63.4 17.98 1.91 1.15-65.16 17.79 1.87Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="m969.476 1365.84-.046 9.27 35.69.94 1.89-14.24-37.534 4.03Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m969.156 1362.86 37.534-4.04c.91-.09 1.82.23 2.46.89.65.66.95 1.58.83 2.49l-1.89 14.24a2.988 2.988 0 0 1-3.05 2.6l-35.689-.93a3.003 3.003 0 0 1-2.921-3.01l.046-9.27a2.998 2.998 0 0 1 2.68-2.97Zm.32 2.98-.046 9.27 35.69.94 1.89-14.24-37.534 4.03Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="m968.425 1396.77-.046 10.09 35.691 1.02 1.89-15.5-37.535 4.39Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m968.077 1393.79 37.533-4.39c.91-.11 1.82.21 2.47.86.65.65.97 1.57.85 2.48l-1.88 15.5a2.996 2.996 0 0 1-3.07 2.63l-35.687-1.01a3.008 3.008 0 0 1-2.914-3.02l.046-10.09a3.002 3.002 0 0 1 2.652-2.96Zm.348 2.98-.046 10.09 35.691 1.02 1.89-15.5-37.535 4.39Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="m1046.57 1371.04-24.64-35.78 20.09.03 15.3 21.11 15.45-21.22 20.08-.17-25.72 30.92 25.48 39.18-21.38-1.55-14.01-19.41-14.14 19.51-21.4 1.69 24.89-34.31Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m1043.08 1371-23.5-34.12c-.61-.88-.68-2.01-.18-2.95.49-.94 1.46-1.53 2.53-1.53l20.08.03c.92 0 1.78.44 2.32 1.18l12.99 17.93 13.13-18.04c.54-.72 1.39-1.17 2.29-1.17l20.09-.17c1.1-.01 2.13.62 2.6 1.63.47 1.01.33 2.19-.39 3.06l-24.37 29.29 24.34 37.41a2.863 2.863 0 0 1-2.6 4.41l-21.39-1.55c-.84-.06-1.61-.49-2.11-1.18l-11.69-16.2-11.82 16.31c-.5.67-1.26 1.1-2.1 1.16l-21.39 1.7c-1.11.09-2.17-.48-2.71-1.45-.55-.97-.48-2.17.17-3.08l23.71-32.67Zm3.49.04-24.89 34.31 21.4-1.69 14.14-19.51 14.01 19.41 21.38 1.55-25.48-39.18 25.72-30.92-20.08.17-15.45 21.22-15.3-21','.11-20.09-.03 24.64 35.78Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6" d="m954.78 1424.41-4.145 229.79 44.636 21.13-16.006 24.9-86.143-4.78-18.879 29.2 29.385 31.03L826 1968.59m384.08-545.34 4.66 230.34-44.63 21.13 16 24.9 86.15-4.78 18.88 29.2-29.39 31.03 77.63 212.91"/><path fill="#000" fill-rule="evenodd" d="M1457.11 1742.98c7.65-3.41 15.71-3.95 22.71-2.23 8.3 2.03 15.03 7.38 18.35 15.01 3.32 7.84 2.33 16.64-2.02 24.26-3.78 6.62-10.21 12.27-18.36 15.63-8.25 3.16-16.78 3.45-24.04 1.21-8.37-2.58-15.08-8.33-17.97-16.35-2.76-7.85-1.47-16.37 3.21-23.56 3.95-6.07 10.21-11.2 18.12-13.97Zm1.3 3.27c-6.7 2.99-11.82 7.86-14.86 13.43-3.18 5.81-3.92 12.42-1.36 18.31 2.43 5.72 7.62 9.47 13.79 11.1 5.7 1.51 12.29 1.1','6 18.62-1.45 6.42-2.45 11.48-6.73 14.62-11.76 3.4-5.44 4.67-11.76 2.56-17.61-2.13-6.06-7.15-10.38-13.42-12.44-5.99-1.97-13.04-2-19.95.42Zm-51.64 71.57c8.46-3.77 17.37-4.39 25.11-2.51 9.2 2.24 16.65 8.13 20.32 16.57 3.67 8.66 2.55 18.39-2.29 26.82-4.19 7.31-11.3 13.54-20.32 17.26-9.12 3.49-18.54 3.82-26.57 1.37-9.27-2.84-16.71-9.18-19.91-18.05-3.04-8.67-1.6-18.1 3.6-26.04 4.38-6.7 11.31-12.36 20.06-15.42Zm1.44 3.62c-7.41 3.3-13.09 8.68-16.46 14.82-3.53 6.43-4.37 13.73-1.55 20.24 2.68 6.32 8.44 10.44 15.26 12.23 6.31 1.66 13.6 1.26 20.61-1.63 7.1-2.71 12.71-7.43 16.2-12.99 3.78-6.01 5.19-12.99 2.86-19.46-2.35-6.69-7.91-11.45-14.85-13.71-6.63-2.16-14.42-2.19-22.07.5Zm84.48-154.83c8.73-4.28 18.03-4.88 25.55-2.58 6.36 1.96 11.38 6.1 14.15 11.82 3.39 7.2 2.42 15.63-2.03 23.09-3.59 6.03-9.58 11.3','3-17.16 14.77-7.67 3.24-15.62 4.04-22.47 2.59-8.49-1.8-15.32-6.82-18.28-14.22-2.31-5.92-1.92-12.43.98-18.43 3.43-7.1 10.19-13.53 19.26-17.04Zm1.45 3.32c-6.2 3.05-10.95 7.64-13.84 12.71-3.09 5.43-3.86 11.46-1.36 16.62 2.35 4.99 7.41 7.9 13.33 8.88 5.37.9 11.49.14 17.38-2.54 5.96-2.51 10.69-6.5 13.69-11.06 3.31-5.03 4.62-10.74 2.57-15.87-2.07-5.34-7-8.88-13.07-10.29-5.67-1.32-12.25-.94-18.7 1.55Zm26.17-86.56c9.26-5.21 19.48-6.39 27.96-4.26 7.08 1.78 12.87 5.99 16.36 12.04 4.34 7.67 3.97 16.94-.26 25.35-3.45 6.86-9.63 13.06-17.74 17.29-8.22 3.99-16.95 5.31-24.64 4.06-9.37-1.53-17.19-6.62-21.02-14.49-3.66-7.75-2.97-16.7 1.68-24.59 3.7-6.26 9.75-11.87 17.66-15.4Zm1.84 3.67c-6.53 3.68-11.33 8.95-14.04 14.63-2.88 6.03-3.18 12.56-.05 17.97 2.98 5.26 8.72 8.13 15.23 8.89 5.94.7 12.59-.47 18.82-3.71'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(' 6.27-3.05 11.09-7.63 13.95-12.74 3.15-5.59 4.09-11.8 1.46-17.21-2.68-5.67-8.3-9.26-14.99-10.49-6.31-1.17-13.5-.42-20.38 2.66Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M1456.34 1755.31c-15.45 6.14-17.83 16.05-13.86 24.82 6.21 13.69 20.57 14.51 28.5 12.73 16.24-3.65 29.15-9.34 23.66-23.34-5.49-14-22.85-20.34-38.3-14.21Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M1455.67 1753.63c7.88-3.58 16.37-3.93 23.79-1.76 8.34 2.44 15.19 8.22 18.72 16.26 3.46 8.11 1.65 14.14-2.92 18.82-2.28 2.34-5.4 4.31-9.15 5.93-4.09 1.77-8.98 3.09-14.18 4.23-5.08 1.01-12.43 1.14-19.09-1.79-5.41-2.38-10.44-6.61-13.39-13.82-2.48-6.17-2.5-12.69 1.7-18.33 2.76-3.71 7.37-7.11 14.52-9.54Zm1.34 3.36c-5.81 2.65-9.49 5.77-11.52 9.11-2.51 4.13-2.04 8.58.03 12.65 2.49 5.01 6.29 7.78 10.28 9.25 5.06 1.87 10.49 1.54 14.22.61 4.63-1.07 8.96-2.33 12.64-3.87 2.65-1.1 4.96-2.31 6.64-3.88 2.54-2.37 3.37-5.54 1.79-9.95-2.22-6.4-7.26-11.11-13.5-13.55-6.21-2.43-13.52-2.79-20.58-.37Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1405.91 1831.44c-17.11 6.79-19.77 17.74-15.38 27.41 6.85 15.12 22.75 16 31.53 14.02 17.98-4.05 32.27-10.34 26.22-25.8-6.06-15','.45-25.26-22.43-42.37-15.63Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M1492.37 1678.67c-14.75 6.46-18.96 11.63-13.71 23.69s16.63 15.87 31.38 9.41c14.75-6.46 19.77-17.39 18.57-22.95-2.78-12.87-21.49-16.61-36.24-10.15Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[4].toColor(),'" fill-rule="evenodd" d="M1491.64 1677.01c8.64-4.31 18.76-5.12 26.66-2.74 7.06 2.13 12.24 6.93 14 13.75.91 3.64-.03 9.27-4.01 14.96-3.25 4.61-8.62 9.27-16.48 12.83-7.92 3.29-14.97 4.03-20.8 2.47-6.97-1.87-12.4-6.77-15.46-14.57-2.4-6.31-2.69-11-.89-14.84 2.18-4.67 7.57-8.3 16.98-11.86Zm1.46 3.31c-5.94 2.98-9.97 5.57-12.16 8.53-2.37 3.23-1.78 6.87.82 12.16 2.48 5.18 6.3 8.36 11.14 9.37 4.4.93 9.57.02 15.37-2.65 5.04-2.15 8.8-4.88 11.51-7.7 3.75-3.9 5.62-7.78 5.13-10.41-.98-5.74-6.04-9.23-12.27-10.69-6.02-1.41-13.1-1.05-19.54 1.39Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M1520.53 1597.38c-15.85 7.99-18.79 11.22-12.03 24.11 6.77 12.9 14.46 15.84 30.31 7.86 15.85-7.99 22.83-12.95 19.49-21.89-5.09-13.6-21.91-18.06-37.77-10.08Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M1519.61 1595.55c7.76-4.47 15.91-5.88 23.04-4.8 8.91 1.36 16.1 6.78 19.7 15.2 2.12 5.1 1.55 9.36-1.04 13.42-1.88 2.96-5.17 5.86-9.94 8.84-2.86 1.78-6.33 3.58-10.32 5.59-8.65 4.12-15.26 5.4-20.55 4.21-6.39-1.43-11.33-6.15-15.4-14.73-3.13-6.8-4.03-11.39-2.73-15.06.76-2.18 2.16-4.17 4.55-6 2.78-2.12 6.92-4.18 12.69-6.67Zm1.85 3.66c-6.2 3.59-10.2 6.16-12.18 8.92-2.16 3.01-.64 6.07 2.62 11.58 3.1 5.37 6.11 8.64 10.33 9.31 3.81.6 8.32-.93 14.34-4.13 7.07-3.47 12.27-6.26 15.45-9.17 2.2-1.99 3.15-3.97 2.22-6.74-1.97-6.12-6.79-10.18-12.91-11.77-5.93-1.53-12.91-1.03-19.87 2Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M724.727 1783.93c7.906 2.77 14.168 7.9 18.119 13.97 4.68 7.18 5.968 15.71 3.214 23.56-2.894 8.02-9.605 13.77-17.973 16.35-7.263 2.24-15.791 ','1.95-24.037-1.21-8.158-3.36-14.581-9.01-18.362-15.63-4.35-7.62-5.344-16.42-2.02-24.26 3.317-7.64 10.047-12.98 18.347-15.01 7.004-1.72 15.057-1.18 22.712 2.23Zm-1.301 3.27c-6.913-2.42-13.962-2.39-19.953-.42-6.264 2.06-11.286 6.38-13.412 12.44-2.111 5.85-.85 12.17 2.552 17.61 3.146 5.03 8.207 9.31 14.619 11.76 6.338 2.61 12.925 2.96 18.628 1.45 6.164-1.64 11.36-5.38 13.786-11.1 2.559-5.89 1.816-12.5-1.36-18.31-3.039-5.57-8.161-10.45-14.86-13.43Zm51.641 71.56c8.745 3.07 15.674 8.73 20.057 15.43 5.202 7.94 6.642 17.37 3.599 26.04-3.198 8.86-10.633 15.21-19.91 18.05-8.026 2.45-17.452 2.12-26.567-1.37-9.022-3.72-16.129-9.95-20.323-17.26-4.838-8.43-5.955-18.16-2.282-26.82 3.665-8.44 11.12-14.33 20.319-16.57 7.74-1.88 16.643-1.26 25.107 2.5Zm-1.438 3.63c-7.649-2.69-15.445-2.66-22.071-.5-6.939 2.26','-12.502 7.02-14.85 13.71-2.331 6.47-.921 13.45 2.86 19.46 3.49 5.55 9.097 10.28 16.194 12.99 7.016 2.89 14.303 3.29 20.611 1.63 6.827-1.79 12.581-5.92 15.259-12.23 2.827-6.51 1.989-13.81-1.543-20.24-3.374-6.14-9.048-11.52-16.46-14.82Zm-84.485-154.83c9.067 3.5 15.834 9.94 19.26 17.04 2.897 6 3.289 12.51.985 18.43-2.959 7.4-9.794 12.42-18.279 14.22-6.855 1.45-14.801.65-22.474-2.59-7.579-3.44-13.566-8.74-17.161-14.77-4.446-7.46-5.419-15.89-2.024-23.09 2.762-5.72 7.784-9.86 14.143-11.82 7.52-2.31 16.826-1.71 25.55 2.58Zm-1.451 3.32c-6.449-2.49-13.032-2.87-18.695-1.55-6.072 1.41-11.001 4.95-13.077 10.29-2.05 5.13-.732 10.84 2.577 15.87 2.998 4.56 7.727 8.55 13.69 11.06 5.886 2.68 12.013 3.44 17.379 2.54 5.919-.98 10.982-3.89 13.333-8.88 2.492-5.16 1.722-11.19-1.367-16.62-2.884-5.07-7.637-9.66-1'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors)));
      
        return render;
      }
}