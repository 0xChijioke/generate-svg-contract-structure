//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_05_BODY_squido_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m399.409 1301.31-46.303-223.82-165.696 140.12 46.303 223.82 165.696-140.12Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m445.067 1218.55-46.303-223.82-165.696 140.12 46.303 223.82 165.696-140.12Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="M491.534 1120.73 445.23 896.914 279.535 1037.03l46.303 223.82 165.696-140.12Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="M540.053 1032.76 493.75 808.941l-165.696 140.12 46.303 223.819 165.696-140.12Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="13.686" d="m698.392 907.868 5.734-228.481-192.103 125.338-65.015 10.524-40.321 241.851 291.705-149.232Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1748.29 1278.62 46.3-223.81 165.69 140.12-46.3 223.81-165.69-140.12Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1702.63 1195.86 46.3-223.815 165.7 140.115-46.31 223.82-165.69-140.12Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1656.16 1098.04 46.3-223.811 165.7 140.121-46.3 223.81-165.7-140.12Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1607.64 1010.07 46.31-223.814 165.69 140.12-46.3 223.814-165.7-140.12Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="13.686" d="m1466.12 884.762-5.73-228.481 192.1 125.338 65.01 10.524 40.32 241.847-291.7-149.228Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="16" d="M1120.43 351.093c218.75-4.102 806.02 844.237 847.49 974.657 37.17 116.88-281.41 253.78-281.41 391.55 0 138.38-14.21 271.56-45.54 390.67-26.11 99.28 169.27 22.03 117.69 96.65-47.77 69.1-340.88 292.09-406.7 333.52-84.94 53.45-180.04 82.25-272.75 82.25-96.18 0-187.159-33.32-268.017-92.61-55.776-40.9-334.769-247.97-379.281-311.18-51.035-72.47 134.439-4.21 102.786-99.21-40.191-120.62-62.787-256.46-62.787-400.09 0-92.95-298.136-279.23-280.566-363.64 30.6-147 688.718-998.06 929.085-1002.567Zm-37.94 534.153c-284.606 0-515.67 263.164-515.67 587.304 0 324.15 231.064 587.31 515.67 587.31 284.61 0 515.68-263.16 515.68-587.31 0-324.14-231.07-587.304-515.68-587.304Z" clip-rule=','"evenodd"/><path fill="#fff" fill-opacity=".7" fill-rule="evenodd" d="M1970.73 1340.35s-178.9-282.47-254.51-379.934c-153.2-197.49-490.99-555.694-525.18-572.905-40.73-20.503-67.14-22.456-109.26-11.008l186.43 293.101-122.98 82.405 2.41 61.065c110.72 5.802 213.28 74.303 313.3 162.419l-192.85-220.091-16.99-58.506 66.57-53.801-144.94-222.441c291.52 276.724 557.07 583.826 798 919.696Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1763.61 1576.28-15.1-100.23 31.19-27.96 26.17 93.13m36.2-30.89-22.03-92.02 30.16-30.88 27.2 96.05m-790.53 880.06.55 76.3m-364.471 23.58 70.695-74.46c73.586 51.57 148.287 101.53 253.716 107.37l23.31-51.41 36.48-.4m347.71 10.89-70.69-74.47c-76.77 48.4-154.25 95.91-255 114.1l-22.01-50.'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('52m3.29-2100.463-16.87 486.208M417.998 1219.7c55.432-127.4 128.825-241.055 213.942-345.728l62.585 2.504c41.199-67.846 90.646-130.751 151.282-186.953l246.303 129.872m678.87 400.305c-58.9-116.52-128-225.627-210.97-324.651l-51.57 10.708c-46.88-78.554-98.97-153.002-165.26-216.234l-246.31 129.872M492.297 1950.01l28.974-155.6 54.521-39.11m1094.538 167.19-28.98-155.6-54.52-39.11"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="m237.383 1444.26 62.595-160.62c171.354-176.49 136.293 94.44 186.557 180.43l-18.565 224.55" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m237.383 1444.26 62.595-160.62c171.354-176.49 136.293 94.44 186.556 180.43l-18.564 224.55"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m282.997 1324.66 198.247 176.58-1.987 38.76-212.576-164.05-18.448 46.24 227.732 158.47-3.2 41.1-184.782-129.37 98.818 97.89 80.726 60.98"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="m1920.07 1426.83-62.6-160.62c-171.35-176.49-136.29 94.44-186.55 180.43l18.56 224.55" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1920.07 1426.83-62.6-160.62c-171.35-176.49-136.29 94.44-186.55 180.43l18.56 224.55"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1874.45 1307.23-198.24 176.58 1.98 38.76 212.58-164.05 18.45 46.24-227.73 158.47 3.2 41.1 184.78-129.37-85.47 89.91-94.08 68.96"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1922.1 1431.41-64.96-162.2-184.89 178.38 22.83 222.73"/><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-','linejoin="round" stroke-miterlimit="2" stroke-width="12.002" d="M1081.47 844.879c306.01 0 541.3 276.421 541.3 623.731 0 347.3-224.59 896.05-530.58 896.05-306.011 0-554.06-542.79-554.06-890.11 0-347.3 237.335-629.671 543.34-629.671Zm0 31.897c-289.578 0-523.61 267.774-523.61 596.434 0 328.67 234.032 596.44 523.61 596.44 165.91 0 313.58-87.9 409.46-224.78 71.46-102.04 114.15-231.3 114.15-371.66 0-328.66-234.03-596.434-523.61-596.434Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M396.077 928.279c5.487-19.281 90.481-123.961 90.481-123.961l-155.936 135.88 8.204 46.028-58.334 41.634 5.418 57.97-50.671 38.19 1.901 53.59-46.2 28.93 11.567 90.78L450.69 942.299s-60.1 5.261-54.613-14.02Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d','="M442.368 978.481c-14.408 39.949-145.465 186.159-142.285 219.079 3.18 32.92 51.388 31.6 51.388 31.6l-55.191 49.02-60.686 162.23-47.704-78.93c-32.254-47.5 272.03-431.655 254.478-382.999Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.056" d="M590.048 1972.57c62.52 76.04 129.449 192.22 146.271 218.08 30.807 47.32 34.246 137.63-7.427 155.18-41.673 17.55-97.947-45.28-139.489-143.93-41.556-98.69-58.367-301.11.645-229.33Z" clip-rule="evenodd"/><path fill="#000" d="M699.006 2293.07c26.598-11.2 25.607-73.84-2.213-139.91s-71.936-110.54-98.534-99.34c-26.598 11.2-25.608 73.84 2.212 139.9 27.821 66.07 71.936 110.55 98.535 99.35Z"/><path fill="#fff" d="M662.237 2144.49c10.08-4.24 13.28-19','.49 7.148-34.05-6.132-14.56-19.274-22.92-29.353-18.68-10.08 4.25-13.28 19.49-7.148 34.05 6.131 14.57 19.273 22.93 29.353 18.68Z"/><path fill="#fff" d="M657.321 2178.61c7.062-2.98 9.769-12.55 6.048-21.39-3.722-8.84-12.463-13.59-19.525-10.62-7.061 2.98-9.768 12.55-6.047 21.39 3.722 8.84 12.463 13.59 19.524 10.62Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M402.963 1228.09c40.469-7.93 135.095-157.97 236.509-221.97 27.188-17.16 211.07-111.921 211.07-111.921C642.799 1009.99 542.335 1233.2 531.259 1457.41c19.541 241.81 115.272 504.87 232.402 697.61-10.289-6.39-33.729-5.12-48.105-13.64-51.233-30.35-110.67-86.05-133.768-29.72-6.135 14.97 13.608 107.55 3.637 112.1-10.995 5.01-60.915 10.79-60.915 10.79 16.544 80.28 364.92 339.24 543.4 378.77-32.76 13.68-134.276-8.01-201.025-53.25-1'));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('40.997-95.58-326.356-224.76-447.363-368.63l125.124-47.22c-53.313-149.97-79.431-296.53-77.756-452.96-50.397-57.23-173.126-184.24-226.644-237.92 25.208 2.27 120.306 76.41 132.637 62.71l-120.654-97.38c28.339 7.19 124.403 58.71 134.874 45.89l-125.752-94.05c30.266 9.18 105.548 42.92 118.348 34.49 0 0-7.704-170.84 23.264-176.91Zm1276.197 199.3c-19.36 23.99 12.41 253.78 21.83 244.27L1844.54 1506c-34.02 5.36-64.67 8.56-65.19-7.66l56.76-38.57c-31.87 9.16-59.05 13.16-63.3-8.04l62.26-50.25c-30.73 9.85-53.85 11.41-58.34-7.29l53.98-50.79c-31.27 14.36-50.45 17.33-51.56 3.3-25.39 16.66-45.62 43.62-58.21 37.52-24.69-11.94-.49-103.19-1.58-150.99-12.48 77.94-20.38 169.61-40.2 194.16Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M934.486 2045.82s-21.96 17.78-33.953 14.83c-','17.432-4.29-70.64-40.58-70.64-40.58s-45.993-39.14-73.308-17.86c-15.638 12.18-41.283 66.66-41.283 66.66-89.662-134.68-151.108-303.9-179.587-513.49-13.219-307.39 92.364-495.06 257.223-622.999l-1.749 47.679c-162.892 110.29-228.364 305.78-224.291 562.09 35.86 241.67 166.589 402.58 367.588 503.67Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9" d="m1500.6 1830.62 50.71 30.27-5.8 16.28-59.63-36.87m-718.398 314.53 32.045-62.03 22.648-.05 19.671-31.52-22.361-21.28 18.47-35.56"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.056" d="M1593.29 1988.28c-33.45 4.88-109.53 120.05-163.04 186.03-57.36 70.73-22.54 154.66 7.11 161.57 4','4.04 10.23 107.74-38.89 149.3-137.58 41.54-98.65 57.37-217.46 6.63-210.02Z" clip-rule="evenodd"/><path fill="#000" d="M1469.38 2292.18c-26.6-11.2-25.61-73.84 2.21-139.91 27.82-66.06 71.93-110.54 98.53-99.34 26.6 11.2 25.61 73.84-2.21 139.9-27.82 66.07-71.94 110.55-98.53 99.35Z"/><path fill="#fff" d="M1507.75 2134.07c-10.08-4.25-13.28-19.49-7.15-34.05 6.14-14.56 19.28-22.93 29.36-18.68 10.08 4.24 13.28 19.49 7.15 34.05-6.14 14.56-19.28 22.92-29.36 18.68Z"/><path fill="#fff" d="M1512.66 2168.18c-7.06-2.98-9.77-12.55-6.04-21.39 3.72-8.84 12.46-13.59 19.52-10.62 7.06 2.97 9.77 12.55 6.05 21.39-3.72 8.83-12.47 13.59-19.53 10.62Z"/><path fill="#fff" fill-rule="evenodd" d="M1356.8 1021.61s168.42 205.95 167.9 337.63c-.9 228.59-108.74 465.15-108.74 465.15 109.69-302.53 61.79-579.81-59.16-802.78Zm13','2.06 866.17c-48.87 66.5-148.02 161.65-213.32 192.08-23.59 10.99-143.18 45.15-111.85 14.34 19.1-18.77 63.92-13.68 127.24-47.59 75.82-40.6 136.27-95.66 197.93-158.83Zm-57.09 557.71-1.64 1.56-21.52-21.75c-8.26-8.6-16.2-17.49-24.45-26.09l.52.77c-13.46 9.26-28.75 19.57-51.9 33.17-27.37 16.08-64.16 34.54-105.63 50.03-27.05 10.09-47.24 15.92-55.38 18.31l-.66-2.14c12.06-4.07 60.92-18.92 122.12-50.57 7.31-3.78 45.36-23.26 89.33-52.37.04-.03 1.37-1.22 2.72-.47.05.02.28.15.5.39l45.99 49.16Zm-345.64 11.11-.21-2.12c1.19-.19 14.26-2.28 14.84-2.32.88-.04 1.64.54 1.95 1.19.05.09 4.18 9.26 6.74 16.5 4 11.32 8.01 24.33 8.87 27.09l-1.99.77c-13.36-28.24-13.28-30.02-17.09-41.31-3.42.05-3.42.09-13.11.2Zm-10.94-78.82 2.07-.07c.25 1.86 2.38 16.75 2.55 25.79.13 7.56-.6 21.8-.7 23.69l-2.08.08c-.26-2.01-2.32-18.31-2','.53-25.14-.29-9.09.42-19.68.69-24.35Zm-323.558 31.82-1.482-1.39c1.036-1.39 8.461-11.61 13.778-17.02 4.456-4.54 13.627-12.44 14.843-13.48l1.49 1.4c-1.031 1.36-9.439 12.47-13.398 16.63-5.271 5.54-12.149 11.25-15.231 13.86Zm177.76 76.46.463-2.15c3.011.51 36.251 6.08 56.019 10.51 16.426 3.69 46.436 11.4 50.466 12.43l-.46 2.16c-4.38-.77-39.7-6.95-54.572-10.19-19.808-4.33-42.661-10.36-51.916-12.76Zm582.168-154.88-1.32-1.8c7.36-5.77 24.91-19.53 48.72-54.27 5.54-8.08 11.21-16.44 19.84-30.89 9.78-16.36 17.62-31.44 20.07-36.1l2.01.98c-7.46 16.18-21.69 47.16-41 73.8-22.57 31.13-43.75 45.12-48.32 48.28Zm56.16-472.78-2.15-.66c8.77-30.37 17.75-61.55 30.34-103.35.24-.81.48-1.61.73-2.41.56-1.75 2.62-2.34 4.01-1.36 5.05 3.57 21.7 15.6 29.2 21.11.11.08.74.54.95 1.45 6.46 27.62 19.91 88.18 21.62 95.86l-2.2.5','2c-19.87-76.94-23.94-94.18-24.03-94.32-1.92-2.77-5.52-3.89-8.28-5.84-2.58-1.83-5.3-3.47-7.74-5.5-3.67-3.05-6.88-6.65-10.56-9.71-1.56 5.88-2.28 11.96-3.85 17.85-.05.2-7.7 24.06-10.42 32.45l-17.62 53.91Zm59.34-544.08-2.2.59c-8.29-29.29-29.9-103.2-76.25-190.99-31.78-60.2-62.52-101.3-76.08-119.12l1.79-1.4c22.31 27.97 69.53 89.63 107.64 177.53 25.28 58.32 38.48 107.64 45.1 133.39Zm-324.75-588.783-.97-2.041c3.38-1.667 41.82-20.66 42.21-20.781a1.936 1.936 0 0 1 1.93.501c4.54 4.655 12.76 13.582 13.86 14.775 32.16 34.906 57.98 67.449 86.12 108.102 6.36 9.183 12.88 19.082 13.99 20.754 6.34 9.636 10.09 15.603 13.41 20.844l-1.9 1.238c-17.49-25.8-40.22-58.043-77.32-103.423-7.01-8.565-23.63-29.057-47.87-56.226-.99-1.114-1-1.106-1.03-1.156-.61-.986-.36-1.108-.96-2.093l-41.47 19.506Zm230.36 190.099-.51-2.','197c25.94-6.431 25.94-6.459 26.26-6.487.87-.075 1.34.514 1.41.61.31.394 12.12 15.494 15.81 20.302 26.82 34.964 46.69 62.379 77.68 110.056.49.77 5.83 9.01 12.2 19.06 6.39 10.09 9.1 14.49 12.64 20.19l-1.9 1.23c-16.27-24.24-31.4-46.39-58.54-84.474-23.74-33.295-30.98-43.82-59.87-83.536l-25.18 5.246ZM1824.27 1251l1.47-1.63c1.56 1.3 19.1 15.9 19.52 16.35.67.72.78 1.99-.01 2.9-.06.06-11.07 11.8-19.91 20.33-13.86 13.36-29.84 28.05-33.69 31.59l-1.55-1.55c34.1-37.2 37.04-39.18 50.43-51.9-3.29-3.25-3.33-3.21-16.26-16.09Zm30.6 41.5 1.97-.74c.49 1.07 5.87 12.86 6.05 13.43.24.78-.09 1.66-.49 2.07-.65.68-6.23 6.38-10.91 10.4-8.27 7.12-18.02 14.77-20.03 16.35l-1.43-1.55c18.75-20.25 20.35-20.86 28.28-27.5-.7-2.53-.75-2.51-3.44-12.46Zm19.18 44.87 2-.64c.52 1.28 4.61 11.45 6.31 15.99.64 1.72-.68 2.67-1.03 2.','99-5.77 5.05-10.11 8.74-29.6 22.38l-1.33-1.63c19.61-18.92 20.95-19.12 27.15-23.87-.29-1.23-.77-2.98-2.22-9.41-.57-2.51-.55-2.51-1.28-5.81Zm17.56 48.05 2.02-.6c.48 1.26 5.67 14.97 5.88 15.84.21.89-.19 1.77-.77 2.24-.67.54-6.24 4.88-10.89 7.96-9.35 6.21-20.26 12.79-22.53 14.17l-1.22-1.73c20.46-17.13 22.44-17.95 30.61-23.26-.33-1.56-.96-4.2-3.1-14.62Zm14.49 36.88 1.88-.96c4.37 7.37 4.38 7.36 4.46 7.54.35.77 0 1.62-.41 2-.88.79-9.44 8.3-15.69 12.96-7.57 5.63-22.26 15.35-24.23 16.65l-1.29-1.68c1.69-1.52 15.71-14.12 21.5-18.52.7-.53 4.48-3.4 8.88-6.39 2.49-1.69 5-3.34 7.49-5.03l-2.59-6.57Zm-827.88-599.259-1.02 2.009c-5.38-2.634-77.35-37.694-120.067-59.74-35.304-18.22-99.407-52.343-108.03-56.934l1.029-2.011c9.373 4.603 84.921 41.702 116.896 58.103 42.692 21.894 92.012 48.329 111.192 58.573ZM825.0'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors)));
      
        return render;
      }
}