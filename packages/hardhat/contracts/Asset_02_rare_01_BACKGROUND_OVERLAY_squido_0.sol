//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_squido_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<g clip-path="url(#a)"><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.762" d="M1491.88 1051.36c-8.4 1.66 40.34 16.65 36.12 11.19 1.92-.7 6.27-4.87 4.83-5.15.34-1.21 11.73-6.85 15.04-13.68 3-6.21 2.24-10.18-1.15-5.54-5.94 8.09-18.84 11.45-21.4 12.38-2.45-.74-.59-7.85 3.59-15.42 3.57-6.49 3.28-10.06-.84-6.67-7.99 6.55-11.33 15.22-12.33 15-.79-.18.67-9.22 3.25-14.84 3.25-7.11 4.8-10.38 3.05-10.49-5.33-.37-16.35 21.07-15.88 25.37-1.3.41-.74-5.78 1.01-12.71 1.54-6.07 4.33-12.94 3.09-13.31-4.09-1.22-13.46 24.06-14.07 24.02-2.32-.15 4.6-15.19-.62-12.21-1.12.64-4.57 19.31-3.69 22.06Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.762" d="M1534.91 1063.72c4.48 7.3 7.75 15.18 3.48 22.84-4.53 8.13-38.7 31.71-54.01 25.25-14.25-6.02-17.33-41.92-14.6-51.03 4.01-13.35 15.6-16.04 22.47-16.64-.78-1.89.94-7.22.56-17.29-.38-9.58-2.76-9.24-1.29-10.65 1.52-1.46 4.66.31 7.27 5.28 2.85 5.42 2.74 15.37 3.92 16.24.66-1.07 2.49-12.96 5.27-20.02 2.53-6.42 6.89-8.03 7.28-2.3.24 3.55-3.48 20.69-2.43 23.21 2.21 1.28 6.16-4.9 8.9-13.1 2.34-7.03 5.17-9.24 5.48-3.91.6 10.31-3.52 18.65-2.67 19.24.67.45 6.32-6.75 8.7-12.45 3.02-7.22 4.37-10.57 5.65-9.36 3.87 3.66-4.41 26.3-7.88 28.87.58 1.24 4.74-3.37 8.65-9.36 3.42-5.24 6.58-11.96 7.69-11.29 3.67 2.17-8.56 26.2-8.12 26.63 1.69 1.6 8.05-13.69 9.4-7.84.29 1.26-1.38 8.62-6','.6 13.92-3.08 3.13-4.49 2.54-7.12 3.76Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M1494.19 1100.02c1.92 0 3.48-1.39 3.48-3.1 0-1.71-1.56-3.1-3.48-3.1-1.91 0-3.47 1.39-3.47 3.1 0 1.71 1.56 3.1 3.47 3.1Z"/><path fill="'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" d="M1485.96 1063.87c1.92 0 3.47-1.38 3.47-3.09s-1.55-3.1-3.47-3.1c-1.92 0-3.47 1.39-3.47 3.1 0 1.71 1.55 3.09 3.47 3.09Zm39.72 21.12c1.92 0 3.48-1.38 3.48-3.09s-1.56-3.1-3.48-3.1c-1.91 0-3.47 1.39-3.47 3.1 0 1.71 1.56 3.09 3.47 3.09Z"/><path fill="',colors[2].toColor(),'" d="M1485.36 1109.47c1.92 0 3.48-1.38 3.48-3.09s-1.56-3.1-3.48-3.1c-1.91 0-3.47 1.39-3.47 3.1 0 1.71 1.56 3.09 3.47 3.09Zm-5.4-15.17c1.92 0 3.47-1.38 3.47-3.09s-1.55-3.1-3.47-3.1c-1.92 0-3.47 1.39-3.47 3.1 0 1.71 1.55 3.09 3.47 3.09Zm23.57 9.91c.73.82 2.14.75 3.16-.16s1.26-2.31.54-3.12c-.73-.82-2.14-.74-3.16.16-1.03.91-1.26 2.31-.54 3.12Zm-28.18-33.66c1.17.54 2.51.13 3.01-.93.49-1.06-.05-2.36-1.22-2.91-1.17-.54-2.51-.12-3.01.94-.49 1.06.06 2.36 1.22 2.9Zm-1.25 10.82c1.17.54 2.51.12 3.01-.94.49-1.06-.05-2.36-1.22-2.9-1.17-.55-2.51-.13-3.01.93-.49 1.06.06 2.36 1.22 2.91Zm52.12 10.18c1.17.54 2.51.12 3.01-.94.49-1.06-.06-2.36-1.22-2.9-1.17-.54-2.51-.12-3.01.94-.49 1.06.05 2.35 1.22 2.9Zm-26-16.67c.87.4 1.88.05 2.27-.79.39-.84.01-1.84-.85-2.25-.87-.4-1.88-.05-2.27.79-.39.84-.01 1.84.85 2.25Zm7','.12-1.46c.87.4 1.88.04 2.27-.79.39-.84.01-1.85-.85-2.25-.87-.4-1.88-.05-2.27.79-.39.84-.01 1.84.85 2.25Zm-3.35 7.11c.87.4 1.88.05 2.27-.79.39-.83.01-1.84-.85-2.24-.87-.4-1.88-.05-2.27.79-.39.83-.01 1.84.85 2.24Zm10.18-1.62c.87.4 1.88.05 2.27-.79.39-.84.01-1.84-.85-2.25-.87-.4-1.88-.04-2.27.79-.39.84-.01 1.85.85 2.25Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1524.18 1098.76c-10.47 3.48-6.35-1.44-10.92.04-1.49.48-4.97.41-7.21-.98s-3.16-2.44-4.41-3.21c-.98-.6.44 2.53 2.47 4.25 1.36 1.15 2.82 1.75 2.19 2.27-4.48 3.76-2.75 8.35-15.56 5.47-15.89-3.57-16.77-33.42-15.81-42.59.83-7.97 4.45-14.22 19.34-18.56l.37-1.27c-.15-2.33.79-23.97-2.92-27.6.78 7.6.92 16.39.95 26.07-9.34.91-16.79 5.92-22.25 15.18-1.96 22.38-.27 41.44 14.1 55 13.14 1.84 32.38-9.33 39.66-14.07Z" clip-rule="eve','nodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1538.72 1020.18-4.89 24.5 6.7-18.79-1.81-5.71Zm-13.44-1.08c.96 7.36-.25 8.5-2.06 22.2 0 0 3.4-11.17 3.31-16.86-.07-4.95-1.25-5.34-1.25-5.34Zm-13.75-6.07c1.36 8.22 2.06 7.51 1.2 16.26 0 0 1.32-10.88 1.07-15.33-.22-3.87-2.27-.93-2.27-.93Zm26.19 56.92c1.41 10.05-3.39 18.54-10.63 26.43 5.78-4.7 13.13-8.07 12.87-17.49l-2.24-8.94Zm.48-17.38c3.59-6.86 6.07-14.53 8.58-22.22 0 0-5.3 11.51-6.73 15.22-.82 2.1-1.85 7-1.85 7Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1536.19 1056.14c1.59 1.35 3.81.21 3.06 1.1-.75.88-2.03 2.18-3.46.65-7.21-7.69-6.53-4.33-5.78-5.22.75-.88 4.59 2.12 6.18 3.47Zm1.3 20.24c.68 1.98-.8 5.56-1.9 5.94-1.09.38.61-3.16-.08-5.13-.68-1.97-1.83-3.5-.74-3.88 1.1-.38 2.03 1.1 2.72 3.07Z" clip-rule','="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1544.69 1056.92 3.37-11.13-3.13 6.82-.24 4.31Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1545.38 1055.18c-7.69 7.01-11.69 4.23-17.81-.49l-8.98-5.2c7.52 5.37 13.43 11.03 17.05 17.09l-.67-3.85c4.94-.3 9.92-4.51 10.41-7.55Zm-45.16 4.14s-1.66 5.3-.96 7.96c.77 2.92 9.2 6.42 11.52 6.55l-9.11-.42c-7.34-4.36-9.35-7.1-5.31-8.01l3.86-6.08Zm-18.65 21.98 11.89 4.61 2.4-2.04-.03 2.96-6.99 1.11-7.27-6.64Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.093" d="M1496.69 1065.3c2.97-3.38 4.2-11.79 8.9-10.16.87.3-2.57 9.54-1.47 9.07 3.15-1.37 8.51-13.03 10.84-12.76 6.08.73-3.94 12.13-3.97 13.65-.03 1.51 10.53-8.41 12','.58-7.68 3.89 1.36-9.5 10.78-8.77 11.89.72 1.1 10.82-5.03 11.3-3.99 1.41 3.08-9.01 8.18-9.01 8.18"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.078" d="M1490.74 1070.72c3.2 1.3 4.78 4.89 3.52 8.03-1.27 3.14-2.76 1.37-5.96.08-3.21-1.29-6.92-1.63-5.66-4.76 1.26-3.14 4.89-4.64 8.1-3.35Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.14" d="M1516.75 1083.23c2.53 2.26 2.36 6.03-.43 8.91-2.78 2.88-6.18 3.34-8.71 1.08-2.53-2.26-4.83-6.16-2.04-9.04 2.78-2.88 8.65-3.21 11.18-.95Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterli'));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('mit="1.5" stroke-width="2.994" d="M1490.17 1079.53c.46 0 .82-.85.82-1.89 0-1.05-.36-1.89-.82-1.89-.45 0-.81.84-.81 1.89 0 1.04.36 1.89.81 1.89Zm22.93 10.81c.34.29 1.17-.11 1.85-.91.68-.79.95-1.67.61-1.96-.34-.3-1.17.11-1.85.9-.68.79-.95 1.67-.61 1.97Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.434" d="M419.24 383.809c8.338-8.171-57.348 8.845-48.727 12.516-1.686 2.257-3.67 10.577-1.85 9.873.463 1.738-8.453 17.004-7.391 27.843.962 9.849 4.607 14.192 5.191 6.002 1.023-14.318 13.262-27.859 15.511-30.883 3.288-.858 6.176 9.26 6.775 21.651.517 10.611 3.358 14.806 5.647 7.623 4.429-13.901 2.108-27.042 3.406-27.5 1.013-.351 5.712 11.872 6.749 20.678 1.318 11.15 1.866 16.304 3.927 15.176 6.282-3.431 3.682-37.92.13-42.884 1.183-1.454 4.899 6.595 7.785 16.425 2.531 8.606 4.208 19.122 5.869 18.674 5.481-1.476-1.691-39.501-.968-39.904 2.726-1.499 5.469 22.11 9.281 14.63.818-1.609-8.395-27.161-11.335-29.92Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.434" d="M361.866 399.915c-10.197-5.748-19.44-13.087-19.994-25.653-.591-13.337 21.502-67.34 43.37-70.516 20.361-2.957 49.073 39.098 52.389 52.341 4.848 19.388-6.371 31.157-13.726 36.908 2.214 1.756 4.007 9.593 11.525 21.735 7.161 11.556 12.251 6.077 11.576 8.889-.699 2.91-8.121 6.327-14.567 2.104-7.033-4.611-13.913-16.977-15.856-17.188.01 1.797 6.285 17.808 8.104 28.548 1.656 9.758-3.816 8.705-8.286 1.919-2.764-4.205-8.928-21.844-11.894-24.186-3.4.017-3.534 10.53-.86 22.65 2.287 10.379.645 15.161-3.452 8.813-7.926-12.286-9.133-25.572-10.507-25.681-1.07-.078-2.399 12.933-1.089 21.704 1.653 11.105-1.029 7.604-3.315 7.053-6.967-1.707-10.004-27.061-7.877-32.767-1.523-1.101-','2.999 7.627-3.206 17.862-.185 8.961.956 19.546-.766 19.541-5.68-.016-8.735-38.58-9.539-38.783-3.026-.747.522 22.758-5.122 16.514-1.213-1.344-4.497-11.641-2.325-21.984 1.285-6.108 3.302-6.403 5.417-9.823Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M382.428 325.446c-2.17 1.398-2.955 4.242-1.753 6.352 1.201 2.11 3.935 2.687 6.106 1.29 2.17-1.398 2.956-4.242 1.754-6.352-1.202-2.11-3.936-2.688-6.107-1.29Z"/><path fill="'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" d="M417.151 364.053c-2.17 1.397-2.956 4.241-1.754 6.351 1.202 2.11 3.936 2.688 6.107 1.29 2.17-1.398 2.955-4.242 1.753-6.352-1.202-2.11-3.935-2.687-6.106-1.289Zm-59.793 2.882c-2.17 1.398-2.956 4.242-1.754 6.352 1.202 2.11 3.936 2.688 6.107 1.29 2.17-1.398 2.955-4.242 1.753-6.352-1.202-2.11-3.935-2.687-6.106-1.29Z"/><path fill="',colors[2].toColor(),'" d="M385.77 307.339c-2.17 1.398-2.956 4.241-1.754 6.351 1.202 2.111 3.936 2.688 6.107 1.29 2.17-1.398 2.955-4.241 1.753-6.352-1.201-2.11-3.935-2.687-6.106-1.289Zm16.778 14.784c-2.171 1.398-2.956 4.241-1.754 6.352 1.202 2.11 3.936 2.687 6.106 1.289 2.171-1.397 2.956-4.241 1.754-6.351-1.202-2.11-3.936-2.688-6.106-1.29Zm-33.637 4.946c-1.395-.479-2.945.645-3.462 2.509-.517 1.865.195 3.764 1.59 4.242 1.395.479 2.945-.645 3.462-2.509.517-1.865-.195-3.764-1.59-4.242Zm55.55 21.01c-1.702.179-2.931 1.676-2.744 3.344.186 1.668 1.717 2.874 3.418 2.695 1.702-.18 2.931-1.677 2.744-3.344-.186-1.668-1.716-2.875-3.418-2.695Zm-6.188-14.257c-1.702.179-2.93 1.677-2.744 3.344.187 1.668 1.717 2.874 3.419 2.695 1.702-.179 2.93-1.677 2.744-3.344-.186-1.668-1.717-2.874-3.419-2.695Zm-66.131 25.412c-1.701.179-2.93 ','1.677-2.744 3.344.187 1.668 1.717 2.874 3.419 2.695 1.702-.179 2.93-1.677 2.744-3.344-.186-1.668-1.717-2.874-3.419-2.695Zm41.136 1.63c-1.26.133-2.162 1.309-2.015 2.627.147 1.318 1.288 2.279 2.548 2.146s2.161-1.309 2.014-2.627c-.147-1.318-1.288-2.278-2.547-2.146Zm-7.032 6.993c-1.259.132-2.161 1.308-2.014 2.626.147 1.318 1.288 2.279 2.548 2.146 1.259-.133 2.161-1.309 2.014-2.627-.147-1.317-1.288-2.278-2.548-2.145Zm-1.209-11.224c-1.259.133-2.161 1.309-2.014 2.627.147 1.317 1.288 2.278 2.548 2.145 1.259-.132 2.161-1.308 2.014-2.626-.147-1.318-1.288-2.279-2.548-2.146Zm-10.379 9.424c-1.259.132-2.161 1.308-2.014 2.626.147 1.318 1.288 2.279 2.548 2.146 1.259-.133 2.161-1.308 2.014-2.626-.147-1.318-1.288-2.279-2.548-2.146Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M365.338 405.51','5c-2.618 9.909 8.12 36.6 4.724 43.268-1.246 2.446 1.829-9.645-5.341-4.923-2.133 1.404-2.098-5.199-4.333-10.78-5.319-13.281-5.294-31.503 2.112-31.914l-2.091-2.572c-5.808-3.335-11.059-6.362-14.547-12.538-2.3-4.072-3.5-10.48-4.775-15.808 5.735-31.507 10.193-19.562 8.045-6.577-1.866 11.271.46 21.362 17.914 33.551l.004 1.906c-.091.27 11.869 3.85 11.697 4.488 6.891 2.636-10.317 1.076-13.409 1.899Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m401.705 387.169-.103-18.515s2.638-1.792 3.098.332c.704 3.254-.674 11.164-.761 13.317-.116 2.842-2.234 4.866-2.234 4.866Zm-.002 60.894c.543-10.456-1.197-12.041-5.028-31.404 0 0 5.709 15.74 6.172 23.812.402 7.009-1.144 7.592-1.144 7.592Zm21.362-2.361c-4.069-23.785-2.87-16.811-7.898-36.084 0 0 8.093 19.94 8.554 29.572.399 8.','362-.656 6.512-.656 6.512Zm11.429-65.995c.064-18.706-26.763-72.107-61.463-69.162 5.28-3.88 13.636-13.372 29.696.399 16.315 13.99 25.556 27.386 34.816 45.758-.157 11.151 1.395 17.331-3.049 23.005Zm-13.468 15.029c1.391 3.052 2.945 6.063 4.613 9.046 3.852 6.89 8.312 13.633 12.768 20.401 0 0-5.999-11.965-9.673-18.788a103.958 103.958 0 0 0-1.855-3.335c-1.648-2.792-5.853-7.324-5.853-7.324Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M421.186 399.255c-1.15-2.546-4.607-2.239-3.131-2.986 1.476-.747 3.859-1.743 4.698.94 4.245 13.572 5.456 8.914 3.98 9.661-1.476.747-4.398-5.068-5.547-7.615Zm-19.35-87.126c5.259 3.255 14.881 14.701 12.894 13.918-1.543-.607-8.815-9.025-14.074-12.28-5.26-3.254-10.182-4.119-9.419-5.591.763-1.473 5.34.699 10.599 3.953Z" clip-rule="evenodd"/><path fill="#','fff" fill-opacity=".3" fill-rule="evenodd" d="M391.852 337.209c3.261 4.296 11.685 4.934 21.651 4.481-7.874-1.352-14.785-3.534-18.588-8.397l-3.063 3.916Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M373.313 390.918c-2.306.549-4.625-7.078-.176-11.444 2.915-2.859-.178-5.913 2.932-5.631l-3.786 3.022c-6.758 7.989-6.631 10.227-1.947 16.129l10.012-12.624-3.317 19.53-1.151-11.919-2.567 2.937Zm-5.478-54.631s10.33-5.13 9.181-3.657c-1.148 1.472-1.834 4.485-3.664 4.717-8.793 1.117-13.213 9.584-14.483 12.883 0 0-.413-4.63.513-5.987 1.481-2.172 8.453-7.956 8.453-7.956Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.664" d="M404.007 370.101c-.977 6.344 3.534 17.621-2.932 19.032-1.186.258'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors)));
      
        return render;
      }
}