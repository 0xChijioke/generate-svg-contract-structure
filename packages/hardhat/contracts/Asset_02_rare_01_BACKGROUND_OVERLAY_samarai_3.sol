//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_samarai_3 {

using ToColor for bytes4;

function renderFn11(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('e-miterlimit="1.5" stroke-width="1.905" d="M2063.39 535.948c9.5-8.825 22.13-7.063 29.93 4.216 1.53 2.223 5.39 6.23 7.11 11.964 1.92 6.416 8.76 9.154 9.73 15.931 1.32 9.22-7.63 14.541-12.94 17.855-14.68 9.177-33.85-3.706-39.34-16.688-5.69-13.462-4-24.454 5.51-33.278Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.905" d="M2095.19 578.391c.34 6.577 8.07 14.57 15.99 16.564 3.39-.176 4.8-7.944 4.08-10.992-.73-3.052-6.03-3.075-9.15-8.164-1.82-2.958-8.02-4.361-10.92 2.592Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.01" d="M2075.98 486.193s2.97-11.961 10.09-11.658c7.12','.297 10.77 9.699 9.67 11.308-1.12 1.609-19.76.35-19.76.35Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.675" d="M2099.73 488.825c15.3 9.867 18.8 38.651 7.68 55.893-11.12 17.249-34.79 10.44-50.09.572-15.3-9.867-24.78-34.729-13.66-51.978 11.12-17.242 40.77-14.355 56.07-4.487Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M2043.65 493.312c-1.66 7.813-2.13 15.597 3.33 23.236 13.02 23.914 30.16 36.001 52.75 32.448l3.01 6.586c-9.3 1.508-15.44 4.18-17.99 8.181-1.11 7.121 4.36 18.797 12.06 14.987 1.41-.696-.33 3.739.92 4.811-20.06 16.659-49.51-12.568-39.99-38.784-26.25-21.8-20.14-36.626-14.09-51.465Z" clip-rule="evenodd"/><path fill="#000" fill-rule','="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.986" d="M2081.53 554.632c2.48-1.091 5.88 1.689 6.65 4.133.77 2.438-2.15 7.647-2.03 10.499.11 2.549 1.76 6.8 1.83 9.212.12 3.544-9.71 5.509-11.73 4.428-1.78-.945-1.56-8.471-.74-13.445 1.46-8.919 6.02-14.827 6.02-14.827Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.582" d="M2050.48 505.156s-2.64-1.241-2.93.209c-.3 1.457.72 6.197.72 6.197l7.82 4.452s1.5-.872.9-3.122c-.6-2.251-6.51-7.736-6.51-7.736Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" d="M2045.62 516.285c.92 1.275 3.1 1.841 3.1 1.841s1.59 2.978 2.65 3.559c3.49 1.889 8.52 1.602 10.33.052 0 0-6.43 6.86-9.54 6.761-1.98-.072-2.75-6.026-3.13-9.825" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.549" d="M2045.62 516.285c.92 1.275 3.1 1.841 3.1 1.841s1.59 2.978 2.65 3.559c3.49 1.889 8.52 1.602 10.33.052 0 0-6.43 6.86-9.54 6.761-1.98-.072-2.75-6.026-3.13-9.825"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.582" d="M2061.34 511.041s13.38-10.79 19.12-4.81c5.74 5.973.28 19.199-2.12 20.088-2.41.883-17-15.278-17-15.278Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#0','00" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.136" d="M2108.6 513.701s12.2 6.198 10.08 13.089c-2.12 6.892-13.22 7.882-14.68 6.354-1.46-1.535 4.6-19.443 4.6-19.443Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.288" d="M2055.6 504.86s12.5-11.692 8.78-17.124c-3.71-5.436-16.35-1.01-17.7 1.127-1.34 2.143 8.92 15.997 8.92 15.997Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="'));
      
        return render;
      }

    function renderFn12(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.349" d="M2056.48 496.821c.68.346.81 1.361.81 1.361l-2.51-1.257s1-.451 1.7-.104Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="',colors[0].toColor(),'" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.46" d="M2068.91 510.787c.44.684-.11 1.895-.11 1.895l-1.59-2.484s1.26-.097 1.7.589Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.011" d="M213.554 2317.23c3.226 3.34 6.876 12 .933 18.26-3.115 3.28-10.743-.23-10.427-3.67.858-9.25-2.698-9.47-2.833-12.23-.146-2.88 5.804-6.92 12.327-2.36Zm-11.959-49.71s9.635 5.72 13.944 8.32c4.433 2.68 10.154 8.81 10.225 11.92.12 5.77-6.598 6.69-9.104 5.71-1.083-.42-3.427-6.57-7.268-7.86-4.673-1.55-8.791-4.22-8.791-4.22l.994-13.87Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-mi','terlimit="1.5" stroke-width="2.011" d="M191.837 2264.31c-13.648-1.06-22.937 8.69-21.979 23.13.189 2.85-.372 8.69 1.977 14.56 2.625 6.56-1.234 13.31 2.41 19.55 4.963 8.49 15.856 7.02 22.415 6.27 18.158-2.04 25.555-25.28 21.57-39.61-4.133-14.87-12.746-22.84-26.393-23.9Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.011" d="M193.408 2320.27c4.027 5.66 2.889 17.34-2.356 24.19-2.915 2.08-9.182-3.41-10.58-6.41-1.406-3 2.96-6.5 2.206-12.76-.442-3.63 3.766-8.87 10.73-5.02Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.121" d="M148.772 2231.44s-10.308-7.94-15.997-3.01c-5.6','93 4.92-2.54 15.09-.567 15.69 1.979.6 16.564-12.68 16.564-12.68Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.824" d="M130.864 2249.2c-6.173 18.2 9.823 44.3 30.332 51.26 20.518 6.95 35.618-14.21 41.791-32.41 6.173-18.2-2.307-44.98-22.825-51.94-20.509-6.96-43.125 14.89-49.298 33.09Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M130.607 2266.18c20.411 19.81 44.302 29.05 67.391 9.6-.941 13.83.071 27.43 7.473 40.31 6.55 7.51.314 9.76-9.871 10.4-11.977 4.05-19.559.33-23.112-10.5l-.436-14.88c-19.868-2.93-32.528-16.23-41.445-34.93Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="rou'));
      
        return render;
      }

    function renderFn13(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('nd" stroke-miterlimit="1.5" stroke-width="2.097" d="M189.099 2291.67c-2.762.72-3.752 5.25-2.783 7.78.963 2.52 6.796 4.91 8.568 7.34 1.583 2.18 3.013 6.78 4.534 8.82 2.229 3.01 11.647-1.82 12.607-4.04.846-1.95-4.269-8.03-8.211-11.6-7.067-6.41-14.715-8.3-14.715-8.3Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.726" d="M182.298 2230.38s1.368-2.76 2.561-1.75c1.202 1.01 3.475 5.59 3.475 5.59l-3.544 8.82s-1.811.26-2.795-1.99c-.983-2.26.303-10.67.303-10.67Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" d="M193.617 2236.39c.078 1.66-1.351 3.56-1.351 3.56s.641 3.5.141 4.68c-1.645 3.85-5.987 6.91-8.499 6.82 0 0 9.812 1.45 12.323-.67 1.592-1.36-1.686-6.79-3.859-10.18" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.636" d="M193.617 2236.39c.078 1.66-1.351 3.56-1.351 3.56s.641 3.5.141 4.68c-1.645 3.85-5.987 6.91-8.499 6.82 0 0 9.812 1.45 12.323-.67 1.592-1.36-1.686-6.79-3.859-10.18"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.726" d="M177.184 2242.37s-18.146-.13-18.965 8.58c-.828 8.7 12.37 16.05 14.937 15.21 2.568-.85 4.028-23.79 4.028-23.79Z" clip-rule="evenodd"/><path fill="#000" fill-rule="eveno','dd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.254" d="M139.855 2275.59s-6.018 13.14.261 17.44c6.275 4.31 16.1-2.16 16.306-4.38.2-2.23-16.567-13.06-16.567-13.06Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.415" d="M177.871 2233.5s-18.006-1.47-18.5-8.4c-.503-6.93 12.859-11.57 15.375-10.68 2.516.89 3.125 19.08 3.125 19.08Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="',colors[0].toColor(),'" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.48" d="M171.871 2227.42c-.342.74.223 1.66.223 1.66l1.244-2.68s-1.123.28-1.467 1.02Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn14(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" fill-rule="evenodd" stroke="',colors[0].toColor(),'" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.597" d="M170.76 2247.13c.085.85 1.329 1.5 1.329 1.5l-.31-3.1s-1.105.74-1.019 1.6Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.869" d="M1142.2 353.629c4.64 4.735 9.93 17.056 1.52 26.042-4.41 4.709-15.33-.216-14.91-5.125 1.13-13.21-3.95-13.486-4.17-17.411-.24-4.107 8.21-9.946 17.56-3.506Zm.74-55.619s-15.25-19.852-21.04-24.093c-5.96-4.365-13.4-7.971-17.53-6.354-7.66 3.021-5.17 12.367-2.51 15.127 1.15 1.195 8.48 3.768 12.29 8.116 4.62 5.292 5.72 12.399 5.72 12.399l23.07-5.195Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="r','ound" stroke-miterlimit="1.5" stroke-width="2.869" d="M1131.47 282.921c18.19-7.11 62.56-7.501 55.61 13.381-1.29 3.872-7.52 12.632-8.29 21.611-.86 10.049 7.21 17.666 4.83 27.696-3.25 13.645-18.7 16.357-27.99 17.863-19.28 3.129-47.56-10.297-48.08-31.514-.53-22.004 5.73-41.927 23.92-49.037Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.869" d="M1162.23 348.191c9.78 1.643 20.43 14.56 22.06 26.761-.84 5.038-12.7 5.829-17.14 4.22-4.44-1.602-3.58-9.534-10.66-15.081-4.12-3.218-5.16-12.74 5.74-15.9Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.026" d="M1148.59 208.815s1.2','1-18.522 11.85-19.976c10.63-1.462 18.55 11.498 17.34 14.178-1.23 2.683-29.19 5.798-29.19 5.798Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.028" d="M1191.19 207.753c25.35 10.461 38.36 52.146 26.57 80.707-11.79 28.572-48.7 24.915-74.05 14.454-25.34-10.461-46.14-44.713-34.35-73.285 11.79-28.561 56.49-32.336 81.83-21.876Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1109.36 229.633c23.07 50.776 55.31 72.716 95.54 69.517-2.91 10.948-8.67 17.57-34.16 17.794-12.52 3.963-24.27 4.726-35.27 2.393-.07 28.923 9.56 37.327 22.3 39.114-11.26 9.772-22.13 6.688-32.75-3.696-30.89-16.692-16.66-43.289-2.54-69.863-19.4-8.964-21.6-28.754-13.12-55.259Z" clip-r','ule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.143" d="M1168.46 308.23c-3.43 2.498-2.55 9.581.03 12.726 2.57 3.144 11.76 3.535 15.4 6.131 3.25 2.323 7.49 8.22 10.58 10.38 4.55 3.18 15.09-8.763 15.31-12.481.2-3.261-9.83-9.376-17.01-12.478-12.87-5.565-24.31-4.278-24.31-4.278Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.216" d="M1209.5 234.735s19.75 5.867 18.48 16.651c-1.27 10.785-17.44 15.266-20.02 13.4-2.58-1.878 1.54-30.051 1.54-30.051Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterli','mit="1.5" stroke-width="4.747" d="M553.808 2582.42c29.823 12.43 42.656 49.83 28.643 83.43-7.491 17.97-18.827 41.49-34.926 46.39-14.036 4.26-43.174-9.24-55.963-18.12-26.539-18.43-31.207-39.71-17.188-73.33 14.013-33.61 49.611-50.81 79.434-38.37Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.747" d="M587.207 2624.94c-11.969 5.37-11.268 22.11-14.271 33.9-2.984 11.76-7.052 22.9-4.645 29.89 2.605 7.5 25.433 4.52 27.061 1.5 1.94-3.61 6.976-15.63 7.461-27.53.874-21.34-15.606-37.76-15.606-37.76Zm-55.818 65.86c-4.723 2.87-11.653 24.75-5.555 44.19 4.788 6.96 20.899 4.63 24.802.69 3.883-3.92-1.424-24.31-1.424-24.31-2.129-9.52-10.718-24.91-17.823-20.57Zm-59.714-20.42c-9.794 7.17-19.061 14.'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn11(colors),renderFn12(colors),renderFn13(colors),renderFn14(colors)));
      
        return render;
      }
}