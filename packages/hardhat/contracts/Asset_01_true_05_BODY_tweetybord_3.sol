//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_05_BODY_tweetybord_3 {

using ToColor for bytes4;

function renderFn11(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.268" d="M1821.22 1313.52c24.73 0 44.78-18.96 44.78-42.34 0-23.38-20.05-42.34-44.78-42.34-24.74 0-44.79 18.96-44.79 42.34 0 23.38 20.05 42.34 44.79 42.34Z"/><path fill="#fff" fill-rule="evenodd" d="M1356.8 1021.61s168.43 205.95 167.9 337.63c-.9 228.59-108.74 465.15-108.74 465.15 97.2-294.03 47.32-569.97-59.16-802.78Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.001" d="M1081.47 844.879c306.01 0 555.5 281.031 555.5 628.331s-249.49 628.33-555.5 628.33c-306.004 0-555.507-281.03-555.507-628.33 0-347.3 249.503-628.331 555.507-628.331Zm0 31.897c-289.578 0-523.61 267.774-523.61 596.434 0 328.67 234.032 59','6.44 523.61 596.44 289.58 0 523.61-267.77 523.61-596.44 0-328.66-234.03-596.434-523.61-596.434Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-opacity=".58" fill-rule="evenodd" d="m460.903 1627.3-190.969-25.35 85.773 426.93 170.942 105.76 320.75-1.1s21.305-45.5 8.599-79.42c-12.707-33.92-93.836-409.59-93.836-409.59l-301.259-17.23Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" d="m461.229 1623.87 301.253 15.1a5.567 5.567 0 0 1 5.12 4.38s36.878 165.68 65.264 286.77c14.207 60.62 26.206 109.98 30.482 121.24 4.266 11.27 5.204 23.69 4.333 35.58-1.938 26.46-12.903 50.06-12.903 50.06a8.172 8.172 0 0 1-7.351 4.7s-80.19.55-160.375.84c-80.185.28-160.375.29-160.375.29a8.206 8.206 0 0 1-4.337-1.23l-170.552-106.39a7.452 7.452 0 0 1-3.384-4.87l-83.227-427.44a4.86 4.86 0 0 1 1.214-4.27 4.85 4.85 0 0 1 4.181-1.49l190.657 26.73Zm-.78 6.85L276.06 1607.6l86.287 416.61c20.386 12.51 148.886 91.36 166.589 102.22 13.686-.09 85.872-.55 158.06-.78 67.905-.23 135.81-.25 155.019-.26 2.529-6.32 6.806-18.37 8.885-32.12 1.782-11.76 2.035-24.82-2.253-36.4-4.243-11.48-16.169-61.74-29.977-123.5-24.632-110.2-55.569-257.27-61.083-283.56l-296.881-19.07c-.086 0-.171-.01-.257-.','02Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn12(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" fill-opacity=".58" fill-rule="evenodd" d="m1716.74 1609.81 190.97-25.36-85.77 426.93L1651 2117.14l-320.75-1.09s-21.31-45.51-8.6-79.42c12.7-33.92 93.83-409.59 93.83-409.59l301.26-17.23Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" d="m1716.45 1606.76 190.69-26.58a4.317 4.317 0 0 1 4.8 5.12l-83.51 427.39a6.607 6.607 0 0 1-3.01 4.32l-170.59 106.32c-1.16.72-2.5 1.1-3.86 1.09 0 0-80.19-.04-160.37-.32-80.19-.28-160.38-.8-160.38-.8a7.259 7.259 0 0 1-6.54-4.18s-10.9-23.45-12.83-49.74c-.87-11.76.05-24.06 4.27-35.2 4.27-11.28 16.26-60.69 30.45-121.37 28.31-121.11 65.07-286.82 65.07-286.82a4.958 4.958 0 0 1 4.56-3.89l301.25-15.34Zm.47 6.11-297.37 18.86c-5.26 25-36.52 173.14-61.37 283.97-13.82 61.7-25.75 111.9-30 123.37-4.34 11.72-4.12 24.93-2.32 36.84 2.15 14.25 6.65 26.7 9.16 32.89 18.35.01 86.99.07 155.63.29 72.64.24 145.29.68 158.31.76 16.88-10.36 147.6-90.65 167.07-102.61 7.59-36.74 86.24-417.76 86.24-417.76l-185.12 23.37c-.08 0-.16.01-.23.02Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenod','d" d="m1582.58 1848.09-113.34 4.07 24.75-103.3 323.56-1.76-30.69 99.29-87.63-.26-22.41 54.42-118.01 1.68 23.77-54.14Zm39.89-68.69-87.28.5-.53 22.24h77.74l10.07-22.74Zm142.75.39-97.1.32-1.07 21.21h87.48l10.69-21.53Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m1580.2 1849.7-110.88 4.69c-.7.03-1.37-.28-1.81-.82-.45-.54-.61-1.26-.45-1.93l24.17-103.44a2.853 2.853 0 0 1 2.75-2.18s104.04-1.13 194.13-1.82c68.78-.52 129.43-.75 129.43-.75 1.16-.01 2.26.54 2.95 1.47.69.94.9 2.15.55 3.26l-31.01 99.19a3.324 3.324 0 0 1-3.18 2.35l-85.68-.65-21.93 52.48c-.4.97-1.33 1.6-2.38 1.62l-118.03.97a1.93 1.93 0 0 1-1.61-.85c-.36-.54-.41-1.23-.16-1.82l23.14-51.77Zm3.77-1.01-22.25 51.58 113.33-2.29 21.48-52.96a2.91 2.91 0 0 1 2.71-1.8l85.16-.14 28.21-92.3c-15.82.11-67.33.44-124.46.63-82.38.27-176','.43.29-191.93.3l-24.11 98.12 110.42-3.26c.52-.02 1.02.23 1.31.66.29.43.34.99.13 1.46Zm39.89-68.68-9.42 23.04a2.22 2.22 0 0 1-2.04 1.32s-24.99.73-46.64 1.11c-16.52.3-31.1.37-31.1.37-1 0-1.95-.4-2.65-1.12a3.69 3.69 0 0 1-1.06-2.67l.67-22.24a3.585 3.585 0 0 1 3.55-3.49s16.36.11 34.92.42c24.31.41 52.37 1.13 52.37 1.13a1.515 1.515 0 0 1 1.4 2.13Zm-3.83.99c-7.35.27-29.89 1.08-49.91 1.64-13.4.38-25.65.64-31.42.76l-.27 15.06c5.39.04 15.89.14 27.33.35 18.63.33 39.73.91 45.26 1.06l9.01-18.87Zm146.54-.54-10.11 21.82c-.36.73-1.11 1.2-1.93 1.2 0 0-28.12.76-52.49 1.16-18.59.31-34.99.39-34.99.39a3.69 3.69 0 0 1-2.68-1.15 3.684 3.684 0 0 1-1.02-2.74l1.18-21.21c.09-1.9 1.67-3.4 3.58-3.41 0 0 18.2.13 38.84.49 27.05.46 58.26 1.26 58.26 1.26.53 0 1.02.27 1.29.72.28.45.31 1 .07 1.47Zm-3.91.93c-8 .25-33.28 1.03','-55.69 1.57-15.26.37-29.19.6-35.41.7l-.63 13.98c5.93.04 17.98.14 31.11.36 21.3.36 45.46.98 51.22 1.13l9.4-17.74Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1601.29 962.147 1468.95 412.51c-1.18 151.879 11.76 334.838 35.31 503.762l-34.67-189.193c4.7 62.351 7.91 123.244-3.51 169.855l-176.4-439.729c11.69 132.453 34.27 269.825 79.71 407.828l-64.14-16.296-78.67-132.672 2.44 113.4 372.27 132.682ZM851.114 841.686l56.657-101.05-42.252 21.216-74.468 96.415-99.579 27.426 178.057-433.262-65.294 58.087-141.273 275.406-19.074 118.138-83.44 32.478 118.457-518.136-55.73 72.37-117.86 330.367-18.756-16.822-155.936 135.88 8.204 46.028-58.334 41.633 5.418 57.97-50.671 38.19 1.901 53.59-46.2 28.93 11.567 90.78c80.823-145.61 189.532-250.77 314.922-331.74l.029-15.095s-126.8','68-2.924-121.381-22.205c5.487-19.281 100.078-95.512 100.078-95.512l35.111 119.824 319.847-110.906Z" clip-rule="evenodd"/><svg xmlns="http://www.w3.org/2000/svg" width="2160" height="2700" fill="none"><path fill="'));
      
        return render;
      }

    function renderFn13(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="14.014" d="m653.643 1097.61-116.63-54.64S751.67 603.014 788.364 540.365c12.132-20.715 101.018-122.837 100.694-106.322-.39 19.872.668 90.438-20.943 180.203-41.03 170.426-117.717 398.424-117.717 398.424l-96.755 84.94Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="14.014" d="m812.293 956.831-118.481 47.849s132.553-185.097 163.586-233.277c12.991-20.169 84.821-66.039 84.821-66.039l-38.916 204.768-91.01 46.699ZM556.718 1062.62l-126.063-26.37s153.627-445.123 179.194-513.077c20.74-55.124 84.483-131.739 87.747-115.571 3.057 15.137 22.116 81.13 17.189 136.299-15.495 173.494-80.219 452.358-80.219 452.358l-77.848 66.361ZM1506 1093.03l114.53-58.92s-197.27-416.869-236.26-478.117c-12.89-20.251-97.62-117.177-96.31-100.755 1.83 22.931 1.01 106.983 24.71 210.149 36.24 157.736 101.75 349.183 101.75 349.183l91.58 78.46Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="14.014" d="m1342.25 958.223 120.17 43.427s-131.06-178.305-163.85-225.302c-13.73-19.674-74.28-69.614-74.28-69.614l25.28 208.192 92.68 43.297Zm259.32 96.257 125-31.03c8.88-.68-110.14-352.95-160.85-451.606-25.93-50.457-97.27-177.003-99.93-160.727-4.19 25.585-7.95 119.152 3.43 229.089 16.71 161.483 52.09 350.837 52.09 350.837l80.26 63.437Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1498.91 465.975c56.98 95.266 106.16 207.956 141.42 327.411l-20.62 100.698c-26.77-152.454-69.52-293.364-120.8-428.109Zm-191.96 13.13c66.76 66.944 108.5 174.686 157.65 275.433l-7.26 82.636c-38.21-134.828-89.1-241.217-150.39-358.069Zm-429.642-9.767c1.148 94.541-46.857 220.88-81.9','13 327.355l-62.841 54.152c66.668-123.264 107.166-255.023 144.754-381.507Zm-184.225-20.193c13.437 93.588-27.336 294.872-48.232 405.007l-55.271 61.861c50.065-130.889 82.69-336.569 103.503-466.868Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="m1599.53 950.464-125.79-537.909m-6.67 489.016-172.8-433.635m7.15 379.017-68.54-125.498M854.333 843.458l70.82-115.919M689.447 886.456l186.826-450.181M561.476 932.642l126.202-528.794"/><path fill="',colors[1].toColor()));
      
        return render;
      }

    function renderFn14(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m399.409 1301.31-46.303-223.81-165.696 140.12 46.304 223.81 165.695-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m445.067 1218.55-46.303-223.818-165.696 140.118 46.303 223.82 165.696-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="M491.534 1120.73 445.23 896.916 279.535 1037.04l46.303 223.81 165.696-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="M540.053 1032.76 493.75 808.943l-165.696 140.12 46.303 223.817 165.696-140.12Z"/><path fill="#fff" fill-rule="evenodd" d="m487.502 859.574 19.993 86.044-12.836-.156-7.157-85.888Z" clip-rule="evenodd"/><path fill="',colors[1].toColor()));
      
        return render;
      }

    function renderFn15(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1748.29 1278.62 46.3-223.81 165.69 140.12-46.3 223.81-165.69-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1702.63 1195.86 46.3-223.813 165.7 140.123-46.31 223.81-165.69-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1656.16 1098.04 46.3-223.811 165.7 140.121-46.3 223.81-165.7-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1607.64 1010.07 46.31-223.814 165.69 140.12-46.3 223.814-165.7-140.12Z"/><path fill="#fff" fill-rule="evenodd" d="m1690.51 840.334 89.58 96.098 1.99 89.528s18.4-89.903 12.58-97.126c-8.41-10.427-104.15-88.5-104.15-88.5Zm123.22 141.562 28.12 43.714 2.39 30.33s11.78-30.67 7.74-37.18c-5.85-9.41-38.25-36.864-38.25-36.864Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn16(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="16.178" d="M1224.38 773.72c35.02 6.644-8.82 52.692 75.67 75.573 262.32 71.04 594.29 245.037 667.87 476.457 37.17 116.88-281.41 253.78-281.41 391.55 0 498.43-272.12 903.09-607.3 903.09-335.177 0-607.3-404.66-607.3-903.09 0-92.94-298.135-279.23-280.565-363.63 59.032-283.6 392.029-450.344 666.548-512.01 27.228-6.116 20.746-62.174 47.763-67.183 61.083-11.324 252.994-13.226 318.724-.757Zm-141.89 111.527c-284.606 0-515.67 263.163-515.67 587.303 0 324.15 231.064 587.31 515.67 587.31 284.61 0 515.68-263.16 515.68-587.31 0-324.14-231.07-587.303-515.68-587.303Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m1300.27 2153.45-38.26-57.17s88.83-41.97 161.82-96.61c36.5','3-27.35 59.35-54.82 86.52-83.01 0 0-39.88 56.28-68.52 80.72-26.05 22.23-111.55 68.44-148.96 102.01-19.14 17.17 7.4 54.06 7.4 54.06Zm5.57 78.49s-41.18-76.53-76.26-94.69c-35.08-18.16-134.23-14.26-134.23-14.26 53.91-1.67 137.85-20.13 137.85-20.13l72.64 129.08Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m762.375 2487.73 65.098-261.23 87.342-142.83m476.435 404.06-65.1-261.23-87.34-142.83"/><path fill="#fff" fill-rule="evenodd" d="M1638.93 1010.72c-77.82-49.303-169.42-86.349-265.06-119.781 91.36 40.088 184.42 80.461 248.9 130.451l16.16-10.67Zm62.21 50.87s198.38 169.12 222.03 269.8c4.93 21.01-29.54 74.61-29.54 74.61s61.99-47.05 53.42-74.59c-39.02-125.4-245.91-269.82-245.91-269.82Z" clip-rule="evenodd"/><pa','th fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="14.463" d="M1087.39 2304.64c47.44 21 205.09 129.18 231.67 174.11l-230.39 188.38-235.049-174.72c20.228-41.14 172.699-167.75 233.769-187.77Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".52" fill-rule="evenodd" d="M1087.39 2304.64c47.44 21 158.86 126.72 185.42 171.66-63.22 46.88-83.99 106.36-141.21 127.49-12.63 4.66-30.49-8.49-44.45-4.75-16.13-4.06-27.3 10.37-41.7 5.75-60.475-19.42-88.615-76.27-148.578-116.51 20.228-41.14 129.448-163.62 190.518-183.64Z" clip-rule="evenodd"/><g fill-rule="evenodd" clip-rule="evenodd" mask="url(#a)"><path fill="',colors[4].toColor(),'" d="m982.134 2586.2-12.205-9.71a3.398 3.398 0 0 1-1.264-3.13l12.518-90.34a3.446 3.446 0 0 1 2.252-2.76l16.467-5.96a3.527 3.527 0 0 1 3.278.46c.94.68 1.47 1.79 1.4 2.94l-5.984 110.46c-.037.66-.27 1.29-.643 1.8 2.157 1.72 3.567 2.84 3.567 2.84l12.61-125.5c.09-.89.53-1.72 1.23-2.29l42.21-34.83a3.544 3.544 0 0 1 3.67-.5c1.22.54 2.02 1.72 2.05 3.03l2.88 102.25 1.15 17.53 20.97-.28c-1.79-5.81-5.37-17.4-10.69-34.54-8.16-26.3.15-70.72.15-70.72.17-.91.7-1.7 1.48-2.22l19.38-12.86c1.59-1.05 3.75-.64 4.83.92l19.15 27.75c.52.74.71 1.67.54 2.55 0 0-1.5 8.1-.12 25.31 1.36 16.9 2.85 30.9 11.18 39.61 7.88 8.24 8.92 20.66 9.03 25.05l13.72 13.1 8.88-100.5c.09-1.04.66-1.98 1.55-2.56.88-.58 1.99-.73 3-.41l14.67 4.66a3.48 3.48 0 0 1 2.15 1.94c.39.92.35 1.97-.1 2.86 0 0-3.6 7.81 1.94 27.39 2.89 10.23 6.75 15.24',' 9.57 19.88 3.3 5.41 5.47 10.39 4.23 20.58-1.48 12.09-5.23 23.88-7.7 30.71l38.53-8.06-28.77-96.42c-.44-1.45.16-3.02 1.45-3.84l38.67-24.55c1-.64 2.26-.73 3.34-.24s1.84 1.49 2 2.65l13.58 96.35 2.3-1.44-10.43-99.89c-.09-.9.18-1.8.75-2.5l11.85-14.52c.87-1.07 2.31-1.52 3.65-1.16 1.34.37 2.33 1.49 2.52 2.84l13.06 94.61 26.79-21.6c.6-3.12 2.11-12.08 1.51-20.55-.23-3.28-.78-6.47-1.88-9.17-.91-2.24-2.19-4.12-4.15-5.19-13.84-7.54-27.95-32.45-27.95-32.45-.54-.96-.58-2.1-.12-3.09l16.41-35c.67-1.43 2.25-2.22 3.82-1.93 1.57.3 2.74 1.61 2.83 3.18 0 0 .66 13.58 8.95 21.15 7.8 7.13 30.44 28.93 37.29 35.53l15-9.43-7.36-102.68c-.07-.9.23-1.78.82-2.47l18.28-21.13a3.525 3.525 0 0 1 4.95-.36s12.34 10.13 5.7 33.1c-5.7 19.74.42 45.24.42 45.24.09.4.12.81.06 1.21l-4.04 31.33-6.92-.87.44-3.4 3.53-27.33c-.91-4.2-5.78'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn11(colors),renderFn12(colors),renderFn13(colors),renderFn14(colors),renderFn15(colors),renderFn16(colors)));
      
        return render;
      }
}