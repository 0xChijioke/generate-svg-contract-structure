//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_02_POD_boulderdash_4 {

using ToColor for bytes4;

function renderFn17(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.391" d="M1510.56 1624.48c-.79-1.67-1.59-3.33-2.39-5 4.34-8.03 8.65-16.15 12.93-24.38.87-1.5 1.74-3.01 2.61-4.52.47.37.93.74 1.39 1.11-3.14 8.91-6.3 17.76-9.51 26.55-1.67 2.09-3.35 4.17-5.03 6.24Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.391" d="M1518.83 1614.11a667.31 667.31 0 0 1-4.83 3.18c3.29-5.83 6.56-11.72 9.81-17.66.88-1.5 1.75-3 2.62-4.51.46.37.93.74 1.39 1.11-1.68 4.9-3.37 9.78-5.07 14.64-1.3 1.08-2.61 2.17-3.92 3.24Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.376" d="M1508.33 1621.15c-1.11-.93-2.23-1.86-3.34-2.79 3.81-9.04 7.58-18.16 11.31-27.36.78-1.73 1.57-3.47 2.35-5.21l1.69.12c-2.63 10.15-5.3 20.28-8 30.38-1.34 1.63-2.67 3.25-4.01 4.86Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.383" d="M1537.66 1628.95c1.64-1.36 3.29-2.72 4.93-4.1l.78-26.18c-.04-1.62-.08-3.25-.11-4.87-.63.24-1.26.48-1.89.73-1.6 9.18-3.22 18.37-4.87 27.57.38 2.29.77 4.57 1.16 6.85Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor()));
      
        return render;
      }

    function renderFn18(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.383" d="m1535.47 1617.15 2.83 4.18c.04-6.33.09-12.67.14-19.01-.04-1.62-.07-3.24-.11-4.86-.62.24-1.25.49-1.88.73-.97 4.98-1.95 9.97-2.93 14.95.65 1.34 1.3 2.68 1.95 4.01Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.36" d="M1541.54 1626.39c1.55-.6 3.1-1.19 4.65-1.79 1.31-9.58 2.59-19.15 3.86-28.71.17-1.83.33-3.67.49-5.51-.55-.08-1.1-.17-1.66-.26-2.77 10.24-5.6 20.47-8.48 30.68.38 1.87.76 3.73 1.14 5.59Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.413" d="M1530.42 1604.11c2.14.36 4.04 1.85 5.79 3.65 2.51 2.58 4.74 6.03 6.65 10.21 1.63 3.56 3.03 7.71 3.97 12.64 1.05 5.46 1.55 12.23.46 19.9-.35 2.52-1.47 4.74-2.44 6.4-.21.35-.41.68-.62 1.01-.27.42-.54.83-.82 1.23-.34.5-.69.98-1.04 1.45-3.03 4.1-6.14 7.38-9.15 11.81-1.37 2.03-2.95 4.55-3.89 7.8-3.1 10.74-6.64 21.24-10.67 30.81-1.26 2.99-2.81 5.27-4.29 7.23-1.77 2.34-3.57 4.32-5.36 6.41-1.22 1.43-2.46 2.89-3.65 4.71-.89 1.38-1.71 3.07-2.46 4.94-.78 1.99-1.5 4.17-2.41 5.88-.65 1.2-1.35 2.06-2.04 2.64-3.93 3.31-7.9 5.14-11.33 4.38-2.99-.67-5.42-3.72-6.68-9.2-.07-.34-.13-.71-.15-1.12-.11-2 .59-4.4 1.1-6.56.45-1.87.79-3.76.84-5.53.05-1.99-.12-3.79-.29-5.52-.24-2.56-.55-5.04-.65-7.79-.08-2.26-.02-4.76.46','-7.39 1.94-10.77 4.78-21.51 8.01-31.71.29-.91.44-1.89.53-2.81.14-1.54.11-2.98.06-4.34-.23-5.08-.98-9.47-1.3-14.44-.1-1.7-.19-3.53.01-5.51.1-1.05.3-2.21.69-3.18 3.33-8.24 7.34-14.79 11.37-19.92 3.15-4.01 6.35-7.22 9.51-9.83 3.68-3.03 7.34-5.27 10.9-6.71 3.06-1.25 6.11-2.02 8.89-1.54Zm-1.49 5.73c-5.83-1.01-13.06 7.07-19.11 17.8a106.78 106.78 0 0 0-3.12 5.96 134.07 134.07 0 0 0-3.69 8.32c-1.51 3.75-2.91 7.7-4.17 11.78-3.29 10.69-5.64 22.79-5.33 32.81.05 1.63.17 3.19.37 4.64.24 1.83.6 3.49 1.06 4.94.59 1.86 1.35 3.38 2.24 4.53 1.18 1.53 2.59 2.4 4.11 2.72 3.36.69 7.25-1.3 11.11-5.09 7.47-7.35 14.93-21.51 19.67-38.21 3.29-11.59 5.2-24.36 4.49-34.52-.11-1.68-.3-3.27-.56-4.75-.3-1.73-.71-3.31-1.21-4.68-.59-1.62-1.31-2.96-2.15-3.96-1.08-1.3-2.34-2.05-3.71-2.29Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="1.068" d="M1529.81 1606.59c1.42.24 2.74 1 3.88 2.31.88 1.03 1.65 2.39 2.27 4.05.51 1.35.93 2.89 1.24 4.59 2.12 11.28-.15 27.87-4.24 42.34-5.04 17.77-12.89 33.78-20.96 42.99-4.38 5-8.96 8.04-12.84 7.23-1.42-.3-2.73-1.11-3.84-2.51-.84-1.06-1.57-2.46-2.15-4.15-.45-1.34-.81-2.86-1.08-4.52-1.99-12.32 1.21-30.39 5.78-45.23 1.28-4.15 2.7-8.19 4.22-12.04 1.2-3.02 2.46-5.94 3.77-8.72 7.07-14.99 16.45-27.63 23.95-26.34Zm-.72 2.57c-5.98-1.04-13.37 7.34-19.48 18.21-1.1 1.96-2.18 4.03-3.22 6.19-1.3 2.69-2.55 5.52-3.73 8.47-1.49 3.72-2.88 7.63-4.12 11.67-3.95 12.82-6.56 27.82-4.98 38.57.26 1.76.63 3.36 1.1 4.77.6 1.8 1.36 3.27 2.25 4.39 1.19 1.5 2.59 2.35 4.11 2.67 3.52.73 7.61-1.45 11.62-5.5 7.55-7.62 14.94-21.9 19.64-38.46 3.92-13.81 5.92-2'));
      
        return render;
      }

    function renderFn19(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('9.5 3.93-40.24-.32-1.71-.73-3.26-1.24-4.61-.61-1.6-1.34-2.91-2.19-3.91-1.08-1.26-2.33-1.99-3.69-2.22Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.413" d="M1481.96 1702.95c.83 6.95 1.67 13.88 2.53 20.79 3.37-3.22 6.73-6.48 10.1-9.76-2.19-4.96-2.84-12.49-2.93-20.67.64-1.6 1.28-3.21 1.92-4.81m25.39 22.17c-4.82 5.82-9.65 11.55-14.48 17.2-1.09-3.93-2.17-7.87-3.25-11.82 4.98-4.81 9.96-10.71 14.82-17.74l1.11-5.02"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.392" d="M1488.58 1712.61c.26-2.11.53-4.21.79-6.31-.32-3.17-.63-6.34-.94-9.51-.16.18-.31.38-.47.59-.12.16-.24.32-.35.49-.33.47-.69.99-.98 1.65-.13.28-.27.65-.28.99-.11 1.86.11 3.6.25 5.19.24 2.87.54 5.67.88 8.42.36-.51.73-1.01 1.1-1.51Zm18.18 3.83c1.02-1.95 2.04-3.91 3.05-5.87 2.16-2.67 4.31-5.35 6.46-8.05.03.23.05.47.07.71.05.84.12 2.51-.42 3.41-1.05 1.75-2.21 3.12-3.3 4.5-1.93 2.44-3.86 4.79-5.8 7.07l-.06-1.77Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.352" d="m1505.21 1619.83-4.3.12c3.46-10.97 6.86-21.99 10.21-33.06.74-2.16 1.47-4.33 2.19-6.5.67-.41 1.34-.83 2.01-1.24-1.95 11.08-3.93 22.17-5.94 33.26-1.39 2.49-2.78 4.96-4.17 7.42Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor()));
      
        return render;
      }

    function renderFn20(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.381" d="M1513.13 1617.07c-.68.03-1.63.29-2.16-.51-.17-.27-.28-.67-.37-1.08 3.29-8.47 6.56-16.99 9.78-25.57.67-1.62 1.33-3.24 2-4.86.55-.05 1.1-.09 1.65-.13-2.04 8.87-4.1 17.73-6.18 26.57-1.57 1.87-3.14 3.72-4.72 5.58Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.441" d="M1505.79 1630.17c-.88.66-2 1.71-2.78 1.46-.26-.09-.45-.36-.64-.65 2.6-10.41 5.16-20.84 7.68-31.28.6-2.07 1.2-4.13 1.8-6.19l2.04-1.62c-.98 9.68-1.96 19.37-2.96 29.06-1.71 3.09-3.42 6.16-5.14 9.22Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.142" d="M1500.84 1626.49c-1.7 1.59-3.39 3.17-5.09 4.75l2.16-22.38c.24-1.72.47-3.43.71-5.14.68-.93 1.36-1.85 2.05-2.78.94 5.98 1.89 11.93 2.86 17.88-.89 2.55-1.79 5.11-2.69 7.67Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.413" d="M1501.03 1628.34c-1.55.2-3.09.41-4.64.61 2.59-11.18 5.14-22.37 7.64-33.57l1.95-6.57 2.07-1.71c-1.01 10.85-2.03 21.71-3.06 32.58-.52 1.29-.94 2.7-1.46 3.99-.74 1.85-1.61 3.37-2.5 4.67Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor()));
      
        return render;
      }

    function renderFn21(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.142" d="M1496.14 1639.5c-.24.53-.48 1.06-.72 1.58-1.05 2.23-2.75 5.58-3.95 4.76-.19-.13-.35-.34-.48-.6.22-6.48.45-12.97.67-19.46.25-1.71.49-3.42.73-5.13.69-.91 1.39-1.83 2.08-2.75 1.46 4.67 2.92 9.32 4.39 13.96-.9 2.55-1.81 5.1-2.72 7.64Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.85" d="M1500.37 1643.32c-1.37 2.49-3.19 5.19-4.52 4.48-.22-.12-.4-.31-.57-.56 1.29-8.79 2.57-17.58 3.83-26.36.38-2.01.75-4.02 1.12-6.02.7-.87 1.41-1.74 2.12-2.62.38 7.59.78 15.17 1.19 22.73-1.05 2.79-2.11 5.57-3.17 8.35Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.225" d="M1495.13 1663.83c-.81 2.27-2.14 5.7-3.38 5.62-.2-.01-.39-.12-.55-.27-.25-.24-.46-.58-.64-.97.25-7.61.51-15.22.77-22.84.2-1.81.41-3.61.62-5.42.7-1.01 1.39-2.02 2.09-3.03 1.16 5.91 2.34 11.8 3.52 17.68l-2.43 9.23Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.36" d="M1545.32 1627.13c1.28.57 2.56 1.13 3.84 1.7 2.92-11.29 5.79-22.61 8.6-33.95.48-2.25.96-4.5 1.43-6.75-.39-.62-.79-1.23-1.19-1.84-4.07 10.95-8.21 21.8-12.4 32.56-.09 2.76-.19 5.52-.28 8.28Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor()));
      
        return render;
      }

    function renderFn22(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.387" d="M1539.66 1621.7c.63.3 1.35.79 2.16.38.33-.17.67-.53 1-.89 1.64-8.93 3.26-17.85 4.85-26.77l.75-5.14-1.44-.69c-2.81 8.81-5.66 17.59-8.55 26.35.41 2.26.82 4.51 1.23 6.76Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.45" d="M1539.09 1636.27c.43.94.91 2.22 1.63 2.35.31.06.66-.13 1-.33a2601.3 2601.3 0 0 0 10.15-31.28c.57-2.1 1.13-4.2 1.69-6.31-.34-.73-.67-1.47-1.01-2.21-4.3 9.28-8.64 18.46-13.02 27.53-.15 3.42-.3 6.83-.44 10.25Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.155" d="M1545.6 1634.8c.66 2.07 1.31 4.15 1.96 6.23 3.51-7.01 6.99-14.09 10.44-21.23.72-1.66 1.45-3.32 2.17-4.98-.13-1.1-.25-2.19-.38-3.29-4.12 5.16-8.25 10.26-12.39 15.3-.59 2.65-1.19 5.31-1.8 7.97Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.421" d="M1544.41 1636.41c1.28.76 2.57 1.53 3.85 2.3 3.88-11.1 7.7-22.27 11.46-33.51l1.74-6.74c-.33-.77-.66-1.54-.99-2.32-4.91 10.45-9.86 20.76-14.87 30.93-.23 1.3-.58 2.58-.82 3.88-.37 1.96-.47 3.8-.37 5.46Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor()));
      
        return render;
      }

    function renderFn23(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.155" d="m1542.58 1648.36-.21 1.47c-.05.38-.1.75-.14 1.13-.19 1.76-.38 4.35.47 4.85.14.09.3.11.46.09.27-.04.54-.18.82-.37 3.47-5.91 6.92-11.89 10.35-17.92.74-1.65 1.47-3.3 2.2-4.96-.13-1.1-.25-2.19-.37-3.29-3.92 3.72-7.83 7.41-11.75 11.05l-1.83 7.95Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.864" d="M1536.62 1650.18c-.17 2.88.05 5.72 1.4 5.77.31.02.63-.1.96-.28 3.8-8.37 7.57-16.81 11.3-25.33.77-1.96 1.54-3.93 2.3-5.9-.16-1.05-.33-2.11-.49-3.17a1506.7 1506.7 0 0 1-13.64 20.18l-1.83 8.73Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.238" d="M1529.66 1670.59c-.21.86-.42 1.74-.57 2.63-.1.51-.17 1.03-.22 1.55-.02.31-.03.61-.02.9.09 1.84 1.2 1.35 1.9.94.15-.09.3-.19.45-.29 4.15-6.85 8.29-13.78 12.4-20.8.84-1.71 1.67-3.42 2.51-5.14l-.18-3.55c-4.39 4.91-8.78 9.77-13.17 14.55-1.03 3.08-2.06 6.15-3.1 9.21Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="gray" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8" d="m588.996 1580.6 38.052 10.53c19.518 73.59 35.493 137.91 70.42 210.42l-22.628 31.86c-35.677-75.82-62.538-161.14-85.844-252.81Z" clip-rule="evenodd"/><path stroke="',colors[16].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2" d="m608.232 1607.38 13.022 2.69m-9.834 10.91 12.79 2.17"/><path fill="#000" fill-rule="evenodd" d="m641.315 1689.81-11.725.38 12.583 33.74 10.12-3.88-10.978-30.24Z" clip-rule="evenodd"/><path fill="',colors[16].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn17(colors),renderFn18(colors),renderFn19(colors),renderFn20(colors),renderFn21(colors),renderFn22(colors),renderFn23(colors)));
      
        return render;
      }
}