//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_02_POD_boulderdash_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.139" d="M1070.65 847.418c300.04 0 543.64 282.502 543.64 630.462 0 347.95-243.6 630.46-543.64 630.46-300.042 0-543.638-282.51-543.638-630.46 0-347.96 243.596-630.462 543.638-630.462Zm-1.39 143.962-171.387 55.59 65.468 89.93h211.839l65.47-89.93-171.39-55.59Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" stroke="',colors[2].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.03" d="M1149.7 1328.66H993.352v90.54H1149.7v-90.54Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5" d="m1022.73 1227.11 7.99 13.2 69.72.65 9.25-14.27-86.96.42Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="M1067.44 1239.83c-1.75-9.38-31.66-8.65-43.55-10.43l85.69-3.07-8.57 12.94-33.57.56Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.56" d="m1069.98 973.588 219.81 74.872-83.97 121.14H934.135l-83.957-121.14 219.802-74.872Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="m860.111 1062.78 12.231-7','.67 23.325-9.31 171.313-58.388 174.88 60.658-22.08 31.03 19.25 8.25-16.2 56.01 68.47-98.48-221.83-76.364-218.409 76.644 9.05 17.62Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.992" d="m1068.87 976.887 204.83 67.043-78.24 108.46H942.274l-78.239-108.46 204.835-67.043Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" fill-opacity=".2" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.944" d="m1068.83 992.154 169.63 55.116-64.79 89.17H963.988l-64.795-89.17 169.637-55.116Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1072.72 1014.14s107.4 21.7 122.09 38.48c14.69 16.78-33.95 62.21-33.95 62.21s26.79-41.96 15.35-55.02c-14.69-16.78-103.49-45.67-103.49-45.67Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8" d="M786.372 1886.88s-110.387-227.09-57.397-301.62c52.991-74.53 345.585-102.49 345.585-102.49s175.34-49.5 224.97-139.03c3.96-7.15 8.14-15.47 12.46-24.73 3.08-6.6 35.31.76 38.53-6.71 3.19-7.44-22.62-29.72-19.34-37.85 46.84-115.9 100.38-29','3.804 100.38-293.804"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8" d="M1359.77 1886.88s110.39-227.09 57.4-301.62-345.59-102.49-345.59-102.49-175.339-49.5-224.969-139.03c-7.29-13.15-15.27-30.24-23.59-49.82-3.91-9.2-37.93-3.29-41.95-13.44-3-7.58 24.02-31.03 20.99-38.99-43.23-113.81-87.48-260.844-87.48-260.844"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1298.32 1611.48c-4.26-2.84-7.92-6.1-9.78-9.95-2.42-4.99-.92-11.54 1.68-16.56 2.26-4.38 6.25-7.6 11.07-9.56 2.84-8.33 11.96-13.82 21.99-12.66 1.36.15 2.68.42 3.94.8l-5.81-205.31c-2.98-3.62-5.12-7.62-6.52-8.94-2.33-2.19 1.98-8.51 5.15-8.09 2.73.35 19.88 12.52 20.64 11.47l15.91 3.7 1.09 6.03-14.39-.49-13.57 202.54c7.91 3.41 13.01 11.06 12.07 19.26a16.68 16.68 0 0 1-','.71 3.27c5.95 7.64 8.36 17.12 4.37 24.86-3.47 6.72-9.86 11.29-17.7 11.48-3.22.08-6.75-.74-10.24-1.99-3.03 5.78-7.09 12.39-10.2 13.31-5.66 1.68-12.68-10.62-13.27-16.36-.26-2.55 1.85-4.94 4.28-6.81Zm29.51-47.74c.44.15.88.3 1.31.48l3.97-199.33c-.53.03-1.06.02-1.57-.03l-3.71 198.88Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1312.8 1616.65c2.18 2.66 9.71 4.72 9.71 4.72l-4.58 4.04s-7.31-11.42-5.13-8.76Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.978" d="M1316.55 1604.47s-11.3 5.18-10.58 10.91c.72 5.72 8.03 17.85 13.65 16.04 5.62-1.8 13.95-22.58 13.95-22.58l-17.02-4.37Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" d="M1320.58 1614.14c-8.02-3.9-17.05-8.66-20.51-15.39-2.53-4.93-1.18-11.51 1.29-16.6 5.86-12.02 24.59-15.76 38.47-9 13.89 6.76 23.23 22.56 17.38 34.58-3.32 6.8-9.59 11.52-17.42 11.9-6.02.29-13.18-2.55-19.21-5.49Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1320.01 1615.31c-4.72-2.19-9.77-4.67-13.92-7.66-3.26-2.35-5.95-5.03-7.59-8.09-1.22-2.27-1.7-4.88-1.65-7.55.05-3.67 1.15-7.49 2.67-10.76 3.26-6.95 10.41-11.53 18.71-13.2 7.37-1.48 15.63-.62 22.74 2.75 8.54 4.14 15.53 11.44 18.7 19.39 2.49 6.24 2.64 12.85-.27 18.61-1.92 3.75-4.64 6.91-7.99 9.13a21.56 21.56 0 0 1-11.53 3.62c-2.7.05-5.59-.46-8.51-1.35-3.88-1.19-7.82-3.02-11.36-4.89Zm1.13-2.33c3.49 1.56 7.35 3.07 11.12 3.97 2.58.62 5.1.94 7.43.76 3.49-.26 6.59-1.49 9.19-3.4 2.62-1.92 4.71-4.56 6.13-7.6'));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('4 2.67-5.66 1.38-12.15-2.03-17.94-3.18-5.41-8.25-10.26-14.29-13.23-6.08-3.04-13.19-3.89-19.59-2.78-6.91 1.21-13.02 4.66-15.89 10.33-1.16 2.29-2.1 4.91-2.46 7.54-.36 2.57-.2 5.14.89 7.36 1.32 2.68 3.61 5.04 6.34 7.16 3.9 3.03 8.69 5.59 13.16 7.87Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" d="M1335.21 1581.87c-8.48-4.12-18.05-1.91-21.39 4.95s.82 15.76 9.29 19.89c8.47 4.13 18.05 1.91 21.39-4.95s-.82-15.76-9.29-19.89Z"/><path fill="#000" fill-rule="evenodd" d="M1322.77 1607.39c-4.16-1.93-7.36-4.98-9.25-8.41-2.26-4.08-2.65-8.69-.79-12.69 1.9-4.06 5.77-6.7 10.4-7.6 3.96-.76 8.48-.22 12.75 1.8 4.27 2.06 7.56 5.25 9.45 8.83 2.22 4.25 2.51 9.01.47 13.08-2.06 3.98-5.99 6.55-10.66 7.25-3.9.59-8.28-.1-12.37-2.26Zm.67-1.37c3.82 1.71 7.8 2.08 11.29 1.36 3.77-.79 6.94-2.92 8.47-6.25 1.53-3.25 1.1-6.98-.69-10.32-1.62-3.03-4.36-5.77-7.98-7.56-3.63-1.82-7.49-2.38-10.9-1.81-3.81.63-7.08 2.64-8.73 5.91-1.69 3.31-1.4 7.2.38 10.7 1.61 3.19 4.43 6.07 8.16 7.97Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" d="M1330.48 1596.45c-11.42-1.04-19.94-10.25-18.99-20.54.94-10.28 10.98-17.79 22.41-16.75 11.42 1.05 19.93 10.25 18.99 20.54-.95 10.29-10.99 17.8-22.41 16.75Zm.6-5.49c7.75.71 14.5-3.63 15.05-9.67.56-6.05-5.3-11.54-13.05-12.25-7.76-.71-14.5 3.63-15.05 9.68-.56 6.04 5.29 11.53 13.05 12.24Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1330.37 1597.68c-5.89-.4-11.09-2.88-14.82-6.54-4.12-4.04-6.41-9.54-6.01-15.4.43-5.96 3.61-11.13 8.33-14.6 4.38-3.22 10.13-4.92 16.25-4.45 6.16.52 11.6 3.17 15.4 7.1 4.15 4.3 6.34 10.09 5.7 16.13-.73 5.92-4.03 11.02-8.94 14.24-4.4 2.88-10.02 4.3-15.91 3.52Zm.22-2.46c5.15.26 9.9-1.35 13.53-4.12 3.69-2.81 6.15-6.9 6.44-11.61.35-4.6-1.55-8.87-4.73-12.1-3.04-3.1-7.28-5.28-12.16-5.75-4.92-.53-9.57.72-13.19 3.18-3.83 2.62-6.53 6.','58-7.05 11.27-.54 4.78 1.2 9.35 4.42 12.81 3.13 3.36 7.6 5.72 12.74 6.32Zm.37-3.03c-4.85-.14-9.09-2.09-11.85-4.91-2.38-2.42-3.57-5.53-3.42-8.78.28-4.05 2.74-7.61 6.56-9.8 3.03-1.74 6.94-2.55 11.06-2.13 4.08.46 7.68 2.05 10.28 4.35 3.21 2.82 4.96 6.62 4.48 10.55-.4 3.13-2.09 5.87-4.74 7.81-3.16 2.3-7.61 3.53-12.37 2.91Zm.23-2.46c3.27.18 6.3-.63 8.66-2.08 2.5-1.53 4.18-3.84 4.34-6.54.15-2.61-1.28-4.98-3.5-6.73-2.03-1.6-4.77-2.65-7.83-2.86-3.03-.25-5.84.43-8.08 1.67-2.36 1.31-4.14 3.26-4.43 5.74-.36 2.58.8 5.06 2.86 6.99 2.01 1.87 4.76 3.31 7.98 3.81Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.9" d="m1338.53 1572.8-1.05-219.84-10.71-7.08 11.76 226.92Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m1336.54 1384.88-2.46-18.98-5.72-6.26-.69-4 8.89 4.01-.02 25.23Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[6].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.9" d="m1362.36 1352.07-16-3.33c-9.2 13.34-16.6-10.52-20.91-10.98-3.18-.34-7.33 6.08-4.95 8.21 3.62 3.25 12.38 23.6 26.69 11.27l12.24 4.15 2.93-9.32Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.9" d="m1339.84 1573.15 9.55-219.64-13.75-5.92 3.44 9.09.76 216.47Z" clip-rule="evenodd"/><path fill="',colors[7].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.984" d="M1083.97 1843.21c116.41 0 225.7 12.74 291.94 39.46 44.26 17.86 67.48 43.73 67.48 69.67 0 64.78-160.7 127.28-354.89 127.28-194.182 0-353.264-59.52-353.264-124.3 0-23.08 16.895-46.94 50.956-64.25 61.506-31.23 172.799-47.86 297.778-47.86Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1381.92 1903.4c-94.37-34.49-191.09-45.06-308.88-48.12 0 0 122.08-1.13 175.7 7.48 46.09 7.4 133.18 40.64 133.18 40.64Z" clip-rule="evenodd"/><path fill="',colors[8].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.223" d="M1083.39 1884.81c194.18 0 321.92 35.05 323.43 84.59 1.61 52.98-124.13 110.22-318.32 110.22-194.181 0-334.479-46.95-327.763-99.52 5.484-42.94 128.465-95.29 322.653-95.29Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[7].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4" d="M1403.14 1927.82c1.15-21.28-87.37-69.89-87.37-69.89s-145.46-20.89-159.42-19.38l.36-18 238.82-8.95c33.27 20.4 63.2 42.21 89.12 65.7l-81.51 50.52Z" clip-rule="evenodd"/><path fill="',colors[8].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.6" d="m1343.03 1843.07 66.85-9.18c26.94 17.01 47.47 32.68 61.24 50.14l-41.5 25.17c-16.86-20.39-37.91-39.03-86.59-66.13Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5" d="m991.219 1213.62 151.321.94c-23 22.02-42.58 50.66-56.75 78.1l-41.31-1.04c-15.07-27.8-32.88-54.92-53.261-78Z" clip-rule="evenodd"/><path fill="',colors[9].toColor(),'" fill-opacity=".25" stroke="',colors[9].toColor(),'" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".2" stroke-width="24" d="M1328.7 1852.24c51.45 0 93.16-42.88 93.16-95.79 0-52.9-41.71-95.79-93.16-95.79-51.45 0-93.16 42.89-93.16 95.79 0 52.91 41.71 95.79 93.16 95.79Z"/><path fill="#fff" fill-rule="evenodd" stroke="'));
      
        return render;
      }

    function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[9].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.137" d="M1323.67 1772.05c14.54 0 26.35 13.31 26.35 29.7 0 8.76-.63 20.5-6.47 25.32-5.1 4.2-19.54 3.64-26.39 2.17-14.22-3.06-19.85-11.09-19.85-27.49 0-16.39 11.81-29.7 26.36-29.7Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="',colors[9].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.137" d="M1344.91 1783.93c-4.04 4.3-3.61 14.42-2.81 19.84.79 5.4-.32 11.78 1.89 14.27 2.38 2.66 13.6-4.36 13.14-5.83-.64-2.1-.1-6.98-1.96-12.01-3.33-9.02-10.26-16.27-10.26-16.27Zm-12.99 34.78c-4.59 2.95-9.21 5.87-10.16 14.99.74 3.73 4.9 4.76 12.86 2.76l2.38-7.15c.83-4.32 3.11-8.48-5.08-10.6Zm-33.86-8.98c-4.6 2.95-9.3 6.3-10.24 15.41.73 3.74 4.89 4.76 12.85 2.77l3.99-6.59c.82-4.31 1.59-9.47-6.6-11.59Zm11.06-32.73s-3.06.5-7.73 3.1c-5.44 3.03-13.5 11.01-14.88 14.01-2.56 5.57 6.74 9.6 9.59 9.72 2.74.1 3.32-12.14 3.32-12.14l9.7-14.69Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="',colors[9].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.254" d="M1292.3 1734.77s-6.11-12.4.21-17.3 16.25.52 16.47 2.7c.2 2.18-16.68 14.6-16.68 14.6Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="',colors[9].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3" d="M1325.98 1712.57c20.25-2.68 43.25 21.52 46.27 44.34 3.02 22.81-20.77 33.55-41.02 36.23-20.24 2.68-46.4-11.68-49.42-34.5-3.02-22.81 23.93-43.39 44.17-46.07Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors),renderFn5(colors)));
      
        return render;
      }
}