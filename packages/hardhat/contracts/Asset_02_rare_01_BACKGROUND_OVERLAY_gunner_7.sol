//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_gunner_7 {

using ToColor for bytes4;

function renderFn24(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.858" d="M108.836 709.666c-1.317-7.745-4.85-18.463-15.697-21.781-9.243-2.831-24.891.994-37.2 2.765-13.28 1.91-29.483 4.539-37.451 10.442-8.09 5.989-7.846 15.295-6.618 22.521 1.277 7.517 3.84 15.544 14.18 18.92 9.385 3.067 25.986 1.928 38.723.096 12.574-1.809 29.512-2.455 37.416-7.911 8.913-6.152 7.939-17.449 6.647-25.052Zm-21.491 3.525c-.57-3.355-1.682-8.498-6.612-10.254-5.614-1.995-15.467-.318-22.586.706-7.5 1.079-16.287 2.896-20.246 6.406-3.106 2.752-2.322 6.924-1.786 10.077.558 3.283 1.067 8.242 5.207 9.991 4.909 2.071 13.986.56 21.242-.483 7.425-1.068 19.04-2.422 23.765-5.876 3.783-2.766 1.558-7.377 1.016-10.567Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.855" d="M-1.652 736.439c-6.944-4.27-17.676-8.96-27.393-3.467-8.284 4.679-15.541 18.394-22.223 28.351-7.209 10.741-15.769 24.047-16.36 33.691-.602 9.788 6.864 15.872 13.342 19.856 6.74 4.144 14.722 7.716 24.152 2.623 8.562-4.622 18.554-17.21 25.467-27.512 6.825-10.17 17.425-22.667 18.325-31.964 1.014-10.483-8.494-17.387-15.31-21.578Zm-11.325 17.674c-3.008-1.849-7.775-4.516-12.386-2.185-5.247 2.656-10.392 10.8-14.256 16.559-4.07 6.065-8.406 13.545-8.247 18.725.124 4.062 3.914 6.309 6.74 8.047 2.944 1.81 7.17 4.783 11.26 3.009 4.844-2.102 9.61-9.582 13.549-15.452 4.03-6.005 10.583-15.186 10.97-20.873.309-4.555-4.77-6.071-7.63-7.83Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.104" d="M-25.904 829.169c-7.278 3.569-16.788 10.054-16.529 20.869.218 9.217 9.165 22.173 14.971 32.745 6.263 11.405 14.202 25.229 22.696 30.611 8.62 5.464 17.805 2.385 24.596-.945 7.064-3.464 14.213-8.245 14.178-18.62-.029-9.418-6.616-24.06-12.623-34.999-5.93-10.798-12.136-25.896-20.164-31.358-9.052-6.157-19.98-1.806-27.125 1.697Zm10.568 18.325c-3.153 1.546-7.908 4.13-8.036 9.122-.143 5.682 4.763 14.065 8.12 20.18 3.537 6.44 8.233 13.817 13.028 16.314 3.76 1.959 7.656-.032 10.618-1.484 3.085-1.513 7.856-3.496 8.237-7.773.45-5.069-4.035-12.802-7.458-19.034-3.502-6.377-8.664-16.45-13.654-19.655-3.997-2.567-7.857.859-10.855 2.33Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.934" d="M42.214 918.595c-1.134 7.745-1.061 18.944 8.312 25.148 7.988 5.29 24.176 6.039 36.527 7.808 13.325 1.908 29.674 3.952 39.142.566 9.61-3.433 12.256-12.364 13.314-19.59 1.101-7.517 1.127-15.88-7.743-21.997-8.051-5.555-24.322-9.129-37.102-10.959-12.616-1.807-29.058-5.945-38.325-2.968-10.45 3.357-13.011 14.389-14.125 21.992Zm21.698 2.675c-.491 3.355-1.016 8.565 3.168 11.621 4.766 3.475 14.733 4.643 21.876 5.666 7.524 1.078 16.513 1.813 21.395-.418 3.83-1.749 4.369-5.943 4.83-9.095.481-3.283 1.528-8.149-1.902-10.976-4.065-3.35-13.237-4.459-20.518-5.502-7.45-1.067-19.005-3.037-24.605-1.074-4.484 1.572-3.777 6.587-4.244 9.778Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn25(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.995" d="m262.473 728.964 11.777 5.212s9.105-22.15 2.715-24.496c-12.848-4.717-79.801-3.806-79.801-3.806s-20.091-1.915-15.576 8.857c4.514 10.773 14.771 7.715 14.771 7.715l66.114 6.518Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.94" d="m152.555 714.999 12.59 2.94s4.385-23.462-2.348-24.584c-13.538-2.255-78.88 11.051-78.88 11.051s-20.054 1.841-13.435 11.593c6.62 9.754 16.033 4.847 16.033 4.847l66.04-5.847Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.134" d="m-6.129 761.834-7.167 8.692s-17.71-16.849-13.597-21.132c8.27-8.611 63.216-30.533 63.216-30.533s15.47-8.549 16.8 2.683c1.332 11.233-8.442 11.964-8.442 11.964l-50.81 28.326Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.849" d="m-40.077 797.509-7.88-8.279s20.209-13.629 24-9.004c7.624 9.3 21.741 64.801 21.741 64.801s6.435 16.05-5.4 15.299c-11.837-.75-11.068-10.059-11.068-10.059l-21.393-52.758Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn26(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.893" d="m67.482 911.216 11.585 1.444s-5.844 22.983-11.858 21.797c-12.092-2.385-60.691-36.103-60.691-36.103s-15.82-8.29-6.419-15.065c9.403-6.777 15.198.826 15.198.826l52.185 27.101Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.981" d="m175.36 932.396 11.419-2.162s2.217 23.636-3.858 24.344c-12.213 1.423-69.421-15.807-69.421-15.807s-17.72-3.054-11.126-12.365c6.594-9.313 14.621-3.852 14.621-3.852l58.365 9.842Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M-2.815 735.742a615.803 615.803 0 0 1 15.797-7.109c-.483-1.662-.832-3.353-1.11-5.019-1.229-7.226-1.479-16.533 6.616-22.523 7.97-5.903 24.17-8.531 37.443-10.441 12.318-1.77 27.964-5.594 37.206-2.765 6.746 2.064 10.661 6.989 12.974 12.281 6.949-1.258 14.8-2.616 22.468-3.802 1.943-4.775 5.057-9.054 10.177-11.563 9.456-4.647 25.867-3.148 39.238-1.641 12.402 1.398 28.638 1.339 36.7 7.238 5.164 3.777 7.565 9.514 8.','504 15.474 4.782.052 9.872.138 14.964.274 1.962-4.506 5.019-8.503 9.906-10.898 9.457-4.648 4.514 4.294 17.891 5.801 5.165.582 35.781 2.292 44.836 12.779 12.685 14.69 24.954 31.988 24.954 31.988s-2.639-.084-6.375-.37c-2.036 5.338-5.305 10.13-10.727 12.554-9.259 4.139-25.784.128-38.451-1.3-12.829-1.446-29.173-4.786-37.299-11.002-6.846-5.232-8.487-12.353-8.426-19.493l-11.848-1.169c-1.408 8.579-4.558 18.616-13.284 22.518-9.259 4.139-25.787.127-38.456-1.301-12.822-1.445-29.173-4.786-37.298-11.001-6.312-4.825-8.202-11.258-8.401-17.829l-15.526 1.373c-.089 5.868-1.732 11.962-7.474 15.923-7.896 5.456-24.835 6.101-37.419 7.91-12.036 1.731-27.516 2.844-37.108.372l-14.833 8.27a15.497 15.497 0 0 1 .834 6.745c-.9 9.296-11.503 21.793-18.328 31.965-2.81 4.189-6.127 8.755-9.655 13.009 2.314 7.027 4.585 14.','641 6.517 21.433 3.074.198 6.144 1.093 9.029 3.052 8.022 5.46 14.23 20.559 20.163 31.36 6.008 10.938 12.595 25.578 12.62 34.997l14.784 7.677c1.907-2.137 4.359-3.877 7.547-4.903 9.267-2.977 25.708 1.162 38.326 2.969 12.778 1.83 29.046 5.403 37.106 10.959 6.513 4.496 8.223 10.206 8.243 15.902l35.349 5.962 11.422-2.162s2.215 23.636-3.863 24.343c-7.204.84-30.077-4.814-47.614-9.59-1.993 3.034-4.874 5.619-9.115 7.134-9.468 3.384-25.81 1.341-39.135-.568-12.36-1.769-28.546-2.519-36.53-7.807-8.267-5.47-9.297-14.818-8.654-22.261-6.055-3.704-12.296-7.712-17.812-11.333a52.396 52.396 0 0 1-4.23 2.297c-6.79 3.328-15.98 6.41-24.597.946-8.497-5.384-16.435-19.205-22.692-30.609-5.811-10.575-14.754-23.529-14.973-32.747-.248-10.276 8.323-16.642 15.42-20.312l-4.655-11.479c-8.763 3.942-16.248.535-22.614-3.382-6','.48-3.985-13.95-10.067-13.345-19.856.588-9.646 9.148-22.948 16.356-33.689 6.688-9.958 13.945-23.671 22.228-28.353 9.19-5.196 19.29-1.279 26.23 2.772Zm261.668-7.134c.049 2.608.613 5.161 2.501 6.907 4.106 3.795 13.311 4.587 20.62 5.41 7.481.844 19.085 2.532 24.677-.167-6.604-4.335-.869-26.08-8.042-26.889-3.777-.425-21-5.218-24.808-5.04 1.261.261 2.325.545 3.162.851 6.39 2.346-2.715 24.496-2.715 24.496l-11.776-5.211-3.619-.357Zm-305.834 61.646c.71 1.231 1.79 2.239 2.951 3.105l-2.951-3.105Zm97.21-59.162c4.018-.202 8.436-.897 12.332-1.458 7.426-1.068 19.043-2.422 23.763-5.875 1.202-.875 1.795-1.935 2.03-3.076l-1.84.162s-9.412 4.908-16.035-4.846c-5.978-8.803 9.781-11.16 12.904-11.536a8.247 8.247 0 0 0-2.655-1.526c-5.61-1.996-15.466-.316-22.585.708-7.5 1.078-16.285 2.895-20.244 6.405-2.751 2.443-','2.45 5.999-1.975 8.972l.402-.159s15.468-8.55 16.8 2.683c.581 4.929-.972 7.836-2.897 9.546ZM69.083 934.09c5.194 2.569 13.612 3.574 19.868 4.47 7.528 1.077 16.515 1.813 21.392-.419.06-.026.12-.052.172-.08-4.733-1.361-12.98-4.825-8.141-11.653 4.849-6.844 10.466-5.709 13.106-4.627-.309-1.389-.964-2.684-2.205-3.71-4.068-3.35-13.234-4.458-20.512-5.501-7.27-1.04-18.431-2.939-24.174-1.215l10.476 1.306s-4.683 18.425-9.982 21.429Zm80.574-218.836c-.303 3.493-.206 7.417 2.392 9.815 4.099 3.795 13.309 4.587 20.612 5.41 7.488.844 19.089 2.531 24.681-.167 2.895-1.396 3.6-4.395 3.856-7.387l-4.841-.478s-10.257 3.058-14.771-7.715c-4.515-10.773 15.576-8.857 15.576-8.857s.86-.011 2.406-.025a8.446 8.446 0 0 0-1.364-1.391c-4.806-3.906-14.814-4.719-21.988-5.528-3.235-.365-6.743-.638-10.074-.596 1.322 7.202-1 19.','604-1 19.604l-12.588-2.94-2.897.255ZM-18.968 849.559c-2.287 1.586-4.328 3.814-4.408 7.06-.142 5.681 4.765 14.065 8.12 20.179 3.54 6.441 8.233 13.815 13.026 16.313a7.21 7.21 0 0 0 2.528.772c-3.08-2.983-5.184-7.001-.203-10.594 9.409-6.775 15.204.828 15.204.828l1.18.614c.073-.281.123-.574.149-.878.448-5.066-4.033-12.799-7.457-19.031-2.746-4.998-6.512-12.264-10.406-16.716 1.195 4.62 2.132 12.763-6.379 12.223-11.838-.751-11.075-10.061-11.075-10.061l-.28-.709Zm-8.169-96.536c-4.62 3.365-9.052 10.355-12.48 15.465-4.075 6.065-8.407 13.542-8.247 18.722.019.629.125 1.214.3 1.76 2.842-1.868 20.128-12.984 23.605-8.741 1.243 1.511 2.651 4.241 4.143 7.755 1.218-1.747 2.39-3.52 3.5-5.167 4.027-6.008 10.586-15.189 10.965-20.875.013-.187.017-.37.013-.547l-.785.441-7.174 8.691s-11.587-11.024-13.84-17.504Z" c'));
      
        return render;
      }

    function renderFn27(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('lip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.998" d="M2184.21 561.368c6.25 6.912 13.9 17.756 10.67 28.394-2.75 9.068-15.19 17.822-23.87 25.657-9.35 8.451-21.04 18.535-30.95 19.964-10.06 1.454-18.33-5.852-24.16-12.301-6.06-6.709-11.84-14.768-8.96-25.072 2.62-9.355 13.19-20.877 22.16-28.983 8.86-8.002 19.17-20.153 28.65-21.877 10.68-1.944 20.33 7.432 26.46 14.218Zm-15.53 13.346c2.7 2.994 6.71 7.761 5.47 12.786-1.42 5.719-8.6 11.791-13.61 16.322-5.29 4.773-11.98 9.942-17.43 10.21-4.27.212-7.59-3.568-10.13-6.381-2.65-2.93-6.84-7.107-6.04-11.537.95-5.25 7.53-10.871 12.64-15.489 5.23-4.725 13.13-12.36 18.96-13.243 4.68-.707 7.57 4.484 10.14 7.332Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.001" d="M2158.54 567.383c-2.54 7.032-2.09 21.201 4.07 22.393 6.74 1.304 34.37-30.311 34.37-30.311l-19.12-11.883s-16.78 12.769-19.32 19.801Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.998" d="M2106.68 628.943c6.24 6.912 13.9 17.756 10.67 28.394-2.75 9.068-15.2 17.822-23.87 25.657-9.35 8.452-21.04 18.535-30.95 19.965-10.06 1.453-18.33-5.853-24.16-12.302-6.06-6.709-11.85-14.768-8.96-25.072 2.62-9.355 13.19-20.876 22.16-28.983 8.86-8.002 19.17-20.153 28.64-21.877 10.69-1.944 20.34 7.433 26.47 14.218Zm-15.53 13.346c2.7 2.994 6.71 7.762 5.47 12.787-1.42 5.718-8.6 11.79-13.61 16.321-5.29 4.773-11.98 9.942-17.43 10.211-4.27.212-7.59-3.569-10.13-6.382-2.65-2.93-6.84-7.107-6.04-11.537.95-5.25 7.53-10.87 12.64-15.489 5.23-4.725 13.12-12.36 18.96-13.243 4.68-.707 7.56 4.484 10.14 7.332Z" clip-rule="evenodd"/><path fill="',colors[1].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn24(colors),renderFn25(colors),renderFn26(colors),renderFn27(colors)));
      
        return render;
      }
}