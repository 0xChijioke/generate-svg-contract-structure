//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_04_ARMS_BACK_tweetybord_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<g clip-path="url(#a)"><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9" d="M626.151 1315.99s-332.834-241.98-369.41-384.661c-36.575-142.684 149.958-471.442 149.958-471.442S547.14 80.434 454.068 69.734C304.577 52.548-238.584 433.612-238.584 433.612l-56.424 1672.468 368.777-569.57 74.038 277.42 66.763-228.07 64.968 175.33 93.791-195.69 13.184 221.67 120.047-222.93 51.967 225.93 67.624-474.18Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M240.138 488.772c-.101.943.729 1.833.628 2.776-.06.557-.608.976-1.065 1.3 0 0-2.889.562-6.303 1.143-42.581 7.251-63.046-.504-68.977-2.616-14.185-5.051-23.861-12.239-29.555-17.106-1.806-1.544-4.194-3.885-4.198-3.901-.154-.609-.226-1.238-.38-1.848.626.06',' 1.259-.122 1.884-.062.193.018 8.987 6.066 23.559 10.682 2.116.67 3.439 1.158 9.848 2.781 3.457.875 21.119 4.749 35.208 6.412 10.796 1.275 21.86 2.221 38.678 2.15l.673-1.711Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="M256.44 463.347c60.716-25.495 92.148-88.522 70.206-140.777-21.941-52.254-88.948-73.947-149.663-48.452-60.715 25.494-92.148 88.522-70.206 140.776 21.942 52.254 88.948 73.947 149.663 48.453Z"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="9.998" d="m575.007 1855.83-10.246 19.6a17.527 17.527 0 0 1-14.086 9.35 17.554 17.554 0 0 1-15.433-6.91l-265.338-351.58 27.979-21.12 10.558 13.99 238.092 315.48 4.46-8.53-165.933-228.5c-5.498-7.57-4.079-18.13 3.226-23.98l78.757-63.08a17.552 17.552 0 0 1 15.8-3.16 17.512 17.512 0 0 1 11.706 11.08l130.734 375.11a17.487 17.487 0 0 1-1.009 13.87l-51.823 99.36a17.528 17.528 0 0 1-29.683 2.25L154.593 1478.7l28.285-20.7 371.529 507.61 35.284-67.65-14.684-42.13Zm-37.732-108.26-67.668-194.16-46.361 37.13 114.029 157.03Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m-91.744 684.254 136.032-5.932-169.88 495.378L92.117 929.032S-114.52 1339.75-82.203 1309.75c32.317-30 141.058-118.59 141.058-118.59l-29.346 321.55 95.499-156.55 27.145 236.27 76.616-194.84 29.2 226.73 91.925-177.48" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M81.47 941.37c-68.07 78.29-136.1 156.61-204.175 234.9-1.252 1.44-3.717 1.78-5.377.38-1.23-1.04-1.648-2.81-1.162-4.2 57.287-164.32 114.63-328.608 171.917-492.92l-137.77 8.38-.304-7.006c139.278-6.147 139.323-6.412 140.68-6.023 1.723.495 2.842 2.274 2.543 4.042-.35 2.072-.644 1.996-173.031 494.117 71.657-82.33 143.181-164.79 214.839-247.12.189-.217 1.911-1.323 3.824-.642 1.902.677 3.401 3.024 2.225 5.544-.237.507-155.69 309.638-175.398 371.158 7.401-6.67 23.976-21.25 62.721-53.55 36.644-30.54 73'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('.263-60.37 73.3-60.4 2.756-2.13 6.347-.2 6.578 2.82.017.22-.004.45-.006.67-.189 25.77-2.642 25.59-33.083 320.34 30.805-52.72 61.463-105.53 92.266-158.26.128-.21 1.537-1.57 3.472-1.31.294.04 2.089.28 2.996 2.19.092.19.207.39.228.6 7.895 78.8 15.625 157.63 23.519 236.43 24.365-65.08 48.675-130.19 73.04-195.27.682-1.82 3.036-2.98 5.082-1.98 1.373.67 1.906 2.1 1.925 2.26 8.665 75.58 17.172 151.17 25.838 226.75l90.234-181.16 6.23 3.22c-93.26 180.27-92.989 180.48-94.188 181.61-1.727 1.63-4.611 1.12-5.681-1-.09-.18-.203-.36-.227-.56-8.676-75.62-17.193-151.25-25.869-226.87-72.904 195.16-72.831 195.19-73.24 195.88-1.4 2.33-4.817 2.46-6.382.23-.059-.09-.5-.71-.543-1.14-7.974-78.69-15.782-157.39-23.756-236.09-30.633 52.46-61.208 104.94-91.841 157.39-.781 1.33-2.727 2.33-4.631 1.7-1.834-.61-2.876-2.49','-2.71-4.13 10.673-104.99 21.402-209.98 32.076-314.98-119.899 98.08-135.914 114.56-138.22 116.35-4.668 3.62-8.535.78-9.03-2.87-.567-4.18-.97-15.76 74.37-172.69C22.896 1058.69 64.6 975.067 81.47 941.37Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" d="m10.46 578.302 136.612-27.603L-89.75 918.398l202.642-162.286s-233.797 325.768-194.96 304.878c38.839-20.88 166.404-79.189 166.404-79.189L-42.896 1253.28l171.981-158.05-74.42 359.26L210.44 1214.2l-42.644 236.98 133.707-148.58" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M101.005 765.999C38.207 817.782-24.559 869.602-87.362 921.381c-1.57 1.294-4.268 1.078-5.562-.865-1.055-1.585-.473-3.402-.328-3.625 79.68-121.831 159.493-243.575 239.173-365.406L7.715 582.435l-1.389-6.874c139.777-28.318 139.782-28.605 141.228-28.409 ','2.316.313 3.733 2.811 2.814 4.961a3.435 3.435 0 0 1-.281.529C70.294 674.419-9.545 796.166-89.339 917.943c66.607-54.947 133.172-109.945 199.779-164.892 1.231-1.016 3.377-1.222 4.902-.003 1.404 1.122 1.865 3.168 1.079 4.784-.283.581-4.104 5.743-21.636 30.485C23.31 889.186-69.72 1024.37-81.345 1056.05c6.497-3.43 24.297-12.71 77.842-37.94 43.142-20.331 86.099-39.98 86.148-40.001 3.108-1.323 5.992 1.213 5.736 4.058-.01.112-.066.737-.367 1.359-43.462 89.714-86.988 179.404-130.45 269.124 56.292-53.43 112.537-106.91 168.829-160.34 1.144-1.09 3.292-1.49 4.936-.36 1.657 1.14 1.786 3.15 1.727 3.43-25.985 119.5-52.138 238.95-78.123 358.46 50.814-80.55 101.574-161.13 152.388-241.67.972-1.54 3.266-2.24 5.055-1.14 1.633.99 1.828 2.92 1.775 3.19-15.252 78.7-30.67 157.37-45.921 236.07l133.011-152.64 5.216 ','4.69c-135.701 150.92-135.489 151.21-136.96 152-2.138 1.16-4.846-.17-5.251-2.56-.035-.21-.09-.42-.051-.63 15.27-78.77 30.705-157.5 45.976-236.27-50.782 80.55-101.508 161.14-152.289 241.69-.875 1.4-2.885 2.2-4.677 1.47-2.031-.83-2.3-2.71-2.343-3.01-.032-.21-.084-.45-.037-.66 25.828-119.37 51.829-238.71 77.658-358.08l-168.657 159.95c-1.006.95-2.895 1.44-4.512.64-1.685-.84-2.588-2.85-2.093-4.67.06-.22.138-.44.238-.64 42.46-87.92 84.978-175.81 127.44-263.725-140.627 64.565-159.79 76.255-162.458 77.375-5.418 2.29-8.993-.91-8.89-5.45.138-6.11 6.267-24.29 74.72-126.028 43.681-64.924 95.764-138.334 116.734-167.743Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M93.8 1027.33c34.489 0 62.448-26.91 62.448-60.101 0-33.193-27.959-60.102-62.447-60.102-34.49 0-62.448 26.909-62.448 60.102 0 33.191 27.959 60.101 62.448 60.101Z"/><path fill="#000" fill-rule="evenodd" d="M93.8 897.127c40.089 0 72.447 31.519 72.447 70.103 0 38.58-32.358 70.1-72.447 70.1-40.088 0-72.448-31.52-72.448-70.1 0-38.584 32.36-70.103 72.448-70.103Zm0 10c-34.465 0-62.447 26.931-62.447 60.103 0 33.17 27.982 60.1 62.447 60.1 34.466 0 62.448-26.93 62.448-60.1 0-33.172-27.982-60.103-62.448-60.103Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.998" d="m152.456 935.049 43.902-15.477-2.234-64.24 49.154-4.801"/><path fill="#fff" fill-rule="evenodd" d="M239.249 798.29C189.283 823.211 392.121 404.055 459.77',' 99.853c11.591 52.398-30.91 222.694-76.273 337.905L239.249 798.29Zm-10.141 67.3c2.298 92.485 54.753 171.34 119.22 222.82l-65.465 36.13-69.839-149.658 16.084-109.292Z" clip-rule="evenodd"/><path fill="',colors[3].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-opacity=".5" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.998" d="m306.016 1032.36-31.664-43.296c-67.032 26.516-101.191 61.926-112.492 135.176l25.487 27.65c37.628-77.39 58.636-88.51 118.669-119.53Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m272.515 1029.02-6.888-16.34c.074-.37.241-.71.315-1.08.259.34.932.15 1.191.49.332.44 10.955 16.81 11.127 17.14.67 1.26-.091 2.74-.844 3.23-9.936 6.49-14.766 9.67-28.823 16.34-5.722 2.72-16.537 7.51-16.725 7.56-.406.11-.834-.33-1.24-.22.288-.3.131-.88.419-1.18.084-.08 14.895-11.31 23.196-16.38 4.125-2.52 9.371-5.16 10.202-5.58 2.68-1.35 5.39-2.63 8.07-3.98Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.998" d="M1099.1 2240.61c-43.26 231.25-93.21 403.11-174.447 519.04-69.049-150.71-35.081-281.95-22.212-418.81-32.174 95.62-71.812 186.65-128.195 267.39-20.876-86.99-25.803-164.46-19.257-235.06-21.058 62.71-54.797 121.7-103.205 176.36-28.061-89.11-37.453-170.38-30.235-244.66-22.931 72.13-59.535 138.78-105.113 201.83l-12.466-221.48-172.617 84c38.432-164.83 132.374-298.63 200.258-434.37l545.319 222.35 495.33-241.48c102.66 106.75 231.56 213.21 321.48 429.37l-238.79-115.71c17.35 57.28 71.66 170.94 88.06 257.19-60.15-52.13-226.36-125.38-256.43-189.03 3.06 71.66-2.9 199.75-16.2 274.59-66.68-77.64-99.07-167.32-118.49-261.54 2.96 143.82.51 287.92-42.16 434.13-110.12-170.73-171.3','9-282.02-210.63-504.11Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m1701.53 2067.76-7.18 10.13 131.61 163.26-124.43-173.39Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.998" d="M1240.81 2196.86c-1.62 256.73-85.29 512.33-146.79 736.9-81.37-235.96-90.21-475.58-118.069-720.06l-107.513 298.7-34.822-326.49-163.603 236.76 2.298-237.91-126.725 186.41 28.517-221.54L472.01 2257.1l47.662-282.29 185.194-109.93 198.626 187.87 443.958-8.4 153.62-232.96 47.75 80.48c62.14 150.63 231 396.18 231 396.18l-203.94-169.11-83.37-26.48 57.05 243.45-153.15-175.6 4.28 286.12-159.88-249.57Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-linecap="sq','uare" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9" d="M1573.93 1199.67s360.82-213.589 397.4-356.27c36.57-142.684-379.18-566.776-351.79-727.046 27.39-160.27 849.26 198.595 849.26 198.595l26.29 1674.811-368.78-569.57-74.03 277.42-66.77-228.07-64.96 175.33-93.8-195.69-13.18 221.67-120.05-222.92-51.96 225.93-67.63-474.19Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M2001.81 893.918c-.22.568.21 1.258-.01 1.826-.02.056-3.93 6.252-6.59 10.283-8.14 12.321-13.14 17.613-14.45 19.002-.73.773-3.74 3.964-9.52 9.267-6.14 5.639-18.56 16.095-18.62 16.103-.56.063-1.26.463-1.68.089-.42-.375-.35-1.184-.09-1.679.08-.152 6.35-9.44 10.78-15.718 1.09-1.543 8.59-12.181 14.67-18.49 3.73-3.866 9.2-8.605 10.03-9.322 4.57-3.968 13.46-11.057 13.67-11.161.54-.277 1.27.077 1.81-.2Z','M179.207 862.703c.352.474.98.694 1.332 1.168a172.45 172.45 0 0 1 2.539 5.881c2.877 7.141 3.052 10.81 3.098 11.783.025.54.131 2.754-.243 6.754-.395 4.236-1.847 12.522-1.895 12.584-.345.441-.513 1.242-1.07 1.295-.558.053-1.025-.58-1.296-1.07-.062-.112-2.134-5.547-3.39-9.271-.307-.909-2.457-7.283-2.576-11.718-.073-2.717.477-6.421.559-6.975.455-3.062 1.766-8.849 1.854-9.032.256-.532.831-.867 1.088-1.399ZM71.811 920.021c.342-.445.504-1.01.845-1.455.014-.017 2.661-1.091 4.9-1.748 6.28-1.843 18.897-4.431 34.542.564 14.838 4.736 30.537 18.698 34.658 36.056 1.528 6.439.704 11.987.692 12.002-.358.432-.855.734-1.212 1.165-.344-.441-.821-.768-1.165-1.209-.188-.242.065-12.861-14.558-25.458-2.224-1.916-8.504-7.465-23.566-13.892-.666-.284-5.645-2.346-10.801-3.607-.107-.026-4.194-1.141-9.576-1.715-5.66-.6','03-10.397-.204-13.306.14-.88.104-.684-.398-1.453-.843Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1712.96 350.219c126.33 123.392 226.49 267.968 313.3 431.582-19.04 64.006-29.53 120.631-92.26 147.179 21.35-42.492 45.88-81.706 40.02-152.22-70.78-150.593-162.46-290.357-261.06-426.541Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1683.71 210.45s-49.55-87.551-28.11-104.317c21.43-16.766 156.73 3.721 156.73 3.721-90.07-4.106-150.79 14.977-128.62 100.596Z" clip-rule="evenodd"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="M1905.93 415.702c65.85 0 119.23-45.943 119.23-102.616 0-56.674-53.38-102.617-119.23-102.617s-119.24 45.943-119.24 102.617c0 56.673 53.39 102.616 119.24 102.616Z"/><path fill="#fff" fill-rule="evenodd" d="M1883.17 229.187c-.3.281-.22.827-.52 1.108-.09.092-12.98 8.521-20.7 11.913-8.69 3.82-27.08 8.921-27.1 8.914-.36-.114-.9-.067-1.04-.409-.15-.342.1-.82.41-1.043.12-.092 16.3-10.043 24.97-13.795 7.73-3.347 22.68-7.057 22.82-7.065.4-.025.75.402 1.16.377ZM319.616 391.477c-.491-.195-1.078-.025-1.569-.22-.127-.051 1.973-14.808-.517-31.884-1.454-9.972-5.921-35.164-29.089-56.492-26.257-24.171-64.063-30.545-88.566-22.739-.472.15-.466.179-.521.168-.557-.108-.459-.36-1.017-.469.228-.296.243-.722','.471-1.018.076-.098 2.437-.935 2.651-1.011 29.448-10.437 76.487-1.98 102.379 31.638 5.903 7.665 12.773 19.845 16.018 35.763 2.427 11.901 3.307 27.123-.24 46.264Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="9.998" d="m1614.03 1798.29 12 18.58c3.27 5.04 8.89 8.06 14.89 8a17.51 17.51 0 0 0 14.73-8.29l231.84-374.52-29.8-18.45-9.23 14.9-208.03 336.06-5.23-8.08 144.19-242.81c4.78-8.05 2.39-18.43-5.42-23.58l-84.23-55.56a17.523 17.523 0 0 0-16.02-1.69 17.51 17.51 0 0 0-10.64 12.1l-95.64 385.56c-1.17 4.69-.34 9.66 2.28 13.72l60.75 94.17c3.29 5.08 8.97 8.12 15.02 8.02 6.06-.1 11.63-3.33 14.75-8.52l402.5-633.13-30.07-18.01-388.02 608.95-41.36-64.11 10.74-43.31Zm27.6-111.28 49.5-199.56 49.59 32.7-99.09 166.86Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m2293.28 663.587-134.11-23.514 104.23 513.217-184.15-270.822s151.65 434.042 123.5 400.102c-28.16-33.94-124.5-135.88-124.5-135.88l-12.58 322.65-74.4-167.61-57.54 230.75-50.72-203.12-58.34 221.03-68.15-187.9" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M2078.66 1153.01c-3.03 105.5-6 210.99-9.02 316.48-.06 1.92-1.72 3.77-3.89 3.82-1.77.04-3.21-1.18-3.71-2.36-23.57-55.98-47.09-111.98-70.66-167.96-18.11 76.99-36.05 154.02-54.16 231.01-.06.25-.98 1.93-2.87 2.24-2.07.35-3.92-1.13-4.32-2.84-15.69-67.7-31.33-135.41-47.03-203.11-18.4 73.85-36.65 147.75-55.05 221.6-.07.24-1 1.84-2.82 2.07-.28.04-1.98.26-3.25-1.29-1.04-1.27-.74-1.45-69.85-192.29l6.6-2.39 65.99 191.33c18.39-73.81 36.62-147.66 55.01-221.48.06-.24.97-1.85 2.8-2.14 2.02-.33 3.8 1.12 4.18 2.77 15.','73 67.69 31.39 135.4 47.12 203.09 18.04-77.11 35.92-154.27 53.96-231.39.06-.25 1-1.96 2.92-2.29 2.08-.35 3.31.97 3.51 1.19.15.16.32.31.4.51 23.71 56.27 47.27 112.61 70.98 168.88l8.72-321.92c.04-1.66 1.33-3.43 3.26-3.81 2.12-.41 3.49.97 3.71 1.19.04.04 54.38 57.53 93.24 100.37 14.8 16.32 22.62 25.29 26.89 30.29-4.61-25.47-28.75-105.85-84.05-269.08-17-50.178-33.34-97.445-41.36-120.476-.05-.15-.54-1.567-.6-1.896-.43-2.601 1.82-4.947 4.44-4.614 1.28.164 2.29 1.07 2.37 1.19 60.38 90.929 120.61 181.956 180.99 272.886-35.8-170.606-71.65-341.199-107.46-511.804-.39-1.895.92-3.943 2.98-4.254 1.4-.21 1.41.059 138.71 24.208l-1.21 6.907-135.52-26.167c35.51 170.351 71.07 340.69 106.58 511.04.46 2.22-1.21 4.49-3.57 4.63-1.65.09-2.89-1.02-2.99-1.17-57.53-86.61-114.92-173.311-172.44-259.928 25.21 72.592 11','9.45 345.808 122.05 383.918.09 1.38.62 6.87-3.5 8.3-4 1.38-7.06-3.03-7.79-3.9-26.42-31.61-105.73-115.91-120.29-131.36Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" d="m2205.68 545.283-131.89-45.078 187.17 395.294-179.9-187.184s189.6 353.325 153.79 327.585c-35.8-25.75-154.73-100.099-154.73-100.099l90.97 285.679-150.04-179 27.22 365.87-123.31-258.46 11.56 240.51-113.32-164.65" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M2082.74 942.235c30.71 92.675 61.48 185.345 92.19 278.025.53 1.62-.13 3.77-1.9 4.74-1.42.78-3.3.6-4.53-.45-.18-.15-.35-.31-.49-.49-48.86-60.13-97.65-120.32-146.5-180.46 10.13 121.72 20.45 243.41 30.58 365.13.02.19-.27 1.83-1.63 2.77-1.7 1.18-4.12.75-5.31-.93a3.3 3.3 0 0 1-.34-.57c-39.91-86.46-79.76-172.94-119.67-259.4 4.93 80.08 10.03 160.16 1'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors)));
      
        return render;
      }
}