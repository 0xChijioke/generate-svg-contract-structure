//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_04_ARMS_BACK_tweetybord_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<g clip-path="url(#a)"><path fill="gray" fill-rule="evenodd" stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9" d="M626.151 1315.99s-332.834-241.98-369.409-384.661C220.166 788.645 406.7 459.887 406.7 459.887S547.14 80.434 454.068 69.734c-149.49-17.186-692.651 363.878-692.651 363.878l-56.425 1672.468L73.77 1536.51l74.037 277.42 66.763-228.07 64.968 175.33 93.791-195.69 13.185 221.67 120.046-222.93 51.967 225.93 67.624-474.18Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="M256.439 463.347c60.715-25.495 92.147-88.522 70.206-140.777-21.942-52.254-88.948-73.947-149.663-48.452-60.716 25.494-92.148 88.522-70.206 140.776 21.941 52.254 88.948 73.947 149.663 48.453Z"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="9.998" d="m575.008 1855.83-10.246 19.6a17.527 17.527 0 0 1-14.086 9.35 17.554 17.554 0 0 1-15.433-6.91l-265.338-351.58 27.979-21.12 10.557 13.99 238.093 315.48 4.46-8.53-165.933-228.5c-5.498-7.57-4.079-18.13 3.226-23.98l78.757-63.08a17.552 17.552 0 0 1 15.8-3.16 17.512 17.512 0 0 1 11.706 11.08l130.733 375.11a17.483 17.483 0 0 1-1.008 13.87l-51.823 99.36a17.528 17.528 0 0 1-29.683 2.25L154.594 1478.7l28.285-20.7 371.529 507.61 35.284-67.65-14.684-42.13Zm-37.732-108.26-67.668-194.16-46.361 37.13 114.029 157.03Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m-91.743 684.254 136.032-5.932-169.88 495.378L92.118 929.032s-206.636 410.718-174.32 380.718c32.317-30 141.058-118.59 141.058-118.59L29.51 1512.71l95.499-156.55 27.145 236.27 76.616-194.84 29.2 226.73 91.925-177.48" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M81.47 941.37c-68.07 78.29-136.101 156.61-204.176 234.9-1.252 1.44-3.717 1.78-5.376.38-1.231-1.04-1.648-2.81-1.162-4.2 57.287-164.32 114.63-328.608 171.916-492.92l-137.769 8.38-.305-7.006c139.279-6.147 139.323-6.412 140.681-6.023 1.722.495 2.842 2.274 2.543 4.042-.35 2.072-.645 1.996-173.031 494.117 71.657-82.33 143.18-164.79 214.838-247.12.189-.217 1.911-1.323 3.825-.642 1.901.677 3.401 3.024 2.224 5.544-.236.507-155.689 309.638-175.398 371.158 7.401-6.67 23.977-21.25 62.722-53.55 36.643-30.','54 73.262-60.37 73.3-60.4 2.755-2.13 6.346-.2 6.577 2.82.017.22-.003.45-.005.67-.19 25.77-2.643 25.59-33.084 320.34 30.806-52.72 61.463-105.53 92.267-158.26.127-.21 1.536-1.57 3.472-1.31.294.04 2.088.28 2.995 2.19.092.19.208.39.228.6 7.895 78.8 15.625 157.63 23.519 236.43 24.366-65.08 48.675-130.19 73.041-195.27.681-1.82 3.035-2.98 5.081-1.98 1.373.67 1.907 2.1 1.925 2.26 8.665 75.58 17.173 151.17 25.838 226.75l90.235-181.16 6.23 3.22c-93.26 180.27-92.99 180.48-94.188 181.61-1.728 1.63-4.612 1.12-5.682-1-.09-.18-.203-.36-.227-.56-8.675-75.62-17.193-151.25-25.869-226.87-72.903 195.16-72.831 195.19-73.239 195.88-1.4 2.33-4.817 2.46-6.382.23-.059-.09-.5-.71-.543-1.14-7.974-78.69-15.783-157.39-23.757-236.09-30.632 52.46-61.207 104.94-91.84 157.39-.782 1.33-2.727 2.33-4.631 1.7-1.835-.61-2.876-'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('2.49-2.71-4.13 10.672-104.99 21.402-209.98 32.075-314.98-119.898 98.08-135.913 114.56-138.219 116.35-4.668 3.62-8.535.78-9.03-2.87-.567-4.18-.97-15.76 74.369-172.69C22.897 1058.69 64.6 975.067 81.47 941.37Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" d="m10.46 578.302 136.611-27.603L-89.75 918.398l202.642-162.286s-233.797 325.768-194.96 304.878c38.838-20.88 166.403-79.189 166.403-79.189L-42.896 1253.28l171.98-158.05-74.42 359.26L210.44 1214.2l-42.645 236.98 133.707-148.58" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M101.005 765.999C38.207 817.782-24.559 869.602-87.362 921.381c-1.57 1.294-4.268 1.078-5.562-.865-1.055-1.585-.473-3.402-.328-3.625 79.68-121.831 159.493-243.575 239.173-365.406L7.715 582.435l-1.389-6.874c139.777-28.318 139.782-28.605 141.228-28','.409 2.316.313 3.733 2.811 2.814 4.961a3.435 3.435 0 0 1-.281.529C70.294 674.419-9.545 796.166-89.339 917.943c66.607-54.947 133.172-109.945 199.779-164.892 1.231-1.016 3.377-1.222 4.902-.003 1.404 1.122 1.865 3.168 1.079 4.784-.283.581-4.104 5.743-21.636 30.485C23.31 889.186-69.72 1024.37-81.345 1056.05c6.497-3.43 24.297-12.71 77.842-37.94 43.142-20.331 86.099-39.98 86.148-40.001 3.108-1.323 5.992 1.213 5.736 4.058-.01.112-.066.737-.367 1.359-43.462 89.714-86.988 179.404-130.45 269.124 56.292-53.43 112.537-106.91 168.829-160.34 1.144-1.09 3.292-1.49 4.936-.36 1.657 1.14 1.786 3.15 1.727 3.43-25.985 119.5-52.138 238.95-78.123 358.46 50.814-80.55 101.574-161.13 152.388-241.67.972-1.54 3.266-2.24 5.055-1.14 1.633.99 1.828 2.92 1.775 3.19-15.252 78.7-30.67 157.37-45.921 236.07l133.011-152.64 5','.216 4.69c-135.701 150.92-135.489 151.21-136.96 152-2.138 1.16-4.846-.17-5.251-2.56-.035-.21-.09-.42-.051-.63 15.27-78.77 30.705-157.5 45.976-236.27-50.782 80.55-101.508 161.14-152.289 241.69-.875 1.4-2.885 2.2-4.677 1.47-2.031-.83-2.3-2.71-2.343-3.01-.032-.21-.084-.45-.037-.66 25.828-119.37 51.829-238.71 77.658-358.08l-168.657 159.95c-1.006.95-2.895 1.44-4.512.64-1.685-.84-2.588-2.85-2.093-4.67.06-.22.138-.44.238-.64 42.46-87.92 84.978-175.81 127.44-263.725-140.627 64.565-159.79 76.255-162.458 77.375-5.418 2.29-8.993-.91-8.89-5.45.138-6.11 6.267-24.29 74.72-126.028 43.681-64.924 95.764-138.334 116.734-167.743Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M93.8 1027.33c34.488 0 62.447-26.91 62.447-60.101 0-33.193-27.959-60.102-62.448-60.102-34.489 0-62.447 26.909-62.447 60.102 0 33.191 27.958 60.101 62.447 60.101Z"/><path fill="#fff" fill-rule="evenodd" d="M93.8 897.127c40.088 0 72.446 31.519 72.446 70.103 0 38.58-32.358 70.1-72.447 70.1-40.088 0-72.447-31.52-72.447-70.1 0-38.584 32.359-70.103 72.447-70.103Zm0 10c-34.466 0-62.448 26.931-62.448 60.103 0 33.17 27.982 60.1 62.447 60.1 34.466 0 62.448-26.93 62.448-60.1 0-33.172-27.982-60.103-62.448-60.103Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.998" d="m152.457 935.049 43.902-15.477-2.235-64.24 49.155-4.801"/><path fill="#fff" fill-rule="evenodd" d="M239.25 798.29c-49.966 24.921 152.872-394.235 220.52','1-698.437 11.591 52.398-30.91 222.694-76.273 337.905L239.25 798.29Zm-10.142 67.3c2.298 92.485 54.752 171.34 119.22 222.82l-65.465 36.13-69.84-149.658 16.085-109.292Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-opacity=".5" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.998" d="m306.016 1032.36-31.664-43.296c-67.032 26.516-101.191 61.926-112.492 135.176l25.487 27.65c37.628-77.39 58.636-88.51 118.669-119.53Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[4].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.998" d="M1099.1 2240.61c-43.26 231.25-93.21 403.11-174.449 519.04-69.049-150.71-35.081-281.95-22.212-418.81-32.174 95.62-71.812 186.65-128.195 267.39-20.876-86.99-25.803-164.46-19.257-235.06-21.058 62.71-54.797 121.7-103.205 176.36-28.061-89.11-37.453-170.38-30.235-244.66-22.931 72.13-59.535 138.78-105.113 201.83l-12.466-221.48-172.617 84c38.432-164.83 132.374-298.63 200.258-434.37l545.321 222.35 495.33-241.48c102.66 106.75 231.56 213.21 321.48 429.37l-238.8-115.71c17.36 57.28 71.66 170.94 88.07 257.19-60.15-52.13-226.36-125.38-256.44-189.03 3.07 71.66-2.9 199.75-16.19 274.59-66.68-77.64-99.07-167.32-118.49-261.54 2.96 143.82.51 287.92-42.16 434.13-110.12-170.73-171.3','9-282.02-210.63-504.11Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m1701.53 2067.76-7.18 10.13 131.61 163.26-124.43-173.39Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.998" d="M1240.81 2196.86c-1.63 256.73-85.29 512.33-146.79 736.9-81.37-235.96-90.22-475.58-118.072-720.06l-107.513 298.7-34.822-326.49-163.603 236.76 2.298-237.91-126.725 186.41 28.518-221.54-102.094 107.47 47.663-282.29 185.194-109.93 198.625 187.87 443.961-8.4 153.62-232.96 47.75 80.48c62.14 150.63 231 396.18 231 396.18l-203.94-169.11-83.37-26.48 57.04 243.45-153.14-175.6 4.28 286.12-159.88-249.57Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#fff" stroke-linecap="s','quare" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9" d="M1573.93 1199.67s360.82-213.589 397.39-356.27c36.58-142.684-379.17-566.776-351.78-727.046 27.39-160.27 849.25 198.595 849.25 198.595l26.3 1674.811-368.78-569.57-74.04 277.42-66.76-228.07-64.97 175.33-93.79-195.69-13.18 221.67-120.05-222.92-51.97 225.93-67.62-474.19Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1712.95 350.219c126.33 123.392 226.49 267.968 313.3 431.582-19.04 64.006-29.53 120.631-92.26 147.179 21.35-42.492 45.88-81.706 40.02-152.22-70.78-150.593-162.46-290.357-261.06-426.541Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1683.71 210.45s-49.55-87.551-28.11-104.317c21.43-16.766 156.73 3.721 156.73 3.721-90.07-4.106-150.79 14.977-128.62 100.596Z" cl','ip-rule="evenodd"/><path fill="',colors[0].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="M1905.92 415.702c65.85 0 119.24-45.943 119.24-102.616 0-56.674-53.39-102.617-119.24-102.617s-119.23 45.943-119.23 102.617c0 56.673 53.38 102.616 119.23 102.616Z"/><path fill="',colors[1].toColor()));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="9.998" d="m1614.03 1798.29 12 18.58c3.27 5.04 8.89 8.06 14.89 8a17.51 17.51 0 0 0 14.73-8.29l231.84-374.52-29.8-18.45-9.23 14.9-208.03 336.06-5.23-8.08 144.19-242.81c4.78-8.05 2.39-18.43-5.42-23.58l-84.23-55.56a17.523 17.523 0 0 0-16.02-1.69 17.51 17.51 0 0 0-10.64 12.1l-95.64 385.56c-1.17 4.69-.34 9.66 2.28 13.72l60.75 94.17c3.29 5.08 8.97 8.12 15.02 8.02 6.06-.1 11.63-3.33 14.75-8.52l402.5-633.13-30.07-18.01-388.02 608.95-41.36-64.11 10.74-43.31Zm27.6-111.28 49.5-199.56 49.59 32.7-99.09 166.86Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m2293.28 663.587-134.12-23.514 104.24 513.217-184.16-270.822s151.65 434.042 123.5 400.102c-28.16-33.94-124.5-135.88-124.5-135.88l-12.58 322.65-74.4-167.61-57.54 230.75-50.72-203.12-58.34 221.03-68.14-187.9" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M2078.66 1153.01c-3.03 105.5-6 210.99-9.03 316.48-.05 1.92-1.71 3.77-3.88 3.82-1.77.04-3.22-1.18-3.71-2.36-23.58-55.98-47.09-111.98-70.67-167.96-18.1 76.99-36.05 154.02-54.15 231.01-.06.25-.99 1.93-2.87 2.24-2.08.35-3.93-1.13-4.32-2.84-15.7-67.7-31.33-135.41-47.03-203.11-18.4 73.85-36.65 147.75-55.06 221.6-.06.24-.99 1.84-2.81 2.07-.28.04-1.98.26-3.25-1.29-1.04-1.27-.75-1.45-69.85-192.29l6.59-2.39 65.99 191.33c18.39-73.81 36.63-147.66 55.02-221.48.05-.24.96-1.85 2.79-2.14 2.03-.33 3.81 1.12 4.19 2.77 ','15.72 67.69 31.39 135.4 47.11 203.09 18.04-77.11 35.93-154.27 53.97-231.39.06-.25 1-1.96 2.92-2.29 2.08-.35 3.31.97 3.51 1.19.15.16.32.31.4.51 23.71 56.27 47.26 112.61 70.97 168.88l8.72-321.92c.05-1.66 1.33-3.43 3.27-3.81 2.11-.41 3.48.97 3.7 1.19.04.04 54.38 57.53 93.24 100.37 14.8 16.32 22.63 25.29 26.9 30.29-4.61-25.47-28.75-105.85-84.06-269.08-17-50.178-33.33-97.445-41.35-120.476-.05-.15-.54-1.567-.6-1.896-.44-2.601 1.82-4.947 4.43-4.614 1.29.164 2.29 1.07 2.37 1.19 60.38 90.929 120.61 181.956 180.99 272.886-35.8-170.606-71.65-341.199-107.45-511.804-.4-1.895.92-3.943 2.98-4.254 1.39-.21 1.4.059 138.71 24.208l-1.21 6.907-135.52-26.167c35.5 170.351 71.07 340.69 106.57 511.04.46 2.22-1.21 4.49-3.56 4.63-1.65.09-2.89-1.02-3-1.17-57.52-86.61-114.92-173.311-172.43-259.928 25.2 72.592 119.44 ','345.808 122.04 383.918.1 1.38.63 6.87-3.5 8.3-3.99 1.38-7.06-3.03-7.78-3.9-26.42-31.61-105.74-115.91-120.29-131.36Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" d="m2205.67 545.283-131.88-45.078 187.16 395.294-179.89-187.184s189.59 353.325 153.79 327.585c-35.8-25.75-154.73-100.099-154.73-100.099l90.97 285.679-150.05-179 27.23 365.87-123.32-258.46 11.57 240.51-113.32-164.65" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M2082.74 942.235c30.71 92.675 61.48 185.345 92.18 278.025.54 1.62-.13 3.77-1.89 4.74-1.42.78-3.3.6-4.54-.45-.17-.15-.34-.31-.49-.49-48.85-60.13-97.65-120.32-146.5-180.46 10.14 121.72 20.45 243.41 30.59 365.13.02.19-.28 1.83-1.63 2.77-1.7 1.18-4.12.75-5.32-.93-.13-.18-.24-.37-.33-.57-39.91-86.46-79.77-172.94-119.68-259.4 4.93 80.08 10.03 160.16 ','14.96 240.24.02.27-.42 2.11-2.13 2.86-.26.11-1.88.81-3.54-.38-1.35-.97-1.11-1.24-116.1-168.48l5.78-3.97 112.1 168.59c-4.92-80.01-10.01-160.01-14.93-240.03-.02-.27.43-2.16 2.18-2.94 1.91-.85 4.09.14 4.86 1.8 39.94 86.45 79.83 172.92 119.78 259.37-10.28-121.86-20.73-243.7-31-365.55-.03-.29.36-2.27 2.15-3.18 1.78-.91 3.86-.24 4.85.99 48.89 60.28 97.73 120.6 146.62 180.87-31.46-94.59-63-189.16-94.46-283.756-.46-1.382-.06-3.328 1.38-4.441a4.122 4.122 0 0 1 4.64-.234c.01.007 114.05 71.321 152.53 98.551-3.34-14.89-22.07-55.013-22.65-56.272-37.5-81.433-109.95-218.467-134.01-263.457-.07-.127-.7-1.309-.81-1.618-.82-2.45 1-5.069 3.58-5.168a3.805 3.805 0 0 1 2.97 1.203c58.93 63.117 117.8 126.279 176.72 189.396-63.33-131.093-126.72-262.162-190.05-393.254-.66-1.36-.34-3.261 1-4.333.19-.145 1.25-.993 2.8','2-.735.69.114.68.18 135.76 46.428l-2.27 6.636-133.03-48.603c63.22 131.131 126.58 262.194 189.79 393.325.12.24.46 2.117-.79 3.551-1.54 1.76-4.24 1.625-5.63.137-55.56-59.482-111.08-119.002-166.64-178.489 34.59 64.941 144.8 273.585 151.46 311.343.22 1.21 1.62 7.88-3.12 9.86-3.66 1.53-7.25-1.59-9.12-2.92-33.5-23.78-128.74-83.606-148.04-95.705Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1976.69 774.036 74.51-24.339 6.29 52.88 139.57 55.179"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors)));
      
        return render;
      }
}