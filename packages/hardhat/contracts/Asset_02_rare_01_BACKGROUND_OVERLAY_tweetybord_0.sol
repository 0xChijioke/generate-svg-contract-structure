//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_tweetybord_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.744" d="M1190.09 254.13c-25.33-52.952-65.59-93.771-117.85-124.813 49.56 18.563 91.28 47.278 120.83 91.733 28.9-41.456 81.59-65.93 138.38-87.47-63.21 38.687-115.8 78.361-141.36 120.55Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.945" d="M1024.65 686.477c-24.86-33.39-64.353-59.13-115.627-78.704 48.628 11.705 89.559 29.812 118.547 57.844 28.35-26.14 80.04-41.573 135.76-55.156-62.01 24.395-113.61 49.413-138.68 76.016Zm811.3 1323.163c-24.85-33.39-64.35-59.13-115.62-78.7 48.63 11.7 89.56 29.81 118.54 57.84 28.36-26.14 80.05-41.57 135.76-55.15-62.01 24.39-113.6 49.41-138.68 76.01Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.465" d="M298.967 2024.07c-15.285-75.19-39.568-133.15-71.095-177.22 29.9 26.35 55.067 67.13 72.891 130.25 17.433-58.86 49.215-93.62 83.475-124.2-38.129 54.93-69.855 111.27-85.271 171.17Z" clip-rule="evenodd"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.38" d="M1745.12 546.952c12.62 46.717 31.79 82.512 56.22 109.504-22.95-15.947-42.53-40.986-56.89-80.12-12.31 37.09-35.79 59.363-61.2 79.076 27.98-34.995 51.11-70.755 61.87-108.46Z" clip-rule="evenodd"/><svg xmlns="http://www.w3.org/2000/svg" width="2160" height="2700" fill="none"><g clip-path="url(#a)"><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="',colors[2].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.057" d="M949.644 390.292c13.083-8.378 35.148-11.575 47.479-16.898 11.677-5.04 15.497-14.917 31.727-19.264l-27.31 8.224c-4.219-9.906-3.967-5.911-9.128 2.66-28.373-3.078-33.466-1.791-13.537 4.187-20.453 1.546-23.061 4.539-30.741 9.496l1.51 11.595Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="',colors[4].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.057" d="M953.41 391.642c27.666-14.346 50.11-24.995 83.48-33.933l-26.31 4.199c-4.22-9.906-9.24-4.115-14.403 4.455-28.373-3.077-33.465-1.79-13.537 4.188-20.453 1.545-23.061 4.538-30.741 9.496l1.511 11.595Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" stroke="',colors[6].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.056" d="M965.587 412.07c-18.949 13.217-39.841 18.339-53.14 14.059-5.851-1.883-9.537-2.034-12.118-10.123-4.479 3.198-6.528 2.9-5.88-1.277-20.605 8.631-29.027 4.493-8.191-5.386-13.197 7.982-26.384 9.072-11.055-.769-53.006 31.784-43.746 25.241-17.667.596-112.824 16.613-77.787 8.754-1.512-6.567-59.718 3.308-80.219.649 15.669-8.583-17.598-6.196-7.804-6.174 28.407-.153-6.74-1.671-7.46-3.489-3.035-5.433-15.643-4.935-10.349-6.73-.193-7.797-9.218-3.82-6.264-4.4.721-3.908-25.958-13.677-19.043-14.059-1.253-10.044-38.154-22.431-45.512-29.881-2.627-12.89-54.611-38.434-38.738-34.267-2.656-17.886-43.241-40.288-53.17-53.424 13.501-4.129-19.687-42.227-9.216-28.223 16.385 13.994-2.909-25.6-2.335-34.607 7.474.372l-2.067 ','16.662c5.043-7.18 11.211-17.323 11.363-15.837.318 3.092-10.876 27.599-10.435 30.858.635 4.688 3.367 10.074 2.99 13.924-.341 3.472-5.255 9.175-5.255 9.175 6.832 1.541 15.116 4.201 14.365-3.221-.089-3.372-.916-7.969.973-10.579 2.985-4.124 11.809-7.102 23.433-7.901 13.978-2.286-4.08 14.268-5.965 13.729 1.436 6.073 3.294 13.368 7.768 19.114Z" clip-rule="evenodd"/><path fill="#fff" d="M949.055 393.554c1.828.259 3.513-.958 3.762-2.719.25-1.76-1.03-3.398-2.858-3.657-1.828-.259-3.513.958-3.762 2.719-.25 1.76 1.03 3.397 2.858 3.657Z"/><path fill="#000" fill-rule="evenodd" d="M950.055 386.495c2.214.313 3.747 2.308 3.445 4.437-.302 2.129-2.329 3.618-4.542 3.304-2.209-.313-3.746-2.308-3.444-4.436.302-2.13 2.333-3.618 4.541-3.305Zm-.096.683c-1.825-.259-3.512.959-3.762 2.718-.249 1.759 1.033 3.398 2.858',' 3.657 1.829.259 3.515-.959 3.765-2.718.249-1.759-1.033-3.398-2.861-3.657Z" clip-rule="evenodd"/><path fill="',colors[7].toColor()));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.056" d="M965.585 412.069c-4.695-2.011-7.951-18.711-7.951-18.711s-12.834-12.826 6.148-14.131c9.39-1.866 16.128-2.684 20.925-1.772 8.911 1.694 11.055 8.347 10.794 16.002-7.723-7.996-13.972-2.756-22.623-.192-4.187 1.241-9.032 3.455-14.699.186 6.193 12.239 16.499 19.216 27.38 18.975-7.557 3.66-16.657 3.752-19.974-.357Z" clip-rule="evenodd"/><path fill="',colors[8].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.056" d="M925.012 400.927c-2.933-5.731-2.457-25.372-2.457-25.372-6.097-16.458-9.091-21.233-4.615 2.112-10.423-11.022-21.06-15.155-2.466 4.167-15.315-3.91-16.554-2.738.856 5.554-13.238.682-15.556 2.168-.813 4.908-11.796-1.156-14.255-.09-.79 4.768-7.456 2.361-13.956 2.217-13.956 2.217 9.066 3.908 15.046 10.22-1.164 7.194 0 0 18.034 6.799 13.434 8.39-2.127.737-9.215-2.68-9.215-2.68s.037 6.644-3.497 3.82c-4.48 3.199-6.528 2.901-5.88-1.276-12.087 5.654-13.124 2.747-5.224-5.375-11.917 7.477-16.179 7.981-6.01-3.108-33.93 23.371-36.518 13.739-11.985-.627-37.376 12.195 2.238-5.82 1.828-4.018-19.422-3.79-29.271-7.232 5.511-5.383-11.871-8.112 16.044 1.917 16.705 2.972-8.557-5.188-','4.154-4.176 1.988-4.043 0 0 1.448-1.512 2.838-1.281-6.741-1.67-7.46-3.488-3.035-5.433-15.644-4.934-10.35-6.73-.193-7.796-9.218-3.82-6.265-4.401.721-3.908-25.958-13.677-19.044-14.059-1.253-10.044-25.989-17.564-19.594-21.546 1.889-13.116-35.834-27.781-8.884-13.828 3.963-10.63-15.712-18.607-26.636-27.032 7.135-3.647-19.687-42.226-13.986-35.735 11.615 6.481-2.909-25.6-2.335-34.606 7.475.373l-2.067 16.662c5.042-7.18 11.21-17.323 11.362-15.838.318 3.093-10.875 27.599-10.435 30.858.635 4.689 3.367 10.075 2.99 13.924-.341 3.473-5.255 9.175-5.255 9.175Z" clip-rule="evenodd"/><path fill="',colors[9].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.056" d="m922.685 374.268-.049-12.771c1.032-19.744-8.829-19.308-5.227-3.397-20.22-18.579-22.174-15.196-5.315 4.908-15.027-5.404-20.733-7.726-2.067 4.284-7.079-1.084-11.545-1.104-4.806 3.429-11.136.021-5.588 2.788 1.236 6.363-5.411-.107-7.94 2.298-1.501 4.07-4.672.885-5.098 4.856 2.292 4.819-5.749.626-7.023 3.026-2.439 2.922-4.483 3.101-1.5 3.376 3.271 2.974-3.232-1.27-.282-4.864 6.789-4.772-12.993-7.189-9.827-7.714.251-5.389-9.193-13.619-10.335-14.946 2.694-4.975-2.614-16.746-3.103-19.043 4.871-2.465Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".2" fill-rule="evenodd" d="M943.346 422.674c-11.748 1.68-20.207 2.216-22.838-.051l7.212-2.046-8.904-1.642 6.034-4.406','-10.094-1.739 1.093-7.524-5.917-.719-1.928-3.227c-7.725 1.231 2.146 1.74 9.092-2.892 10.827-3.999 6.432-10.768 1.675-13.338-2.878-.349-2.64-3.192-1.384-6.848-4.02-1.217-3.243-3.27-1.124-5.556-2.728-2.972-1.933-5.245 3.099-6.679-7.612-4.606-10.26-6.273-1.837-7.618-1.717-6.356-2.57-11.081 1.212-8.19-12.384-13.145-15.848 1.834-8.577 10.946-6.421 2.53-12.736 1.254-5.735 3.311 6.901 2.216.991 3.503-5.338 4.451-5.986 2.448 2.669 3.021 11.207 5.658 3.299 2.258-4.828 3.116-9.572 4.069 11.431 1.691 1.131 4.972-6.636 6.485 3.871 2.474 23.784 3.155 16.333 8.786.344 2.06-3.151 2.651-9.832 4.485l-4.813.673c-5.852-1.279-8.962 3.702-2.29 3.904-4.893 2.852-6.279-2.818-20.262-.974-2.535.335 6.662 2.221 8.834 3.922 2.768 2.168-10.637.17-20.942 1.436-24.942 3.068-70.292 9.385-72.489 10.188l68.852-7.576c-6.11','5 4.223-23.845 17.661-18.642 18.391 2.659.374 7.461-3.362 16.966-7.309 8.473-3.519 19.777-4.918 25.495-10.553-13.737 10.412-4.399 12.676 13.153 3.969-.324 3.367 1.318 3.809 6.825 1.582-1.589 2.829.203 7.468 3.858 7.343-3.081 2.966-3.167 3.892.931 1.966-2.898 2.978-3.94 4.851 1.386 2.93l2.663-.233-1.425 4.288 6.768-5.979c10.47 2.259 21.978 1.031 27.891-3.684Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[10].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.056" d="M903.815 413.868c-4.09-.185-.75 1.264 1.511 2.925-8.876.511-5.523 3.847-.137 2.903-5.733 1.96-3.87 2.608.855 2.761-5.526 2.127-3.518 2.333 1.429 2.452-7.819 1.165-5.031 2.651 1.178 2.959-6.256 1.138-2.504 3.547 4.058 1.905l1.614-.637c.971-2.081 1.54-3.913-2.69-2.764 3.71-2.475 2.052-2.905-.639-3.953 1.779-2.449 1.047-3.789-3.072-3.631 2.854-2.028 2.54-3.15-.183-3.582l-3.924-1.338Z" clip-rule="evenodd"/><path fill="',colors[11].toColor(),'" fill-rule="evenodd" d="M296.864 1971.93c-.36-1.36-.293-2.93.256-4.74-6.193.51-6.309-.73-2.899-3.01-8.169-.48-6.995-1.91-3.459-3.58-8.888-4.08-6.433-3.9-.801-5.74-12.482-4.85-10.568-6.18-.69-5.56-6.072-6.51-7.64-9.07-5.341-8.22l-2.901-4.09-4.547 21.76.104 2.26c1.189 4.95-5.798 8.79-10.423 7.41 3.688-1.51 6.065-1.68 6.515-4.87-3.433 3.11-6.071 1.33-11.681.48 5.739.13 8.162.87 10.997-2.98-4.65 1.62-6.211.19-10.988-2.08 5.793 1.77 8.07 1.84 13.025.28l5.977-27.86 7.861 11.88c.879.57 1.871 1.23 2.972 1.99.447-10.49 3.597-3.61 7.322 6.96 1.7-1.23 3.093-1.08 3.704 2.57l2.361-2.41c-2.561-2.76-1.045-4.35 2.012-5.5-3.111-1.29-1.733-3 2.762-5-5.123-2.36-5.695-3.43.565-5.05-6.559-4.87-1.495-6.92 1.23-6.48-8.083-2.88-2.789-4.96 5.753-7.57-14.981-.98-16.143-1.74-1.203-4.2-16.915-4.75-14.582-7.22.297-5.','09-7.833-6.58-10.349-10.22-8.902-11.39 1.495-1.21 4.798.67 10.616 6.48 9.732 9.72 11.614 15.62 10.545 23.55-.88 6.52-13.632 9.77-7.56 16.97 1.603-.96 3.331-.67 5.234 1.37-.453-6.29 3.469-2.48 5.771 2.56 3.229-6.94 4.669-4.14 5.222 3.48l-.149 7.66 65.662-10.63c-2.72-4.39-10.821-7.9 10.797-16.27 0 0 10.462-4.44 17.474-6.93a.648.648 0 0 0-.029-.08c.153-.03.304-.05.455-.07 1.435-.51 2.707-.92 3.689-1.18 14.092 1 15.677 6.27 12.789 13.98-1.024 3.4-3.044 7.46-6.137 12.16-.361.65-.726 1.3-1.091 1.97-.901-5.23-2.803-10.03-5.604-12.47-1.475-.98-3.232-1.7-5.281-2.14-7.877-1.17-17.786 3.23-22.255 1.51.901 1.66 2.798 2.89 5.139 3.93 4.339 1.16 7.882 2.43 10.63 3.79 6.929 2.65 11.54 6.34 2.43 16.03-1.367-2.28-2.899-4.44-4.912-6.26l-3.65-2.56c-3.246-1.72-7.495-2.72-13.353-2.56l-66.053 10.92.91 3.77c5.65','9 5.4 12.464-2.88 15.891 1.59 7.743 14.94 13.513 27.03 4.615 18 1.686 13.63.641 17.31-5.294 3.16-7.262 11.51-12.183 17.18-5.226-6.72-5.901 10.08-9.659 15.09-5.118.44l-.254-3.12c-10.085 13.27-12.572 14.76-3.795-1.19-4.554 2.61-5.65 2.01-2.934-2.13-5.406 3.48-6.133 2.21-3.464-2.51-4.656.94-6.022-1-2.646-5.27-3.299 3.06-4.442 4.2-4.836 2.39-2.756 3.89-4.018 3.84-4.484 1.67-2.388 3.72-4.075 3.37-5.602 2.09-5.596-.33-10.226-1.14-13.421-2.68l-2.698-.66.334-.83a7.8 7.8 0 0 1-1.02-1.02l-25.002-3.14-38.692 20.39-2.584 4.39-8.695 3.55 5.809-4.28-10.321 1.72 9.262-3.21-9.74-1.68 14.444-1 40.283-21.23 24.021 2.13Z" clip-rule="evenodd"/><path fill="',colors[12].toColor(),'" fill-rule="evenodd" d="M277.207 1960.92c.649 2.8-1.007 5.3-3.516 6.84-2.305 1.42-5.309 2-7.715 1.29a.647.647 0 0 1-.467-.59.658.658 0 0 1 .405-.64c1.976-.82 3.571-1.22 4.675-1.95a3.9 3.9 0 0 0 .551-.45c-.956.44-1.903.59-2.918.57-1.949-.04-4.176-.8-7.329-1.27a.69.69 0 0 1-.588-.75.692.692 0 0 1 .707-.63c3.152.06 5.277.34 7.025-.13.62-.16 1.185-.43 1.731-.84-.897.13-1.69.13-2.455.01-1.942-.3-3.704-1.36-6.624-2.74a.748.748 0 0 1-.372-.94.744.744 0 0 1 .905-.44c2.655.81 4.549 1.25 6.316 1.34 1.845.08 3.545-.24 5.84-.94l5.848-27.44a.81.81 0 0 1 .634-.62c.316-.06.638.08.816.35l7.777 11.74 1.663 1.11c.138-1.7.374-2.82.669-3.47.481-1.05 1.174-1.25 1.852-1.03.306.09.654.32 1.007.71.354.4.744.99 1.155 1.75 1.101 2.03 2.408 5.36 3.8 9.26.781-.35 1.506-.4 2.123-.1.602.28 1.183.97 1.595 2.26l.82-.83c'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors)));
      
        return render;
      }
}