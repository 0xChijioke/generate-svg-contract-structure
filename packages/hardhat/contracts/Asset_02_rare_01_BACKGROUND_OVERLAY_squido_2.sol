//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_squido_2 {

using ToColor for bytes4;

function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('2.65 1.91 6.57 5.19 2.62 9.09-19.97 19.78-10.69 17.68-13.35 15.77-2.65-1.92 4.91-12.33 8.33-16.66Zm56.52-5.16c5.37-1.98 15.76 1.64 17.07 4.52 1.31 2.87-8.99-1.34-14.36.64-5.38 1.98-9.43 5.16-10.74 2.29-1.31-2.87 2.65-5.47 8.03-7.45Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1978.51 1269.95-32.01-8.01 19.84 7.73 12.17.28Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1973.47 1268.25c21.4 19.8 14.49 30.62 2.62 47.26l-12.56 24.23c13.37-20.39 27.92-36.52 44.13-46.63l-10.66 2.11c-1.97-13.07-14.9-25.92-23.53-26.97Zm21.78 119.37s15.24 3.94 22.54 1.85c8.02-2.29 15.94-24.93 15.8-31.1l.87 24.2c-10.58 19.82-17.83 25.37-21.29 14.74l-17.92-9.69Zm65.87 47.55 10.26-31.93-6.28-6.17 8.32-.18 4.69 18.44-16.99 19.84Z" clip-rule="even','odd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.73" d="M2012.83 1396.46c-10.17-7.58-34.04-10.14-30.52-22.74.65-2.31 27.35 6 25.77 3.14-4.55-8.25-38.48-21.45-38.23-27.65.67-16.17 34.91 9.4 39.18 9.35 4.26-.05-25.95-27.18-24.38-32.69 2.96-10.42 32.38 24.26 35.33 22.25 2.95-2.01-16.54-28.26-13.73-29.61 8.32-4.02 24.99 23.16 24.99 23.16"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.622" d="M2029.37 1411.76c2.9-8.61 12.64-13.09 21.72-10.01 9.09 3.08 4.47 7.18 1.57 15.79-2.9 8.61-3 18.48-12.08 15.4-9.09-3.08-14.11-12.57-11.21-21.18Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-lin','ejoin="round" stroke-miterlimit="1.5" stroke-width="3.61" d="M2058.61 1341.75c5.77-6.9 16.39-6.76 25.09.38s10.78 16.1 5.01 23c-5.77 6.9-16.21 13.32-24.91 6.19-8.7-7.14-10.96-22.67-5.19-29.57Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.327" d="M2054.21 1412.51c-.1-1.2-2.56-2.09-5.49-2.01-2.93.09-5.22 1.14-5.12 2.33.1 1.2 2.56 2.1 5.49 2.01 2.93-.09 5.22-1.13 5.12-2.33Z"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.066" d="M2079.38 1350.83c.74-.93-.58-3.1-2.95-4.83-2.38-1.74-4.91-2.38-5.66-1.45-.75.93.57 3.1 2.95 4.83 2.37 1.74 4.91 2.38 5.66 1.45Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.318" d="M189.313 2101.47c3.156 10.66 18.142-52.21 11.207-46.59-1.147-2.43-7.265-7.81-7.485-5.97-1.669-.38-10.539-14.7-20.135-18.64-8.718-3.58-14-2.45-7.368 1.69 11.595 7.25 17.53 23.59 19.072 26.83-.745 3.15-10.549 1.07-21.245-3.95-9.162-4.3-13.96-3.78-8.936 1.35 9.724 9.93 21.819 13.84 21.626 15.14-.157 1-12.541-.5-20.415-3.55-9.972-3.87-14.555-5.71-14.525-3.47.085 6.82 30.272 20.02 36.034 19.25.697 1.64-7.736 1.18-17.297-.78-8.372-1.71-17.97-4.99-18.335-3.39-1.203 5.27 34 16.2 34.016 16.99.046 2.96-21.049-5.27-16.454 1.28.99 1.41 26.605 5.05 30.24 3.81Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.318" d="M201.356 2046c9.386-6.02 19.688-10.53 30.511-5.39 11.488 5.46 47.081 48.15 39.997 67.97-6.595 18.45-54.801 23.85-67.426 20.74-18.481-4.57-23.381-19.27-24.939-28.02-2.465 1.08-9.861-.91-23.435 0-12.921.87-12.199 3.9-14.265 2.08-2.136-1.89-.082-5.96 6.347-9.5 7.02-3.87 20.497-4.14 21.541-5.68-1.517-.79-17.792-2.66-27.642-5.92-8.952-2.96-11.611-8.47-3.904-9.2 4.772-.45 28.353 3.61 31.647 2.15 1.504-2.86-7.285-7.67-18.678-10.82-9.756-2.71-13.048-6.23-5.877-6.84 13.876-1.19 25.597 3.72 26.302 2.61.543-.86-9.815-7.79-17.781-10.6-10.084-3.56-14.76-5.15-13.268-6.83 4.537-5.1 36.049 4.55 39.903 8.89 1.607-.79-5.081-5.93-13.603-10.67-7.459-4.16-16.877-7.92-16.104-9.37 2.','547-4.77 36.367 9.87 36.897 9.28 1.978-2.21-19.387-9.71-11.613-11.68 1.671-.42 11.804 1.41 19.539 7.85 4.568 3.81 3.916 5.64 5.851 8.95Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[2].toColor(),'" d="M254.856 2096.53c-.208-2.45-2.251-4.38-4.563-4.31-2.313.07-4.018 2.11-3.81 4.56.208 2.45 2.251 4.38 4.563 4.31 2.312-.07 4.018-2.11 3.81-4.56Z"/><path fill="',colors[3].toColor(),'" d="M206.872 2108.53c-.208-2.45-2.251-4.38-4.564-4.31-2.312.07-4.018 2.11-3.81 4.56.208 2.45 2.251 4.38 4.564 4.31 2.312-.07 4.018-2.11 3.81-4.56Zm24.252-51.61c-.208-2.45-2.251-4.38-4.564-4.31-2.312.07-4.018 2.11-3.81 4.56.208 2.45 2.251 4.38 4.564 4.31 2.312-.07 4.018-2.11 3.81-4.56Z"/><path fill="',colors[2].toColor(),'" d="M268.604 2107.42c-.208-2.45-2.251-4.38-4.563-4.31-2.312.07-4.018 2.11-3.81 4.56.208 2.45 2.251 4.38 4.563 4.31 2.312-.07 4.018-2.11 3.81-4.56Zm-19.928 7.52c-.208-2.45-2.251-4.38-4.563-4.31-2.312.07-4.018 2.12-3.81 4.57.208 2.45 2.251 4.38 4.563 4.31 2.313-.07 4.018-2.12 3.81-4.57Zm10.847-30.51c1.025-.96.771-2.77-.567-4.04-1.339-1.26-3.255-1.51-4.28-.55-1.025.96-.771 2.77.568 4.03 1.338 1.27 3.254 1.52 4.279.56Zm-42.47 37.38c.609-1.52-.103-3.22-1.59-3.81-1.486-.58-3.185.17-3.793 1.68-.608 1.51.104 3.21 1.59 3.8 1.487.59 3.185-.16 3.793-1.67Zm14.76 1.15c.609-1.51-.103-3.22-1.59-3.8-1.487-.59-3.185.16-3.793 1.67-.609 1.51.103 3.22 1.59 3.8 1.487.59 3.185-.16 3.793-1.67Zm8.119-67c.609-1.51-.103-3.21-1.59-3.8-1.487-.59-3.185.16-3.793 1.68-.609 1.51.103 3.21 1.59 3.8 1.487.58 3.185-.17 3.79','3-1.68Zm-19.725 33.9c.45-1.12-.137-2.41-1.312-2.87-1.175-.46-2.493.07-2.943 1.19-.45 1.12.137 2.4 1.312 2.86 1.175.47 2.492-.06 2.943-1.18Zm-2.748-9.04c.45-1.12-.137-2.4-1.312-2.87-1.175-.46-2.493.07-2.943 1.19-.45 1.12.137 2.4 1.312 2.87 1.175.46 2.492-.07 2.943-1.19Zm9.986 3.99c.45-1.12-.137-2.41-1.312-2.87-1.175-.46-2.492.07-2.943 1.19-.45 1.12.137 2.4 1.312 2.86 1.175.47 2.493-.06 2.943-1.18Zm-3.301-12.94c.451-1.12-.137-2.4-1.312-2.87-1.174-.46-2.492.07-2.942 1.19-.451 1.12.137 2.4 1.312 2.87 1.174.46 2.492-.07 2.942-1.19Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M273.24 2108.36c-17.879 11.96-36.576 17.29-64.992 14.25-10.821-1.16-19.704-5.1-27.186-23.95l-5.625-3.9c-3.134.29-28.641 3.46-33.148 8.34 10.193-1.3 22.064-1.84 35.155-2.27 2.249 11.9 9.831 21.2 22.947 27.8 ','30.465 1.58 56.061-1.36 72.849-20.27Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m142.068 2042.93 33.652 5.23-26.131-7.79-7.521 2.56Zm-.012 17.2c9.856-1.53 11.526-.03 30.247 1.72 0 0-15.469-3.88-23.164-3.54-6.68.3-7.083 1.82-7.083 1.82Zm-6.713 17.82c10.962-2.08 9.936-2.94 21.856-2.2 0 0-14.849-1.25-20.85-.75-5.209.44-1.006 2.95-1.006 2.95Zm74.14-35.79c13.428-2.22 54.057 31.03 60.583 51.31-2.469-20.84-36.036-55.25-48.743-54.54l-11.84 3.23Zm-23.565.1c-9.658-4.31-20.305-7.16-30.98-10.06 0 0 16.151 6.31 21.314 7.99 2.937.95 9.666 2.07 9.666 2.07Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M193.138 2044.18c1.051-1.33-.999-3.77.279-2.85 1.278.92 3.204 2.45 1.898 3.58-6.609 5.72-2.914 5.69-4.192 4.76-1.278-.92.964-4.17 2.015-5.49Zm37.168.6'));
      
        return render;
      }

    function renderFn10(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('3c3.419 1.07 7.417 5.84 7.076 7.33-.342 1.48-4.092-3.48-7.511-4.55-3.42-1.06-6.59-1.25-6.249-2.73.342-1.48 3.265-1.11 6.684-.05Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m191.105 2033.79-15.427-3.86 9.561 3.73 5.866.13Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M146.037 2047.03s9.85-.9 18.11 4.46l8.552 8.49c-8.325-1.48-22.536-3.75-20.426-7.28 3.957-6.63 2.406-2.05-6.236-5.67Zm40.516 25.14s11.968 5.28 18.925 10.98c.827.67-.992 2.3-4.294 2.08-3.478-.23-8.463-2.23-8.061 1.51.241 2.25 16.312 4.83 16.914 4.66 3.864-1.11 3.131 3.14 3.131 3.14-5.102 9.55-9.648 6.43-11.316 1.31l-9.651-5.4-.829-4.7 1.668-4.69c-6.724-3.95-7.885-6.7-6.487-8.89Zm44.369 41.25s12.979-7.48 13.566-11.49c.511-3.5-8.947-11.37-8.947-11.37l11.487-4','.99c-4.295 3.9-7.075 3.27-5.854 7.12 6.864 6.79 6.116 8.6 2.507 15.26l-12.759 5.47Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.386" d="M207.645 2094.77c-4.903-3.66-16.406-4.89-14.709-10.96.312-1.12 13.181 2.89 12.421 1.51-2.195-3.98-18.548-10.34-18.425-13.32.32-7.8 16.823 4.52 18.879 4.5 2.057-.02-12.504-13.1-11.749-15.75 1.427-5.02 15.606 11.69 17.029 10.72 1.422-.97-7.971-13.62-6.62-14.27 4.012-1.94 12.047 11.16 12.047 11.16"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.316" d="M215.618 2102.14c1.399-4.15 5.861-4.44 10.47-4.82 4.65-.39 9.927.76 8.528 4.9-1.399 4.15-9.135 9.82-13.515 8.33-4.379-1.49-6.882-4.26-','5.483-8.41Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.308" d="M229.71 2068.4c2.781-3.33 7.901-3.26 12.094.18s4.583 9.97 1.802 13.3c-2.782 3.32-7.817 1.56-12.01-1.88s-4.667-8.28-1.886-11.6Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.406" d="M232.455 2100.56c-.049-.58-1.234-1.01-2.646-.97-1.412.05-2.517.55-2.468 1.13.049.57 1.233 1.01 2.646.96 1.412-.04 2.517-.54 2.468-1.12Z"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.241" d="M240.885 2081.75c.361-.45-.275-1.49-1.421-2.33-1.146-.83-2.367-1.14-2.727-.69-','.361.45.276 1.49 1.421 2.32 1.146.84 2.367 1.15 2.727.7Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.318" d="M1756.54 2631.93c-10.98 1.8 39.1-39.07 37.06-30.38 2.68-.02 10.19 3.14 8.63 4.14 1.07 1.34 17.82 3.09 25.55 10.01 7.02 6.28 8.3 11.53 1.68 7.37-11.57-7.28-28.87-5.51-32.46-5.49-2.51 2.05 3.64 9.97 12.82 17.41 7.86 6.37 9.48 10.91 2.67 8.63-13.17-4.43-21.96-13.62-23.04-12.88-.84.58 5.9 11.08 12.08 16.84 7.82 7.29 11.48 10.61 9.45 11.56-6.18 2.89-31.21-18.53-33.02-24.06-1.78.09 2.31 7.48 8.23 15.24 5.19 6.79 12.32 14 11.04 15.02-4.22 3.38-29.39-23.55-30.11-23.22-2.68 1.25 13.91 16.66 6.02 15.37-1.7-.28-16.14-21.75-16.6-25.56Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.318" d="M1801.23 2596.93c1.33-11.07.9-22.31-8.44-29.81-9.92-7.97-63.85-21.42-78.6-6.41-13.74 13.98 2.39 59.72 10.69 69.73 12.16 14.65 27.53 12.66 36.09 10.25.1 2.69 5.11 8.48 10.2 21.09 4.84 12.02 1.8 12.68 4.34 13.75 2.63 1.1 5.4-2.52 5.79-9.85.42-8-5.2-20.25-4.27-21.86 1.37 1.02 10.14 14.86 17.36 22.3 6.57 6.77 12.68 6.77 9.99-.49-1.68-4.49-15.6-23.95-15.72-27.55 1.92-2.6 10.08 3.22 17.88 12.1 6.69 7.6 11.28 9.03 8.71 2.31-4.97-13.01-14.49-21.42-13.8-22.54.54-.86 11.28 5.44 17.28 11.39 7.6 7.53 11.07 11.04 11.93 8.97 2.62-6.31-19.8-30.47-25.38-32.05.02-1.79 7.55 1.99 15.53 7.6 6.99 4.9 14.48 11.74 15.44 10.42 3.19-4.37-24.71-28.44-24.42-29.18 1.13-2.74 17.19 13.22 15'));
      
        return render;
      }

    function renderFn11(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('.57 5.37-.34-1.69-6.4-10.01-15.57-14.17-5.42-2.45-6.78-1.07-10.6-1.37Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M1732.44 2570.78c2.3-.88 4.92.12 5.87 2.23.94 2.11-.16 4.53-2.45 5.41-2.3.88-4.93-.11-5.87-2.23-.94-2.11.15-4.53 2.45-5.41Z"/><path fill="',colors[3].toColor(),'" d="M1742.54 2619.2c2.29-.88 4.92.12 5.86 2.23.95 2.11-.15 4.54-2.45 5.42-2.29.88-4.92-.12-5.86-2.23-.95-2.12.15-4.54 2.45-5.42Zm35.89-44.31c2.3-.88 4.93.12 5.87 2.23.94 2.11-.15 4.54-2.45 5.42-2.3.88-4.92-.12-5.87-2.24-.94-2.11.16-4.53 2.45-5.41Z"/><path fill="',colors[2].toColor(),'" d="M1716.65 2563.14c2.29-.88 4.92.12 5.87 2.23.94 2.12-.16 4.54-2.45 5.42-2.3.88-4.93-.12-5.87-2.23-.94-2.11.15-4.54 2.45-5.42Zm1.9 21.22c2.3-.88 4.93.12 5.87 2.23.95 2.11-.15 4.54-2.45 5.42-2.29.88-4.92-.12-5.86-2.23-.95-2.11.15-4.54 2.44-5.42Zm22.75-23.05c.42-1.34 2.16-1.9 3.88-1.25 1.72.65 2.78 2.27 2.36 3.61-.42 1.34-2.15 1.9-3.88 1.25-1.72-.66-2.78-2.27-2.36-3.61Zm-15.15 54.5c1.09-1.2 2.94-1.3 4.11-.22 1.18 1.08 1.24 2.94.15 4.14-1.1 1.21-2.94 1.31-4.12.23-1.17-1.08-1.24-2.94-.14-4.15Zm-7.47-12.78c1.1-1.21 2.94-1.31 4.12-.23 1.17 1.09 1.24 2.94.14 4.15-1.09 1.2-2.94 1.31-4.11.22-1.18-1.08-1.24-2.94-.15-4.14Zm56.78-36.49c1.09-1.2 2.94-1.3 4.11-.22 1.18 1.08 1.24 2.94.15 4.14-1.1 1.21-2.94 1.31-4.12.23-1.18-1.08-1.24-2.94-.14-4.15Zm-21.92 32.52c.81-.89 2.22-.92 3.15-.07.93.86 1.02 2.2','8.21 3.17-.81.89-2.22.92-3.15.07-.93-.86-1.03-2.27-.21-3.17Zm9.33-1.46c.81-.89 2.22-.92 3.15-.07.93.86 1.02 2.27.21 3.17-.81.89-2.22.92-3.15.07-.93-.86-1.02-2.28-.21-3.17Zm-7.94-7.25c.81-.9 2.22-.93 3.15-.07.93.86 1.03 2.27.21 3.17-.81.89-2.22.92-3.15.06-.93-.85-1.02-2.27-.21-3.16Zm13.08-2.67c.81-.89 2.23-.92 3.15-.06.93.85 1.03 2.27.22 3.16-.81.89-2.23.92-3.15.07-.93-.86-1.03-2.27-.22-3.17Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1713.79 2559.38c-2.98 21.3.35 40.46 15.47 64.71 5.75 9.24 13.17 15.52 33.4 14.04l5.96 3.37c1.1 2.95 9.36 27.29 6.93 33.47-3.27-9.74-7.95-20.66-13.27-32.64-11.69 3.16-23.36.39-35.02-8.54-14.68-26.74-23.19-51.06-13.47-74.41Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1829.81 2648.96-19.37-28.01 18.4 20.13'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn8(colors),renderFn9(colors),renderFn10(colors),renderFn11(colors)));
      
        return render;
      }
}