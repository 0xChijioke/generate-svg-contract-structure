//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_gunner_6 {

using ToColor for bytes4;

function renderFn19(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('5.39 12.039-11.9 21.847-8.45 8.36 2.93 18.627 14.71 27.262 23.01 9.316 8.94 20.547 20.09 23.993 29.22 3.499 9.27-.882 16.5-5.08 21.53-4.368 5.23-9.95 10.15-19.396 7.04-8.575-2.83-20.783-13.02-29.718-21.6-8.82-8.47-21.51-18.46-25.107-27.2-4.057-9.86 1.781-18.26 6.199-23.55Zm14.88 14.82c1.95-2.34 5.12-5.79 9.69-4.42 5.2 1.57 11.995 8.41 16.99 13.2 5.26 5.05 11.175 11.41 12.627 16.4 1.14 3.92-1.342 6.78-3.174 8.98-1.907 2.28-4.532 5.92-8.494 4.99-4.695-1.11-10.97-7.38-16.06-12.27-5.21-5-13.5-12.57-15.563-17.95-1.653-4.31 2.13-6.71 3.984-8.93Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.996" d="m236.088 1405.27 11.399 2.2s-5.758 22.11-11.676 20.54c-11.897-3.15-59.708-39.48-59.708-39.48s-15.565-9.19-6.311-15.19c9.255-6 14.955 1.84 14.955 1.84l51.341 30.09Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m236.088 1405.27 11.4 2.2c-17.098-11.34-29.339 25.4-22.399 32.36 4.12 4.13-18.483-.97-18.131-20.93.357-20.05-30.854-30.37-30.854-30.37s-15.565-9.19-6.311-15.19 14.954 1.84 14.954 1.84l51.341 30.09Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.093" d="m148.355 1369.2 7.964 8.35s16.037-16.44 11.533-20.55c-9.055-8.25-65.86-29.01-65.86-29.01s-16.22-8.14-16.478 2.73c-.259 10.88 9.545 11.5 9.545 11.5l53.296 26.98Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m148.355 1369.2 7.964 8.35s16.037-16.44 11.533-20.55c-9.055-8.25-65.86-29.01-65.86-29.01s-16.22-8.14-16.478 2.73c-.259 10.88 9.545 11.5 9.545 11.5l53.296 26.98Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.76" d="m17.973 1288.45-7.107-8.44s-14.107 16.44-10.092 20.6c8.072 8.36 58.522 29.55 58.522 29.55s14.419 8.28 14.581-2.65c.163-10.93-8.526-11.62-8.526-11.62l-47.378-27.44Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m17.973 1288.45-7.107-8.44s-14.107 16.44-10.092 20.6c8.072 8.36 58.522 29.55 58.522 29.55s14.419 8.28 14.581-2.65c.163-10.93-8.526-11.62-8.526-11.62l-47.378-27.44Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn20(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.267" d="m-24.127 1281.78 7.921 7.28s15.038-15.95 10.576-19.5c-8.972-7.15-64.408-23.39-64.408-23.39s-15.89-6.68-15.84 3.34c.048 10.03 9.534 10.11 9.534 10.11l52.217 22.16Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.993" d="M272.214 1140.84c5.583-8.66 15.063-19.91 27.995-19.11 11.022.67 24.97 12.09 36.62 19.59 12.568 8.1 27.739 18.33 32.68 28.87 5.018 10.69-.318 21.69-5.527 29.77-5.418 8.41-12.433 16.87-24.876 16.37-11.297-.45-27.691-9.08-39.745-16.85-11.899-7.66-28.909-15.86-34.028-25.83-5.773-11.24 1.4-24.3 6.881-32.81Zm20.102 13.62c2.418-3.75 6.369-9.4 12.382-9.34 6.844.08 16.028 6.4 22.765 10.74 7.097 4.57 15.111 10.59 17.251 16.51 1.68 4.65-1.405 9.28-3.678 12.81-2.366 3.67-5.598 9.37-10.798 9.64-6.164.32-14.642-5.45-21.51-9.88-7.027-4.53-18.191-11.23-21.147-17.42-2.366-4.96 2.435-9.49 4.735-13.06Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.994" d="M287.582 1167.52c8.685.97 24.3-3.21 23.547-10.29-.825-7.75-45.349-29.94-45.349-29.94l-6.766 24.12s19.882 15.14 28.568 16.11Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.993" d="M373.62 1208.58c5.583-8.66 15.064-19.9 27.995-19.11 11.022.67 24.971 12.09 36.621 19.59 12.567 8.1 27.738 18.33 32.679 28.87 5.018 10.69-.318 21.69-5.526 29.77-5.419 8.42-12.433 16.87-24.877 16.37-11.297-.45-27.691-9.08-39.745-16.85-11.899-7.66-28.908-15.85-34.028-25.83-5.772-11.24 1.401-24.3 6.881-32.81Zm20.102 13.63c2.418-3.76 6.369-9.41 12.382-9.34 6.845.07 16.028 6.39 22.766 10.73 7.096 4.57 15.11 10.59 17.25 16.52 1.68 4.64-1.405 9.28-3.677 12.8-2.367 3.68-5.599 9.37-10.799 9.64-6.163.33-14.642-5.45-21.509-9.88-7.027-4.52-18.192-11.23-21.148-17.42-2.366-4.96 2.435-9.48 4.735-13.05Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn21(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.82" d="M479.517 1279.84c6.486-5.6 16.937-12.16 28.575-7.37 9.921 4.09 20.762 18.27 30.145 28.39 10.123 10.91 22.268 24.47 25.056 35.02 2.831 10.72-3.808 18.39-9.859 23.62-6.294 5.44-14.049 10.41-25.291 6.02-10.206-3.99-23.724-16.58-33.433-27.04-9.585-10.33-23.734-22.74-26.775-32.87-3.429-11.43 5.216-20.27 11.582-25.77Zm16.083 18.02c2.81-2.43 7.321-5.98 12.783-4.01 6.215 2.25 13.547 10.56 18.974 16.41 5.716 6.16 12.032 13.85 13.019 19.58.775 4.49-2.784 7.46-5.424 9.74-2.749 2.38-6.614 6.2-11.39 4.78-5.661-1.7-12.439-9.33-17.97-15.29-5.66-6.1-14.732-15.37-16.417-21.59-1.349-4.98 3.753-7.31 6.425-9.62Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.818" d="M556.225 1379.78c8.933 1.26 21.421 4.82 25.999 16.26 3.905 9.74.682 26.38-.44 39.46-1.21 14.1-3.027 31.31-9.182 39.85-6.244 8.67-16.881 8.57-25.215 7.39-8.671-1.23-18.017-3.81-22.624-14.7-4.185-9.89-4.096-27.5-2.935-41.02 1.146-13.36.646-31.31 6.295-39.78 6.37-9.54 19.332-8.7 28.102-7.46Zm-2.454 22.82c3.87.55 9.819 1.64 12.183 6.84 2.686 5.91 1.492 16.38.843 23.94-.684 7.96-2.116 17.3-5.833 21.55-2.913 3.34-7.731 2.58-11.367 2.07-3.787-.54-9.483-1-11.781-5.35-2.722-5.17-1.66-14.81-.999-22.51.677-7.89 1.374-20.22 4.97-25.28 2.881-4.06 8.304-1.78 11.984-1.26Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.166" d="M513.05 1474.92c3.806 8.1 7.519 20.23-.176 29.16-6.556 7.62-23.218 12.27-35.525 17.12-13.277 5.22-29.669 11.32-40.707 9.9-11.203-1.43-16.99-10.45-20.541-18.02-3.693-7.86-6.55-16.9.648-25.62 6.533-7.92 22.325-15.64 35.06-20.66 12.571-4.95 28.35-13.32 39.041-12.31 12.055 1.15 18.464 12.47 22.2 20.43Zm-21.767 8.04c1.649 3.51 3.96 9.02.622 13.32-3.804 4.89-13.823 8.52-20.941 11.32-7.497 2.95-16.64 5.88-22.497 4.63-4.594-.98-6.575-5.39-8.124-8.69-1.613-3.43-4.354-8.45-1.727-12.32 3.115-4.59 12.323-7.96 19.578-10.82 7.423-2.92 18.831-7.79 25.346-7 5.217.63 6.175 6.22 7.743 9.56Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.924" d="M392.566 1502.59c-4.374 7.32-12.174 16.71-24.538 15.37-10.538-1.13-25.004-11.84-36.869-18.99-12.8-7.73-28.3-17.45-34.119-26.94-5.908-9.62-2.018-19 2.063-25.83 4.246-7.11 10.002-14.18 21.871-13.12 10.776.96 27.265 9.34 39.542 16.75 12.119 7.31 29.146 15.33 35.074 24.33 6.684 10.15 1.27 21.24-3.024 28.43Zm-20.545-12.94c-1.895 3.17-5.042 7.93-10.759 7.58-6.507-.41-15.903-6.41-22.765-10.55-7.228-4.36-15.481-10.03-18.147-15.33-2.091-4.16.342-8.07 2.123-11.05 1.854-3.1 4.314-7.94 9.222-7.92 5.818.02 14.487 5.51 21.482 9.73 7.156 4.32 18.475 10.75 21.943 16.33 2.778 4.46-1.297 8.19-3.099 11.21Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn22(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.994" d="m333.798 1188.52-13.748-3.86s7.459-25.04 14.586-22.54c14.33 5.02 71.392 52.67 71.392 52.67s18.635 12.46 7.302 18.37c-11.333 5.92-18.059-3.84-18.059-3.84l-61.473-40.8Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.917" d="m438.163 1253.72-12.88-6.34s12.432-22.84 19.009-19.07c13.224 7.58 60.334 64.55 60.334 64.55s16.008 15.59 3.566 19.18c-12.443 3.58-17.165-7.15-17.165-7.15l-52.864-51.17Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.199" d="m542.535 1404.32.17 12.34s26.902-1.8 26.317-8.29c-1.177-13.05-33.375-70-33.375-70s-7.423-18.04-16.33-9.5c-8.908 8.53-.992 15.99-.992 15.99l24.21 59.46Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.803" d="m547.138 1458.16 12.51-1.46s-7.996-25.64-14.459-24.4c-12.994 2.5-63.507 39.39-63.507 39.39s-16.635 9.02-5.917 16.68c10.718 7.66 16.487-.73 16.487-.73l54.886-29.48Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn23(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.858" d="m375.893 1478.67-10.981-6.89s-10.843 23.46-4.842 26.67c12.067 6.46 77.241 12.07 77.241 12.07s19.36 4.1 15.94-8.2c-3.42-12.29-13.667-9.94-13.667-9.94l-63.691-13.71Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.999" d="M332.589 730.656c1.06-9.402.876-22.894-8.583-29.814-8.06-5.9-24.295-5.841-36.695-7.238-13.376-1.508-29.786-2.999-39.244 1.643-9.599 4.71-12.163 15.629-13.151 24.401-1.029 9.124-.971 19.205 7.981 26.05 8.126 6.216 24.473 9.556 37.303 11.002 12.665 1.427 29.189 5.438 38.449 1.299 10.442-4.667 12.9-18.115 13.94-27.343Zm-21.778-1.934c.459-4.073.934-10.383-3.292-13.817-4.811-3.905-14.814-4.721-21.986-5.529-7.553-.851-16.571-1.203-21.444 1.776-3.822 2.335-4.32 7.421-4.751 11.248-.449 3.985-1.45 9.911 2.016 13.115 4.109 3.796 13.314 4.587 20.624 5.411 7.479.843 19.082 2.531 24.676-.168 4.479-2.162 3.721-8.164 4.157-12.036Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.995" d="M306.652 740.758c-6.603-4.336-15.092-16.349-10.524-20.956 5-5.04 48.68 4.925 48.68 4.925l-9.058 21.088s-22.494-.722-29.098-5.057Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.999" d="M223.279 720.209c1.059-9.401.875-22.893-8.584-29.813-8.06-5.9-24.295-5.841-36.695-7.239-13.376-1.507-29.786-2.999-39.243 1.644-9.599 4.709-12.163 15.629-13.152 24.4-1.028 9.125-.971 19.206 7.982 26.05 8.126 6.216 24.473 9.557 37.302 11.003 12.665 1.427 29.189 5.438 38.449 1.299 10.442-4.667 12.9-18.115 13.941-27.344Zm-21.779-1.934c.459-4.072.934-10.382-3.291-13.816-4.812-3.905-14.815-4.721-21.986-5.529-7.554-.852-16.572-1.204-21.444 1.776-3.822 2.335-4.32 7.421-4.751 11.248-.449 3.985-1.451 9.911 2.016 13.115 4.109 3.795 13.314 4.587 20.623 5.41 7.479.843 19.083 2.531 24.676-.167 4.48-2.162 3.721-8.164 4.157-12.037Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn19(colors),renderFn20(colors),renderFn21(colors),renderFn22(colors),renderFn23(colors)));
      
        return render;
      }
}