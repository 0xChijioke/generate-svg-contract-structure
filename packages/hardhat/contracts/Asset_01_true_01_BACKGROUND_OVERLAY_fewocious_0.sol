//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_01_BACKGROUND_OVERLAY_fewocious_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<g fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" clip-path="url(#a)" clip-rule="evenodd"><path fill="',colors[0].toColor(),'" stroke-width="12" d="M109.873 639.516c-46.826 25.114-60.865 90.21-31.331 145.277 29.534 55.067 91.528 79.384 138.353 54.27-26.534-15.746-57.617-46.322-78.964-86.123-21.346-39.8-29.621-82.609-28.058-113.424Z"/><path fill="',colors[1].toColor(),'" stroke-width="12" d="M953.602 154.274c-19.649-49.369-82.736-70.69-140.793-47.584-58.058 23.107-89.24 81.948-69.592 131.317 18.651-24.581 52.55-52.001 94.513-68.702 41.961-16.7 85.433-20.073 115.872-15.031Z"/><path fill="',colors[0].toColor(),'" stroke-width="10.716" d="M2086.65 1999.56c-28.05-31.46-88.89-23.06-135.78 18.74-46.89 41.81-62.2 101.28-34.15 132.74 11.41-27.11 35.83-62.62 69.72-92.84 33.89-30.21 71.97-50.41 100.21-58.64Zm-267.49 389.34c-42.01 3.28-72.15 56.8-67.26 119.43 4.9 62.63 42.98 110.81 85 107.52-14.68-25.49-28.17-66.42-31.71-111.69-3.54-45.27 3.44-87.8 13.97-115.26Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-width="9.018" d="M137.295 1774.56c-34.555 26.57-41.321 75.82-15.101 109.93 26.221 34.11 75.564 40.23 110.119 13.66-21.453-6.45-47.34-22.7-66.292-47.35-18.951-24.65-28.007-53.85-28.726-76.24Z"/><path fill="',colors[0].toColor(),'" stroke-width="10.716" d="M-107.267 1203.07c25.955 33.2 87.21 28.75 136.702-9.94 49.493-38.69 68.602-97.06 42.647-130.26-13.137 26.32-39.794 60.18-75.567 88.15-35.771 27.96-75.072 45.66-103.782 52.05Z"/><path fill="',colors[1].toColor(),'" stroke-width="10.716" d="M1736.97 66.646c25.95 33.202 87.21 28.748 136.7-9.942 49.49-38.69 68.6-97.057 42.65-130.26-13.14 26.319-39.8 60.185-75.57 88.149-35.77 27.963-75.07 45.657-103.78 52.053Z"/><path fill="',colors[0].toColor(),'" stroke-width="8.803" d="M795.425 723.331c15.945 39.011 60.752 57.66 99.998 41.62 39.247-16.041 58.165-60.736 42.221-99.747-11.809 18.485-34.077 38.675-62.443 50.268-28.366 11.594-58.4 12.781-79.776 7.859ZM2040.4 2594.33c15.95 39.01 60.76 57.66 100 41.62 39.25-16.04 58.17-60.73 42.22-99.75-11.81 18.49-34.07 38.68-62.44 50.27-28.37 11.6-58.4 12.78-79.78 7.86Zm-1591.425-64.08c-18.218 38-1.969 83.73 36.262 102.06 38.232 18.33 84.062 2.36 102.28-35.65-21.629 3.66-51.541.7-79.174-12.55-27.632-13.24-48.67-34.71-59.368-53.86Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-width="7.114" d="M1097.17 2643.61c16.77 30.83 54.09 42.96 83.31 27.08 29.21-15.89 39.32-53.82 22.55-84.65-7.32 15.97-22.7 34.06-43.82 45.54-21.11 11.49-44.66 14.56-62.04 12.03Z"/><path fill="',colors[1].toColor(),'" stroke-width="8.803" d="M2013.41 2259.59c-14.63 39.52 5.77 83.56 45.53 98.28 39.76 14.72 83.92-5.41 98.55-44.93-21.2 5.63-51.25 5.45-79.99-5.19-28.74-10.64-51.67-30.08-64.09-48.16Z"/><path fill="',colors[1].toColor(),'" stroke-width="8.351" d="M405.35 619.363c-14.632 39.522 2.542 82.365 38.327 95.614 35.786 13.248 76.719-8.082 91.351-47.604-19.519 6.256-46.928 7.053-72.793-2.523-25.864-9.575-46.146-28.029-56.885-45.487Z"/><path fill="',colors[1].toColor(),'" stroke-width="12.23" d="M2145.7 402.638c30.81 46.952 13.83 111.942-37.9 145.039-51.73 33.097-118.75 21.847-149.56-25.105 31.12.093 73.09-10.524 110.48-34.446 37.39-23.921 64.36-57.41 76.98-85.488Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-width="12.485" d="M1900.6 934.364c48.31 26.348 62.79 94.646 32.32 152.416-30.47 57.77-94.42 83.29-142.73 56.94 27.37-16.52 59.44-48.6 81.46-90.36 22.02-41.75 30.56-86.667 28.95-118.996Z"/><path fill="',colors[1].toColor(),'" stroke-width="12.485" d="M1030.17 425.277c20.27-51.795 85.35-74.164 145.25-49.922 59.89 24.242 92.06 85.975 71.79 137.769-19.24-25.788-54.21-54.555-97.5-72.077-43.29-17.521-88.14-21.06-119.54-15.77Z"/><path fill="',colors[0].toColor(),'" stroke-width="11.149" d="M-138.737 2361.24c28.931-33.01 91.696-24.19 140.072 19.66 48.378 43.86 64.165 106.26 35.234 139.27-11.773-28.45-36.962-65.71-71.928-97.41-34.965-31.7-74.247-52.88-103.378-61.52Z"/><path fill="',colors[0].toColor(),'" stroke-width="11.301" d="M1639.57 1776.13c49.42-10.17 99.84 27.82 112.53 84.79 12.69 56.96-17.13 111.47-66.55 121.64 9.46-27.14 13.04-67.57 3.87-108.75-9.17-41.17-29.66-76.65-49.85-97.68Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-width="11.149" d="M2068.62 1435.34c-19.05 39.59-81.86 48-140.17 18.76-58.3-29.24-90.18-85.12-71.13-124.71 18.94 24.24 53.15 53.36 95.3 74.5 42.14 21.13 85.63 30.97 116 31.45ZM222.008 333.343c-26.777 34.834-89.969 30.16-141.028-10.43-51.06-40.591-70.775-101.827-43.998-136.661 13.554 27.611 41.054 63.142 77.959 92.48 36.904 29.338 77.448 47.901 107.067 54.611Z"/><path fill="',colors[1].toColor(),'" stroke-width="9.159" d="M1193.35 1022.3c-16.45 40.93-62.68 60.49-103.16 43.66-40.49-16.83-60.01-63.72-43.56-104.645 12.18 19.393 35.15 40.575 64.42 52.735 29.26 12.17 60.25 13.41 82.3 8.25Z"/><path fill="',colors[0].toColor(),'" stroke-width="8.689" d="M1595.77 913.221c15.1 41.464-2.62 86.412-39.54 100.309-36.92 13.9-79.15-8.48-94.24-49.94 20.14 6.563 48.41 7.4 75.1-2.646 26.68-10.047 47.6-29.407 58.68-47.723Z"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h2160v2700H0z"/></clipPath></defs>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors)));
      
        return render;
      }
}