//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_03_RIDER_gunner_1 {

using ToColor for bytes4;

function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.434" d="M1064.91 1449.17s-29.68 100.28-47.06 153.41c-17.38 53.12-37.371 133.61-37.371 133.61s-27.328-7.32-45.871-33.48c-5.022-7.09-3.662-24.31-7.833-32.63-7.974-15.9-19.375-34.88-21.364-52.3-2.092-18.35 5.541-35.05 9.604-47.47 5.106-15.61 71.754-108.27 71.754-108.27l78.141-12.87Z" clip-rule="evenodd"/><path stroke="#000" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m930.68 1673.73 74.95-211.25"/><path stroke="',colors[1].toColor(),'" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m968.999 1667.8-13.71 49.38m1.331-58.88-13.132 47.19"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.434" d="M1244.27 1496.79s-40.78 78.4-38.26 134.18c2.51 55.79.22 138.64.22 138.64s34.84 2.77 62.46-22.98c3.51-3.26 3.74-23 7.04-26.65 11.1-12.3 28.01-21.11 34.53-36.24 7.88-18.29 6.77-41.59 6.14-55.49-.67-14.96-7.95-93.2-7.95-93.2l-64.18-38.26Z" clip-rule="evenodd"/><path stroke="#000" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m1274.04 1718.33-5.91-204.8"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="',colors[6].toColor()));
      
        return render;
      }

    function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.761" d="M1132.95 1486.32c-4.92 6.09-11.54 5.96-14.78-.29-3.24-6.24-1.88-16.25 3.04-22.34 0 0 49.08-60.44 58.91-78.07 15.83-28.41 33.04-96.74 23.8-120.78-3.24-8.45-10.39-12.87-18.07-16.77-9.81-4.99-41.95-26.4-50.58-31.07-17.18-9.3-25.73-24.51-18.67-49.97 2.48-8.92-20.06-286.654-20.06-286.654 5.66-3.974 24.5-3.908 18.84.066 0 0 24.17 272.238 23.5 298.508-.61 23.67 50.05 31.07 59.11 37.66 7.32 5.33 23.83 22.33 27.33 31.44 13.07 33.99-7.42 114.58-29.8 154.74-10.47 18.79-62.57 83.53-62.57 83.53Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.797" d="M1207.81 1455.2c3.8-26.47-7.54-51.17-25.31-55.16-17.77-3.99-35.25 14.24-39.05 40.71-3.79 26.47 7.54 51.16 25.31 55.15 17.77 3.99 35.26-14.23 39.05-40.7Z"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.749" d="M1214.76 1484.95c3.8-26.47-13.82-52.58-39.34-58.31-25.53-5.73-49.29 11.08-53.09 37.55-3.79 26.47 13.82 52.58 39.35 58.31 25.52 5.73 49.29-11.08 53.08-37.55Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.82" d="M1098.33 1483.21c23.64-18.74 47.51-17.08 71.14-20.92 29.26 13.17 48.25 22.51 58.91 50.12l-71.89 33.33-58.16-62.53Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.904" d="M1147.03 1464.5c5.82 5.66 14.34 4.53 19-2.54 4.67-7.06 5.19-23.97-.63-29.63 0 0-18.48-77.7-25.27-103.09-10.52-39.37-32.12-76.76-15.46-100.95 16.21-23.55 74.31-84.58 73.3-129.38-.41-18-27.81-59.16-26.84-88.17 2.25-67.362-22.73-157.41-22.73-157.41s-26.66 13.604-19.72 16.931c0 0 17.69 99.239 23.38 152.109 4.23 39.37 22.31 71.68 22.88 80.29 1.97 30.03-47.22 82.7-66.92 106.98-25.79 31.75.2 86.66 15.57 133.04 12.3 37.08 23.44 121.82 23.44 121.82Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="',colors[7].toColor(),'" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.878" d="M1077.45 1464.58c4.85 6.9 13.39 7.75 19.05 1.88 5.67-5.87 8.77-22.35 3.91-29.25 0 0-6.26-80.57-9.04-107.07-4.31-41.09-19.81-82.78.26-102.72 19.52-19.4 85.93-66 91.8-110.24 2.35-17.77-13.78-63.76-12.88-92.77 1.49-48.046-4.29-166.577-4.29-166.577s-29.25-3.584-22.94 1.278c0 0 9.22 119.099 6.72 172.339-1.87 39.64 10.95 75.54 10.19 84.13-2.66 29.95-59.03 70.38-82.11 89.7-30.19 25.27-13.06 85.17-5.05 134.26 6.4 39.25 4.38 125.04 4.38 125.04Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="',colors[7].toColor()));
      
        return render;
      }

    function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.881" d="M1042.56 878c5.02-6.718 17.08-11.143 22.59-5.079 5.52 6.075 29.72 134.319 26.29 160.699-5.32 40.9-25.14 85.56-5.57 106.23 19.04 20.11 84.28 69.13 89.05 113.57 1.92 17.85-19.83 63.79-15.14 92.25 10.9 66.08 29.22 129.11 29.22 129.11s-28.08-8.27-21.66-12.9c0 0-26.69-70.69-27.89-124-.89-39.69 12.79-75.1 12.24-83.71-1.92-30.04-57.28-72.53-79.86-92.68-29.56-26.37-3.98-98.8-1.77-134.39 2.48-39.92-27.5-149.1-27.5-149.1Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="',colors[8].toColor(),'" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.623" d="M1156.82 1433.07c-3.62 7.5-11.85 10.22-18.38 6.06-6.52-4.16-8.88-13.61-5.27-21.11 0 0 36.21-74.56 41.23-94.39 8.07-31.95-1.33-110.24-22.46-127.62-7.44-6.11-18.05-6.97-29.11-7.16-14.13-.23-29.03 1.36-41.59.9-24.99-.91-44.76-4.03-46.33-29.63-.54-8.97 8.26-20.49 16.33-34.1 6.13-10.32 32.96-40.95 53.21-80.75 27.89-54.82-1.95-156.794-1.95-156.794 5.89-13.238 23.85-2.043 23.48 3.264 0 0 26.04 111-.82 161.37-22.29 41.78-50.32 78.16-55.92 88.55-17.45 32.4 14.03 23.96 22.1 23.68 14.38-.5 30.11-1.69 43.97.29 11.2 1.59 21.29 5.27 29.3 11.85 29.88 24.57 40.8 110.64 29.38 155.82-5.34 21.13-37.17 99.77-37.17 99.77Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="',colors[8].toColor()));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.623" d="M1156.82 1433.07c-3.62 7.5-11.85 10.22-18.38 6.06-6.52-4.16-8.88-13.61-5.27-21.11 0 0 36.21-74.56 41.23-94.39 8.07-31.95-1.33-110.24-22.46-127.62-7.44-6.11-18.05-6.97-29.11-7.16-14.13-.23-29.03 1.36-41.59.9-24.99-.91-44.76-4.03-46.33-29.63-.54-8.97 8.26-20.49 16.33-34.1 6.13-10.32 32.96-40.95 53.21-80.75 27.89-54.82-1.95-156.794-1.95-156.794 5.89-13.238 23.85-2.043 23.48 3.264 0 0 26.04 111-.82 161.37-22.29 41.78-50.32 78.16-55.92 88.55-17.45 32.4 14.03 23.96 22.1 23.68 14.38-.5 30.11-1.69 43.97.29 11.2 1.59 21.29 5.27 29.3 11.85 29.88 24.57 40.8 110.64 29.38 155.82-5.34 21.13-37.17 99.77-37.17 99.77Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.853" d="M1180.45 1433.57c4.01-25.68-7.97-49.63-26.75-53.5-18.79-3.87-37.27 13.8-41.28 39.48-4.01 25.68 7.97 49.64 26.75 53.51 18.79 3.87 37.27-13.81 41.28-39.49Z"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.816" d="M1187.79 1462.43c4.01-25.68-14.61-51-41.59-56.56-26.98-5.56-52.1 10.75-56.11 36.43-4.01 25.68 14.61 51 41.59 56.56 26.98 5.56 52.1-10.75 56.11-36.43Z"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1144.93 1412.19.59 19.29 22.28 10.83 6.71-11.24-29.58-18.88Zm13.61-23.23-5.27 9.49 17.47 10.07-3.56-14.26-8.64-5.3Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.899" d="M1064.72 1460.74c24.99-18.17 50.22-16.56 75.2-20.29 30.93 12.78 51.01 21.84 62.28 48.62l-76 32.33-61.48-60.66Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn10(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="',colors[9].toColor(),'" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="6.934" d="M1102.58 1452.37c-.9 6.21-23.62.27-22.73-5.94 0 0 19.2-73.22 21.9-87.97 5.01-27.3 4.97-48.6-15.71-56-28.11-10.04-40.4-32.27-39.62-54.6.82-23.75 30.83-55.38 44.81-112.15 14.3-58.07-26.93-273.559-26.93-273.559 2.35-5.347 22.22-8.33 19.85-2.981 0 0 44.8 216.04 30.26 280.76-11.98 53.34-47.05 97.19-46.74 111.85.43 20.69 13.86 23.21 27.94 29.01 42.04 17.31 32.14 56.16 25.84 88.79-3.16 16.41-18.87 82.79-18.87 82.79Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.503" d="M1124.4 1462.05c-1.76-22.42-18.61-39.4-37.64-37.94-19.03 1.47-33.03 20.83-31.26 43.25 1.76 22.41 18.61 39.4 37.64 37.93 19.03-1.47 33.03-20.83 31.26-43.24Z"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.396" d="M1137.85 1484.28c-1.76-22.42-25.34-38.88-52.67-36.78-27.33 2.11-48.05 21.99-46.29 44.4 1.76 22.42 25.35 38.88 52.67 36.78 27.33-2.11 48.06-21.99 46.29-44.4Z"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn11(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.401" d="M1018.39 1513.62c20.19-21.4 44.95-26.36 68.3-35.71 32.75 2.93 54.16 5.47 70.95 24.99l-66.43 45.95-72.82-35.23Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="',colors[10].toColor(),'" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.588" d="M1217.12 1493.46c-6.17 5.46-14.81 4.84-19.28-1.4-4.48-6.23-4.33-21.65 1.85-27.1 0 0 21.99-71.91 29.94-95.45 12.33-36.48 35.89-71.7 19.87-93.01-15.58-20.73-72.38-73.67-69.54-114.67 1.14-16.47 30.77-55.41 30.95-81.88.44-61.45-53.14-209.899-53.14-209.899 5.65-8.03 13.68-12.363 26.38-4.292 0 0 53.69 175.301 45.75 223.891-5.92 36.19-25.67 66.6-26.59 74.49-3.24 27.54 44.81 73.29 63.93 94.51 25.02 27.77-3.71 79.21-21.28 122.34-14.04 34.49-28.84 112.47-28.84 112.47Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.503" d="M1238.45 1503.62c12.19-18.97 9.02-42.57-7.08-52.71-16.11-10.14-39.05-2.98-51.24 15.99-12.19 18.97-9.02 42.57 7.09 52.71 16.1 10.14 39.04 2.98 51.23-15.99Z"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn12(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.396" d="M1235.71 1529.39c12.2-18.97 3.33-46.15-19.8-60.72-23.12-14.56-51.76-10.99-63.95 7.98-12.19 18.97-3.32 46.16 19.8 60.72 23.13 14.57 51.76 10.99 63.95-7.98Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.401" d="M1122.39 1481.83c29.13-5.11 51.94 5.65 76.28 12.06 24.41 21.8 39.99 36.56 41.57 62.15l-80.99-2.75-36.86-71.46Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.454" d="M1213.03 1720.77c11.61-1.3 38.68-3.01 53.28-14.48 16.49-12.96 28.91-39.64 30.41-47.4 12.91-66.56-59.79-134.23-159.46-153.17-99.67-18.94-192.814 19.41-203.981 86.28-1.714 10.26 6.451 36.49 17.951 52.82 12.754 18.11 29.788 27.39 40.296 35.36l16.874-25.27 103.62 35.81 93.74.2 7.27 29.85Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1244.95 1683.74-5.08 24.32 17.05-4.83c9.34-8.4 19.61-16.59 22.23-27.74l-34.2 8.25Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="2.653" d="M1205.23 1554.18c-1.46-.78-2.03-2.57-1.25-4.02.78-1.45 2.6-2.01 4.06-1.25 ','7.78 4.07 10.15 10.29 9.28 17.82-.18 1.63-1.67 2.8-3.32 2.62-1.64-.19-2.83-1.66-2.64-3.29.57-5.01-.95-9.18-6.13-11.88Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="2.653" d="M1213.84 1549.19a2.954 2.954 0 0 1-1.25-4.02 3.008 3.008 0 0 1 4.05-1.24c7.78 4.06 10.15 10.29 9.29 17.81-.18 1.63-1.68 2.8-3.32 2.62-1.65-.19-2.83-1.66-2.65-3.29.58-5.01-.95-9.18-6.12-11.88Zm8.26-6.98a2.954 2.954 0 0 1-1.25-4.02 3.008 3.008 0 0 1 4.05-1.24c7.78 4.06 10.15 10.29 9.29 17.81-.18 1.63-1.68 2.8-3.32 2.62-1.65-.19-2.83-1.66-2.65-3.29.58-5.01-.95-9.18-6.12-11.88Zm-25.12 16.54a2.954 2.954 0 0 1-1.25-4.02c.77-1.45 2.59-2.01 4.06-1.24 7.77 4.07 10.14 10.29 9.28 17.81-.18 1.63-1.68 2.81-3.32 2.62-1.65-.19-2.83-1.66-2.64-3.29','.57-5.01-.96-9.18-6.13-11.88Zm-9.24 5.2c-1.46-.78-2.03-2.58-1.25-4.03.78-1.45 2.6-2 4.06-1.24 7.78 4.07 10.15 10.29 9.28 17.82-.18 1.63-1.67 2.8-3.32 2.61-1.64-.18-2.83-1.65-2.64-3.28.57-5.01-.95-9.19-6.13-11.88Z" clip-rule="evenodd"/><path stroke="#000" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m1077.13 1615.33 8.98-11.06 18.75 37.8 3.96-18.58 25.35 7.47 4.77 13.72 23.04-25.39 13.08 12.95"/><path stroke="',colors[11].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn5(colors),renderFn6(colors),renderFn7(colors),renderFn8(colors),renderFn9(colors),renderFn10(colors),renderFn11(colors),renderFn12(colors)));
      
        return render;
      }
}