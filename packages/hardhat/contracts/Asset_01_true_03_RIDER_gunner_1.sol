//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_03_RIDER_gunner_1 {

using ToColor for bytes4;

function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m968.999 1667.8-13.709 49.38m1.329-58.88-13.132 47.19"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.477" d="M1244.27 1496.79s-40.78 78.4-38.26 134.18c2.51 55.79.22 138.64.22 138.64s34.84 2.77 62.46-22.98c3.51-3.26 3.74-23 7.04-26.65 11.1-12.3 28.01-21.11 34.53-36.24 7.88-18.29 6.77-41.59 6.14-55.49-.67-14.96-7.95-93.2-7.95-93.2l-64.18-38.26Z" clip-rule="evenodd"/><path stroke="#000" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m1274.04 1718.33-5.91-204.8"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="6.963" d="M1156.82 1433.07c-3.62 7.5-11.85 10.22-18.38 6.06-6.53-4.16-8.88-13.61-5.27-21.11 0 0 36.21-74.56 41.23-94.39 8.07-31.95-1.33-110.24-22.46-127.62-7.44-6.11-18.05-6.97-29.11-7.16-14.13-.23-29.04 1.36-41.59.9-24.99-.91-44.76-4.03-46.33-29.63-.54-8.97 8.26-20.49 16.33-34.1 6.13-10.32 32.95-40.95 53.2-80.75 27.9-54.82-1.94-156.794-1.94-156.794 5.89-13.238 23.85-2.043 23.48 3.264 0 0 26.03 111-.83 161.37-22.28 41.78-50.31 78.16-55.91 88.55-17.45 32.4 14.03 23.96 22.1 23.68 14.37-.5 30.11-1.69 43.97.29 11.2 1.59 21.29 5.27 29.3 11.85 29.88 24.57 40.79 110.64 29.38 155.82-5.34 21.13-37.17 99.77-37.17 99.77Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1112','.8 1033.46c13.92-43.691 17.99-93.786 13.67-149.326l-26.92-7.177c15.73 57.743 20.39 110.028 13.25 156.503Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.853" d="M1180.45 1433.57c4.01-25.68-7.97-49.63-26.76-53.5-18.78-3.87-37.26 13.8-41.27 39.48-4.01 25.68 7.96 49.64 26.75 53.51 18.78 3.87 37.27-13.81 41.28-39.49Z"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.816" d="M1187.79 1462.43c4.01-25.68-14.61-51-41.59-56.56-26.98-5.56-52.1 10.75-56.11 36.43-4.01 25.68 14.61 51 41.59 56.56 26.98 5.56 52.1-10.75 56.11-36.43Z"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1144.93 1412.19.59 19.29 22.28 10.83 6.7-11.24-29.57-18.88Zm13.61-23.24-5.27 9.5 17.46 10.06-3.55-14.25-8.64-5.31Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.636" d="M1064.72 1460.74c24.99-18.17 50.21-16.56 75.19-20.29 30.94 12.78 51.01 21.84 62.28 48.62l-75.99 32.33-61.48-60.66Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.499" d="M1213.03 1720.77c11.61-1.3 38.68-3.01 53.28-14.48 16.49-12.96 28.91-39.64 30.41-47.4 12.91-66.56-59.79-134.23-159.46-153.17-99.67-18.94-192.816 19.41-203.983 86.28-1.713 10.26 6.451 36.49 17.951 52.82 12.754 18.11 29.789 27.39 40.297 35.36l16.875-25.27 103.62 35.81 93.74.2 7.27 29.85Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1244.95 1683.74-5.08 24.32 17.05-4.83c9.34-8.4 19.61-16.59 22.23-27.74l-34.2 8.25Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="2.653" d="M1205.23 1554.18c-1.46-.78-2.03-2.57-1.25-4.02.78-1.45 2.6-2.01 4.06-1.25 ','7.77 4.07 10.15 10.29 9.28 17.82-.18 1.63-1.67 2.8-3.32 2.62-1.64-.19-2.83-1.66-2.64-3.29.57-5.01-.95-9.18-6.13-11.88Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="2.653" d="M1213.83 1549.19a2.959 2.959 0 0 1-1.24-4.02 3.008 3.008 0 0 1 4.05-1.24c7.78 4.06 10.15 10.29 9.29 17.81-.18 1.63-1.68 2.8-3.32 2.62-1.65-.19-2.83-1.66-2.65-3.29.57-5.01-.95-9.18-6.13-11.88Zm8.27-6.98a2.954 2.954 0 0 1-1.25-4.02 3.008 3.008 0 0 1 4.05-1.24c7.78 4.06 10.15 10.29 9.29 17.81-.18 1.63-1.68 2.8-3.32 2.62-1.65-.19-2.83-1.66-2.65-3.29.58-5.01-.95-9.18-6.12-11.88Zm-25.12 16.54a2.954 2.954 0 0 1-1.25-4.02 3.008 3.008 0 0 1 4.05-1.24c7.78 4.06 10.15 10.29 9.29 17.81-.18 1.63-1.68 2.8-3.32 2.62-1.65-.19-2.83-1.66-2.65-3.29.5'));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('8-5.01-.95-9.18-6.12-11.88Zm-9.24 5.2c-1.46-.78-2.03-2.58-1.25-4.03.78-1.45 2.6-2 4.06-1.24 7.77 4.07 10.15 10.29 9.28 17.82-.18 1.63-1.67 2.8-3.32 2.61-1.64-.18-2.83-1.65-2.64-3.28.57-5.01-.95-9.19-6.13-11.88Z" clip-rule="evenodd"/><path stroke="#000" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m1066.15 1624.04 13.14-7.8 18.5 22.47 8.04-12.35 28.34 4.6 4.77 13.72 26.13-21.01 9.99 8.57"/><path stroke="',colors[6].toColor(),'" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m1234.97 1721.47 4.21 37.25m10.99-41.19 5.32 33.82"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.966" d="M1015 1490.24s22.14-18.33 56.08-23.51c18.32-2.8 42.66-2.75 65.43 1.3 22.98 4.08 47.41 10.82 63.7 18.82 29.74 14.61 40.65 37.15 40.65 37.15s-59.84 63.27-124.81 51.73c-64.96-11.54-101.05-85.49-101.05-85.49Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m1197.98 1492.63 33.23 26.04-28.76 23.86s17.63-17.45 13.34-24.72c-4.29-7.26-17.81-25.18-17.81-25.18Zm74.95 61.39-1.34 7.08 36.58 49.82-5.89-25.55-29.35-31.35Zm-62.27 31.1c-5.84 6.79-32.9 40.32-32.9 40.32l-8-7.89s46.74-39.21 40.9-32.43Zm-44.68 44.31 2.94 3.86-26.48 19.11 23.54-22.97Zm19.02-74.81s-39.64 16.18-48.39 16.52c-4.43.18-2.19-7.22 2.06-8.44 8.84-2.54 46.33-8.08 46.33-8.08Zm-42.62-79.81-5.37 ','24.63 4.83.65.54-25.28Zm-17.51 147.65 13.94 3.36 1.8 7.74 1.16-10.43-16.9-.67Zm-4.64 36.86 7.25-17.96 8.47 13.17-15.72 4.79Zm154.88 20.55-17.13 19.53 11.98-18.02 5.15-1.51Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".4" fill-rule="evenodd" d="m1142.71 1584.33-2.26 51.7 22.88-18.33 14.04 8.65 58.09-63.93-31.49 16.88-9.52 3.44-8.46-12.85c-14.62 7.14-26.2 12.91-43.28 14.44Zm49.63-39.62c2.38-8.54-4.43-24.44-25.45-10.79l1.63-55.71 41.6 18.46 18.01 21.34-35.79 26.7Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".4" fill-rule="evenodd" d="m1122.38 1633.72-3.55 26.83c20.56-2.99 35.96-14.21 50.02-27.58l-3.21-3.66-29.2 20.84-5.02-14.64-9.04-1.79Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1059.7 1474.28c-5.31 32.35 3.51 58.57 22.03 87.65l-26.','3-18.11-34.26 4.97-13.1-33.59-63.544 40.57c.23 36.95 4.623 74.57 34.942 116.35-23.177-8.33-40.042-4.37-47.998 16.94l-26.574-74.22c5.841-56.79 63.652-117.56 82.125-147.66 6.737-5.75 75.379-17.34 75.379-17.34l-1.44 10.49 29.41-17.5c1.77-12.62 13.21-25.76 30.34-33.9-7.9-12.67 26.26-34.61 29.71-32.33 36.57-57.52 31.03-120.69 5.48-186.55 37.12 67.84 41.96 131.43 4.14 189.42 0 0-28.69 30.57-29.93 33.52-12.28 11.83-13.66 20.3-11.39 27.66-8.69 3.71-24.91 7.24-28.25 21.53-1.93 8.27-27.23 3.54-30.77 12.1Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.484" d="m1136.51 1468.03-3.81 35 10.77 5.9-1.35 10.97-24.76-.83-2.85 12.27 14.61 6.08-4.44 36.73"/><path fill="gray" stroke="#000" stroke-linejoin="round" stroke-miterlim','it="1.5" stroke-width="2.894" d="M1082.18 1532.34c4.44 0 8.04-3.19 8.04-7.12s-3.6-7.12-8.04-7.12c-4.44 0-8.04 3.19-8.04 7.12s3.6 7.12 8.04 7.12Zm98.24 15.4c4.44 0 8.05-3.19 8.05-7.12 0-3.94-3.61-7.13-8.05-7.13-4.44 0-8.04 3.19-8.04 7.13 0 3.93 3.6 7.12 8.04 7.12Z"/><path fill="#000" fill-rule="evenodd" d="M1244.67 1551.15s-84.12 119.47-131.82 111.82c-47.71-7.66-104.23-150.94-104.23-150.94-45.589 12.18-82.992 56.74-72.848 94.29l69.728 47.71 106.53 39.29 98.01-4.8 80.86-20.47c11.98-8.56 18.24-80.27-46.23-116.9Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1182.46 1630.96s23.48 6.97 31.21 10.28c7.74 3.32 1.58 13.41 1.58 13.41l22.69 19.93 19.86-4.99-23.76-18.95s3.86-8.96-4.91-18.08c-8.79-9.12-23.49-14.81-23.49-14.81l-23.18 13.21Z" clip-rule="evenodd"/><path fill="#fff" fill-'));
      
        return render;
      }

    function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('rule="evenodd" d="M1209.56 1613.08s21.24 12.45 27.77 16.84c6.53 4.38 5.01 17.77 5.01 17.77l21.58 19.52 9.44-2.03-22.93-20.64s2.83-9.4-5.82-18.63c-8.65-9.25-26.52-31.11-26.52-31.11l-8.53 18.28Z" clip-rule="evenodd"/>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn5(colors),renderFn6(colors),renderFn7(colors),renderFn8(colors)));
      
        return render;
      }
}