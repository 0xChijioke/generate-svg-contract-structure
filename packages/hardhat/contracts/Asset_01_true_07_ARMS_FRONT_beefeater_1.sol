//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_07_ARMS_FRONT_beefeater_1 {

using ToColor for bytes4;

function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="m230.186 2360.06-20.633 30.9 7.853 4.95 19.089-31.62-6.309-4.23Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m231.569 2358 6.761 3.55a3.304 3.304 0 0 1 .984 4.44s-4.983 10.8-9.839 19.95c-3.68 6.94-7.307 12.84-7.307 12.84a5.547 5.547 0 0 1-3.481 2.54 5.572 5.572 0 0 1-4.251-.7l-7.696-5.19a5.29 5.29 0 0 1-1.575-7.4l22.965-29.35a2.47 2.47 0 0 1 1.578-1.06 2.5 2.5 0 0 1 1.861.38Zm-1.383 2.05-20.632 30.91 7.852 4.95 19.089-31.62-6.309-4.24Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m255.786 2371.28-23.779 39.39 7.853 4.94 21.889-43.6-5.963-.73Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m256.086 2368.82 6.026.18a3.039 3.039 0 0 1 2.345 4.37s-5.689 14.64-11.24 27.11c-4.222 9.48-8.399 17.62-8.399 17.62a5.544 5.544 0 0 1-3.471 2.86 5.526 5.526 0 0 1-4.446-.65l-7.723-5.15a5.313 5.313 0 0 1-1.717-7.24l26.205-37.92a2.502 2.502 0 0 1 2.42-1.18Zm-.3 2.46-23.779 39.39 7.853 4.94 21.889-43.6-5.963-.73Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m198.554 2378.99 34.196 29.47 5.648-7.36-35.047-28-4.797 5.89Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m196.633 2377.43 4.253-6.34a3.18 3.18 0 0 1 4.45-.47s12.088 7.89 22.264 15.25c7.73 5.59 14.27 10.89 14.27 10.89a5.561 5.561 0 0 1 .941 7.73l-5.838 7.22a5.287 5.287 0 0 1-3.679 2.05 5.306 5.306 0 0 1-4.021-1.26l-32.337-31.63a2.477 2.477 0 0 1-.303-3.44Zm1.92 1.56 34.196 29.48 5.649-7.37-35.047-28-4.798 5.89Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m218.658 2349.18 34.196 29.48 5.649-7.37-22.179-9.75-12.868-18.25-4.798 5.89Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m216.738 2347.62 4.261-6.33a3.182 3.182 0 0 1 2.567-1.17c.99.04 1.908.53 2.48 1.34 0 0 13.171 15.97 13.169 15.96 1.844.67 6.145 2.26 10.401 3.99a323.43 323.43 0 0 1 11.122 4.8 5.552 5.552 0 0 1 2.169 8.46l-5.847 7.21a5.286 5.286 0 0 1-3.664 2.04 5.26 5.26 0 0 1-4.003-1.25l-32.352-31.61a2.476 2.476 0 0 1-.303-3.44Zm1.92 1.56 34.196 29.47 5.649-7.36-22.179-9.75-12.868-18.25-4.798 5.89Z" clip-rule="evenodd"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="m252.388 2293-17.736 23.91 5.493 5.77 18.546-25.44-6.303-4.24Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m253.765 2290.94 6.845 3.44c.772.52 1.3 1.34 1.467 2.26.162.92-.059 1.86-.606 2.62 0 0-4.872 8.9-9.651 16.34a177.243 177.243 0 0 1-7.202 10.34 5.55 5.55 0 0 1-4.11 2.26 5.55 5.55 0 0 1-4.371-1.7l-5.233-6.02a5.175 5.175 0 0 1-.407-6.65l19.897-22.31a2.488 2.488 0 0 1 3.371-.58Zm-1.377 2.06-17.736 23.91 5.492 5.77 18.546-25.45-6.302-4.23Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m276.294 2307.24-23.805 30.34 7.243 11.02 20.938-38.66-4.376-2.7Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m277.598 2305.14 4.645 2.26a2.986 2.986 0 0 1 1.057 3.97s-5.419 13.07-10.702 24.2c-4.01 8.45-7.97 15.68-7.97 15.68a5.563 5.563 0 0 1-4.656 2.91 5.545 5.545 0 0 1-4.892-2.5l-6.89-11.25a5.135 5.135 0 0 1 .25-6l25.909-28.69a2.47 2.47 0 0 1 3.249-.58Zm-1.304 2.11-23.805 30.34 7.244 11.01 20.937-38.66-4.376-2.69Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m240.427 2326.08 32.867 35.43 5.648-7.36-33.249-32.06-5.266 3.99Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m238.929 2324.12 4.903-4.48a3.077 3.077 0 0 1 3.997.23s11.612 9.28 21.351 17.79a413.04 413.04 0 0 1 13.636 12.48c2.042 1.96 2.28 5.15.553 7.41l-5.809 7.23a5.323 5.323 0 0 1-4.015 2.1 5.36 5.36 0 0 1-4.194-1.71s-5.928-6.85-12.482-14.79c-8.607-10.42-18.257-22.61-18.257-22.61a2.472 2.472 0 0 1 .317-3.65Zm1.499 1.96 32.866 35.43 5.648-7.36-33.249-32.06-5.265 3.99Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m255.85 2305.74 39.483 24.29 7.283-9.46-42.146-22.71-4.62 7.88Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m253.714 2304.49 3.95-8.28a3.26 3.26 0 0 1 4.349-1.21s14.153 6.08 26.204 11.92a425.48 425.48 0 0 1 17.035 8.76 5.558 5.558 0 0 1 1.768 8.28l-7.528 9.27a5.254 5.254 0 0 1-6.908 1.27l-38.032-26.66a2.46 2.46 0 0 1-.838-3.35Zm2.136 1.25 39.483 24.29 7.283-9.46-42.146-22.71-4.62 7.88Z" clip-rule="evenodd"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="m306.953 2251.45-30.39 33.54 7.852 4.95 28.846-34.26-6.308-4.23Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m308.336 2249.39 6.697 3.65c.752.5 1.248 1.3 1.376 2.2.122.89-.134 1.8-.718 2.49 0 0-8.185 11.86-15.793 21.83a372.514 372.514 0 0 1-11.231 13.96 5.559 5.559 0 0 1-7.222 1.13l-7.721-5.15a5.322 5.322 0 0 1-2.441-3.78 5.32 5.32 0 0 1 1.334-4.3l32.499-31.64a2.478 2.478 0 0 1 3.22-.39Zm-1.383 2.05-30.39 33.55 7.852 4.95 28.847-34.26-6.309-4.24Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m325.458 2267.16-26.196 36.76 7.853 4.95 24.652-37.48-6.309-4.23Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m326.841 2265.1 6.698 3.65c1.45.97 1.84 2.93.887 4.39 0 0-6.748 12.76-13.14 23.57-4.855 8.21-9.524 15.21-9.524 15.21-1.668 2.53-5.052 3.27-7.611 1.65l-7.728-5.14a5.305 5.305 0 0 1-2.383-3.48 5.322 5.322 0 0 1 .883-4.12l28.521-35.11a2.476 2.476 0 0 1 3.397-.62Zm-1.383 2.06-26.196 36.76 7.853 4.95 24.652-37.48-6.309-4.23Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m288.262 2291.95 34.196 29.47 5.649-7.36-35.047-28-4.798 5.89Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m286.341 2290.38 4.254-6.33a3.19 3.19 0 0 1 4.449-.48s12.089 7.9 22.264 15.26a373.005 373.005 0 0 1 14.27 10.88c2.366 1.9 2.785 5.33.941 7.73l-5.837 7.22a5.301 5.301 0 0 1-3.679 2.06 5.346 5.346 0 0 1-4.021-1.26l-32.337-31.64a2.476 2.476 0 0 1-.304-3.44Zm1.921 1.57 34.196 29.47 5.648-7.36-35.047-28-4.797 5.89Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m308.367 2262.14 14.861 17.99 21.165 8.21 9.021-9.1-26.705-4.45-13.545-18.54-4.797 5.89Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m306.446 2260.57 4.295-6.29a3.123 3.123 0 0 1 2.506-1.16c.968.03 1.869.5 2.441 1.28l13.412 15.84c2.395.25 7.128.77 11.853 1.42 6.706.91 13.374 2.09 13.374 2.09a5.572 5.572 0 0 1 4.374 3.78 5.542 5.542 0 0 1-1.34 5.61l-9.265 8.87a5.22 5.22 0 0 1-5.589 1.19l-20.737-9.32a4.038 4.038 0 0 1-1.647-1.19l-13.667-18.98a2.475 2.475 0 0 1-.01-3.14Zm1.92 1.57 14.862 17.99 21.165 8.21 9.021-9.1-26.705-4.45-13.545-18.54-4.798 5.89Z" clip-rule="evenodd"/><path fill="',colors[1].toColor()));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.936" d="m235.001 2129.07 132.187-98.65 189.846 191.5-132.187 98.65-189.846-191.5Z"/><path fill="',colors[2].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.866" d="M794.961 2082.48c-41.712 132.64-181.352 213.01-311.895 179.5-130.542-33.51-202.554-168.2-160.841-300.85 41.712-132.64 181.352-213.01 311.894-179.5 130.543 33.51 202.554 168.2 160.842 300.85Z"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M356.596 1892.54c11.444 147.5 79.26 266.46 186.488 368.96 26.941 4.33 47.312-1.16 88.471-14.1-55.949-65.56-98.441-133.93-122.545-206.14l273.566 64.05c16.609-32.69 24.211-68.71 17.434-110.05-88.106-18.55-180.289-28.33-282.562-16.4 30.347-70.15 64.186-137.76 122.763-187.3-28.928-9.02-56.8-17.72-88.746-9.87-31.074 42.96-46.751 94.73-56.56 149.84-37.728-21.4-60.292-56.45-71.483-101.73-39.132 26.43-44.72 28.88-66.826 62.74Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M353.537 1890.54c9.147-14.18 15.532-22.96 22.566-30.28 10.1-10.51 21.583-18 44.911-34.03a4.307 4.307 0 0 1 3.953-.45 4.295 4.295 0 0 1 2.631 2.98c5.469 21.53 13.552 40.66 24.702 57 10.234 15 23.071 27.63 38.848 37.58 4.526-24.85 10.339-48.97 18.295-71.89 9.119-26.27 21.066-50.95 37.061-73','.35a6.105 6.105 0 0 1 3.499-2.35c13.201-3.33 25.757-3.96 37.987-2.94 18.435 1.54 36.116 6.91 54.189 12.43a6.625 6.625 0 0 1 4.516 5.01 6.612 6.612 0 0 1-2.212 6.36c-22.928 19.59-41.919 42.02-58.374 66.28-22.404 33.04-40.094 69.49-56.426 106.92 45.149-4.65 88.382-5.16 130.211-2.57 48.925 3.04 95.918 10.33 141.819 19.93a8.28 8.28 0 0 1 6.453 6.75c3.409 20.93 3.293 40.54.305 59.09-3.188 19.79-9.642 38.36-18.624 55.99a8.153 8.153 0 0 1-9.13 4.25l-260.342-61.71c11.718 32.41 27.175 64.04 45.882 95.02 19.896 32.94 43.455 65.14 70.147 96.7a6.381 6.381 0 0 1 1.278 5.9 6.364 6.364 0 0 1-4.215 4.32c-22.435 6.94-38.807 11.7-53.373 13.96-13.093 2.03-24.78 2.09-37.949-.09a5.92 5.92 0 0 1-3.153-1.57c-53.565-51.72-97.269-107.51-128.957-168.86-31.955-61.88-51.708-129.4-57.082-204.1-.062-.8.143-1.6.584-2.28','Zm3.059 2c11.444 147.5 79.26 266.46 186.488 368.96 26.941 4.33 47.312-1.16 88.471-14.1-55.949-65.56-98.441-133.93-122.545-206.14l273.566 64.05c16.609-32.69 24.211-68.71 17.434-110.05-88.106-18.55-180.289-28.33-282.562-16.4 30.347-70.15 64.186-137.76 122.763-187.3-28.928-9.02-56.8-17.72-88.746-9.87-31.074 42.96-46.751 94.73-56.56 149.84-37.728-21.4-60.292-56.45-71.483-101.73-39.132 26.43-44.72 28.88-66.826 62.74Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="M475.297 1794.08c-119.745 195.21-41.705 406.16 159.099 454.4-60.325 20.82-114.279 25.31-162.684 15.56l-60.874 44.19c-15.046-34.03-196.01 94.27-315.04 163.92-53.5 31.31 3.483 53.07-30.612 71.49l-59.612-43.66 9.102-19.83-8.904-15.33 75.574-75.5 28.302-4.53 37.349-12.08 146.031-180.13-53.311-62.63 73.67-5','6.19c-11.863-134.33 55.205-219.38 161.91-279.68Z" clip-rule="evenodd"/><path fill="#fff" d="M701.097 1935.61c-5.909 18.79-27.623 29.68-48.5 24.32-20.877-5.36-33.011-24.94-27.102-43.73 5.909-18.79 27.623-29.68 48.5-24.32 20.877 5.36 33.011 24.94 27.102 43.73Zm27.897 65.44c-3.244 10.31-15.196 16.28-26.695 13.33-11.499-2.95-18.192-13.71-14.948-24.02 3.244-10.32 15.195-16.29 26.695-13.34 11.499 2.96 18.191 13.71 14.948 24.03Z"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h2160v2700H0z"/></clipPath></defs>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn6(colors),renderFn7(colors),renderFn8(colors),renderFn9(colors)));
      
        return render;
      }
}