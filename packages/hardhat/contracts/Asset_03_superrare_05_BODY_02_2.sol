//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_03_superrare_05_BODY_02_2 {

using ToColor for bytes4;

function renderFn13(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M106.706 1580.47c9.356 0 16.94-7.32 16.94-16.35 0-9.03-7.584-16.35-16.94-16.35-9.356 0-16.94 7.32-16.94 16.35 0 9.03 7.584 16.35 16.94 16.35Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M106.705 1546.28c1.611.01 7.269-.01 12.633 4.65 9.449 8.21 7.723 23.58-4.078 29.46-12.127 6.05-26.646-2.22-27.234-15.34-.205-4.56 1.353-8.95 4.36-12.4 5.97-6.84 14.201-6.36 14.319-6.37Zm0 1.49c-9.35 0-16.94 7.32-16.94 16.35 0 9.03 7.59 16.35 16.94 16.35 9.349 0 16.94-7.32 16.94-16.35 0-9.03-7.591-16.35-16.94-16.35Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M76.17 1498.54c14.922 0 27.018-12.76 27.018-28.52 0-15.75-12.096-28.51-27.018-28.51-14.921 0-27.018 12.76-27.018 28.51 0 15.76 12.097 28.52 27.018 28.52Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M76.17 1440.02c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.46 7.65-35.473-2.41-39.61-20.69-4.272-18.88 9.24-36.84 27.257-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.91 0-27.017 12.77-27.017 28.51 0 15.75 12.106 28.52 27.017 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function renderFn14(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M76.257 1486.3c9.355 0 16.94-7.33 16.94-16.36s-7.585-16.35-16.94-16.35c-9.356 0-16.94 7.32-16.94 16.35 0 9.03 7.584 16.36 16.94 16.36Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M76.255 1452.1c1.612.02 7.27 0 12.634 4.66 9.45 8.21 7.723 23.57-4.078 29.46-12.128 6.05-26.646-2.22-27.235-15.34-.205-4.57 1.354-8.96 4.36-12.4 5.97-6.85 14.202-6.37 14.32-6.38Zm0 1.5c-9.349 0-16.94 7.32-16.94 16.34 0 9.04 7.591 16.36 16.94 16.36 9.35 0 16.94-7.32 16.94-16.36 0-9.02-7.59-16.34-16.94-16.34Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M122.295 1784.43c14.922 0 27.018-12.77 27.018-28.52s-12.096-28.52-27.018-28.52c-14.921 0-27.018 12.77-27.018 28.52s12.097 28.52 27.018 28.52Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M122.295 1725.91c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.461 7.65-35.473-2.41-39.61-20.69-4.272-18.88 9.24-36.84 27.257-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.911 0-27.017 12.77-27.017 28.51 0 15.75 12.106 28.52 27.017 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function renderFn15(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M122.382 1772.18c9.355 0 16.94-7.32 16.94-16.35 0-9.03-7.585-16.35-16.94-16.35-9.356 0-16.941 7.32-16.941 16.35 0 9.03 7.585 16.35 16.941 16.35Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M122.38 1737.99c1.612.01 7.27 0 12.634 4.65 9.449 8.21 7.723 23.58-4.078 29.46-12.128 6.05-26.646-2.21-27.234-15.33-.205-4.57 1.353-8.96 4.359-12.41 5.97-6.84 14.202-6.36 14.319-6.37Zm0 1.49c-9.349 0-16.939 7.33-16.939 16.35 0 9.03 7.59 16.35 16.939 16.35 9.35 0 16.941-7.32 16.941-16.35 0-9.02-7.591-16.35-16.941-16.35Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M126.924 1889.97c14.922 0 27.018-12.77 27.018-28.52s-12.096-28.52-27.018-28.52c-14.921 0-27.018 12.77-27.018 28.52s12.097 28.52 27.018 28.52Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M126.924 1831.45c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.461 7.65-35.473-2.41-39.61-20.69-4.272-18.88 9.24-36.84 27.257-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.911 0-27.017 12.77-27.017 28.51 0 15.75 12.106 28.52 27.017 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function renderFn16(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M127.01 1877.72c9.356 0 16.941-7.32 16.941-16.35 0-9.03-7.585-16.35-16.941-16.35-9.355 0-16.94 7.32-16.94 16.35 0 9.03 7.585 16.35 16.94 16.35Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M127.009 1843.53c1.612.01 7.27 0 12.634 4.65 9.449 8.21 7.723 23.58-4.078 29.47-12.128 6.04-26.646-2.22-27.235-15.34-.205-4.57 1.354-8.96 4.36-12.41 5.97-6.84 14.202-6.36 14.319-6.37Zm0 1.49c-9.349 0-16.939 7.33-16.939 16.35 0 9.03 7.59 16.36 16.939 16.36 9.35 0 16.94-7.33 16.94-16.36 0-9.02-7.59-16.35-16.94-16.35Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M134.069 1982.86c14.921 0 27.018-12.77 27.018-28.52s-12.097-28.52-27.018-28.52c-14.922 0-27.018 12.77-27.018 28.52s12.096 28.52 27.018 28.52Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M134.069 1924.34c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.461 7.65-35.473-2.41-39.61-20.69-4.272-18.88 9.24-36.84 27.257-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.911 0-27.017 12.77-27.017 28.51 0 15.75 12.106 28.52 27.017 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function renderFn17(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M134.155 1970.61c9.356 0 16.94-7.32 16.94-16.35 0-9.03-7.584-16.35-16.94-16.35-9.356 0-16.94 7.32-16.94 16.35 0 9.03 7.584 16.35 16.94 16.35Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M134.154 1936.42c1.611.01 7.269 0 12.633 4.65 9.45 8.21 7.723 23.58-4.078 29.46-12.127 6.05-26.646-2.22-27.234-15.33-.205-4.57 1.354-8.96 4.359-12.41 5.971-6.84 14.203-6.36 14.32-6.37Zm0 1.49c-9.349 0-16.94 7.32-16.94 16.35 0 9.03 7.591 16.35 16.94 16.35 9.35 0 16.94-7.32 16.94-16.35 0-9.03-7.59-16.35-16.94-16.35Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M196.514 2177.48c14.922 0 27.018-12.77 27.018-28.52s-12.096-28.52-27.018-28.52-27.018 12.77-27.018 28.52 12.096 28.52 27.018 28.52Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M196.514 2118.96c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.461 7.65-35.473-2.41-39.61-20.69-4.272-18.88 9.24-36.84 27.257-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.911 0-27.017 12.77-27.017 28.51 0 15.75 12.106 28.52 27.017 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function renderFn18(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M196.6 2165.23c9.356 0 16.94-7.32 16.94-16.36 0-9.03-7.584-16.35-16.94-16.35-9.355 0-16.94 7.32-16.94 16.35 0 9.04 7.585 16.36 16.94 16.36Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M196.599 2131.04c1.611.01 7.269-.01 12.633 4.65 9.45 8.21 7.724 23.58-4.078 29.46-12.127 6.05-26.646-2.22-27.234-15.34-.205-4.56 1.354-8.96 4.36-12.4 5.97-6.84 14.202-6.37 14.319-6.37Zm0 1.49c-9.349 0-16.939 7.32-16.939 16.35 0 9.03 7.59 16.35 16.939 16.35 9.35 0 16.94-7.32 16.94-16.35 0-9.03-7.59-16.35-16.94-16.35Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M243.073 2250.79c14.921 0 27.018-12.77 27.018-28.52s-12.097-28.52-27.018-28.52c-14.922 0-27.018 12.77-27.018 28.52s12.096 28.52 27.018 28.52Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M243.072 2192.27c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.46 7.65-35.472-2.41-39.609-20.69-4.272-18.88 9.239-36.84 27.256-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.91 0-27.016 12.77-27.016 28.51 0 15.75 12.106 28.52 27.016 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function renderFn19(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M243.159 2238.54c9.356 0 16.94-7.32 16.94-16.35 0-9.03-7.584-16.35-16.94-16.35-9.356 0-16.94 7.32-16.94 16.35 0 9.03 7.584 16.35 16.94 16.35Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M243.158 2204.35c1.611.01 7.269 0 12.633 4.65 9.449 8.21 7.723 23.58-4.078 29.46-12.127 6.05-26.646-2.22-27.234-15.34-.205-4.56 1.354-8.95 4.359-12.4 5.971-6.84 14.202-6.36 14.32-6.37Zm0 1.49c-9.349 0-16.94 7.32-16.94 16.35 0 9.03 7.591 16.35 16.94 16.35s16.94-7.32 16.94-16.35c0-9.03-7.591-16.35-16.94-16.35Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M294.1 2323.36c14.922 0 27.018-12.76 27.018-28.51 0-15.76-12.096-28.52-27.018-28.52s-27.018 12.76-27.018 28.52c0 15.75 12.096 28.51 27.018 28.51Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M294.1 2264.84c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.461 7.65-35.473-2.41-39.61-20.69-4.272-18.88 9.24-36.84 27.257-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.911 0-27.017 12.77-27.017 28.51 0 15.75 12.106 28.52 27.017 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function renderFn20(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M294.186 2311.12c9.356 0 16.94-7.32 16.94-16.36 0-9.03-7.584-16.35-16.94-16.35-9.356 0-16.94 7.32-16.94 16.35 0 9.04 7.584 16.36 16.94 16.36Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M294.185 2276.93c1.611.01 7.269-.01 12.633 4.65 9.45 8.21 7.724 23.57-4.078 29.46-12.127 6.05-26.646-2.22-27.234-15.34-.205-4.57 1.354-8.96 4.36-12.4 5.97-6.85 14.202-6.37 14.319-6.37Zm0 1.49c-9.349 0-16.939 7.32-16.939 16.34 0 9.04 7.59 16.36 16.939 16.36 9.35 0 16.94-7.32 16.94-16.36 0-9.02-7.59-16.34-16.94-16.34Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M372.127 2380.38c14.922 0 27.018-12.76 27.018-28.52 0-15.75-12.096-28.51-27.018-28.51-14.921 0-27.018 12.76-27.018 28.51 0 15.76 12.097 28.52 27.018 28.52Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M372.127 2321.86c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.461 7.65-35.473-2.41-39.61-20.69-4.272-18.88 9.24-36.84 27.257-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.911 0-27.017 12.77-27.017 28.51 0 15.75 12.106 28.52 27.017 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function renderFn21(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M372.214 2368.14c9.355 0 16.94-7.33 16.94-16.36s-7.585-16.35-16.94-16.35c-9.356 0-16.941 7.32-16.941 16.35 0 9.03 7.585 16.36 16.941 16.36Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M372.212 2333.94c1.612.02 7.27 0 12.634 4.66 9.449 8.21 7.723 23.57-4.078 29.46-12.128 6.05-26.646-2.22-27.234-15.34-.205-4.57 1.353-8.96 4.359-12.4 5.97-6.85 14.202-6.37 14.319-6.38Zm0 1.5c-9.349 0-16.939 7.32-16.939 16.34 0 9.04 7.59 16.36 16.939 16.36 9.35 0 16.941-7.32 16.941-16.36 0-9.02-7.591-16.34-16.941-16.34Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" d="M463.627 2416.28c14.922 0 27.018-12.77 27.018-28.52s-12.096-28.52-27.018-28.52c-14.921 0-27.018 12.77-27.018 28.52s12.097 28.52 27.018 28.52Z"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M463.627 2357.76c.071 0 12.69-.81 21.932 10.57 12.502 15.39 7.292 39.13-10.315 47.31-16.461 7.65-35.473-2.41-39.61-20.69-4.272-18.88 9.24-36.84 27.257-37.18.245-.01.491-.01.736-.01Zm0 1.49c-14.911 0-27.017 12.77-27.017 28.51 0 15.75 12.106 28.52 27.017 28.52 14.912 0 27.018-12.77 27.018-28.52 0-15.74-12.106-28.51-27.018-28.51Z" clip-rule="evenodd"/><path fill="',colors[10].toColor()));
      
        return render;
      }

    function nested0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn13(colors),renderFn14(colors),renderFn15(colors),renderFn16(colors),renderFn17(colors),renderFn18(colors),renderFn19(colors),renderFn20(colors)));
      
        return render;
      }

    function nested1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn21(colors)));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(nested0(colors),nested1(colors)));
      
        return render;
      }
}