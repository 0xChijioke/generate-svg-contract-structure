//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_05_BODY_fewocious_1 {

using ToColor for bytes4;

function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[4].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.579" d="m232.868 1475.74 86.819-64.89 90.642-12.22-70.709 60.66-67.423 62.68 47.295 39.92 93.705-32.9 108.279 5.58-98.915 33.27-29.679 57.01-69.44-59.02-90.574-90.09Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="m391.341 1725.08 80.523-11.72 93.628 27.08-112.117 21.51-98.391 11.9-19.21 66.26 132.742 10.23 96.419 49.18-117.412-12.92-96.636 44.21c-17.906-25.27-19.142-50.25-15.727-88.58l19.824-68.38 36.357-48.77Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m354.984 1773.85 98.391-11.9 112.117-21.51-93.628-27.08-80.523 11.72-36.357 48.77Zm0 0-19.21 66.26 132.742 10.23 96.419 49.18-117.412-12.92-96.636 44.21c-17.906-25.27-19.142-50.25-15.727-88.58l19.824-68.38Z"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="',colors[5].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1748.03 1971.59-49.42-44.27-124.81 15.39-54.45 125.1 77.28-101.86 91.19 10.92 47.16 58.19 41 65.06-134 74.21 134.16 19.88-105.28 74.06-89.99 16.38-.65 117.77-169.65 14.7 183.68 14.64 31.93-109.23 41.49-7.32L1779.03 2191l5.55-89.45-62.38-102.64 25.83-27.32Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1799.29 1849.81c40.21-87.2-106.92-191.19-106.92-191.19s67.1 46 88.33 77.15c21.24 31.14 49.71 72.36 39.09 109.7-12.42 43.65-104.65 103.19-113.57 152.16-8.92 48.97 63.65 104.09 60.04 141.64-3.61 37.55-61.94 50.04-81.67 83.65-23.42 39.87-58.83 155.6-58.83 155.6s22.28-115.58 40.59-156.85c16.02-36.11 75.78-52.87 78.68-92.28 2.93-39.76-76.85-69.9-66.24-116.75 10.61-46.85 102.81-124.49 12'));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('0.5-162.83Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="',colors[5].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="M646.732 846.12 514.51 1004.29l-155.537 269.93 165.92-235.8 183.588-197.74 84.856-7.476-243.162 230.066-94.631 227.37 112.379-207.65 308.669-257.119-229.86 20.249Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="',colors[5].toColor()));
      
        return render;
      }

    function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.543" d="m355.549 778.011 140.521-2.992 111.65 71.1-83.557-28.421-40.288 39.284-3.436-55.455-51.961-1.741-9.568 75.67-51.282-77.341-34.068 33.691 33.877 103.31-63.786-73.002-11.071 52.19 34.418 100.506-51.037-51.03-10.241 50.64 27.027 68.26-53.21-18.57 24.126-115.367 35.333-108.03 56.553-62.702Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m494.232 783.199 71.551 63.388-15.971 7.568-55.58-70.956Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.543" d="m1718.76 736.822 59.92 43.766 48.83 160.012-74.87-130.65-55.78-38.564-41.01 31.702 80.55 44.11 28.98 96.398-40.64-68.11-80.67-38.619-64.83-8.43 139.52-91.615Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m604.32 850.688-8.027 21.419 293.047-27.433-285.02 6.014Z" clip-rule="evenodd"/><path fill="gray" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="12.002" d="M1081.47 844.879c306.01 0 541.3 276.421 541.3 623.731 0 217.04-7.92 393.6-154.79 556.76-88.16 97.93-387.24 112.97-387.24 112.97s-269.732-24.44-344.29-92.6c-168.792-154.33-198.319-330.29-198.319-571.19 0-347.3 237.335-629.671 543.339-629.671Zm-.','97 31.897c-289.577 0-522.64 267.774-522.64 596.434 0 328.67 234.033 596.44 523.61 596.44 165.91 0 313.58-87.9 409.46-224.78 71.46-102.04 107-231.89 107-372.25 0-328.67-227.85-595.844-517.43-595.844Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1132.81 856.861c43.29 10.33 86.1 21.101 125.55 37.254 41.44 16.973 79.36 39.593 118.29 61.334 0 0-76.77-55.133-117.91-71.121-40.89-15.893-125.93-27.467-125.93-27.467Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M596.909 2062.18c-128.44-191.44-109.713 103.22-109.713 103.22 12.787 79.05 134.694 171.87 215.647 235.61 12.324 9.71 145.005-33.65 145.005-33.65s-86.052 76.11-75.428 82.74c9.289 5.79 18.3 11.09 26.912 15.84 9.469 5.22 26.844 40.18 58.66 58.65 20.539 11.93 60.314 3.75 63.563 20.63 1.857 9.','64 109.705 45.46 167.555 78.56 33.33 19.07-15.18 42.9-19.18 48.43-22 30.41-223.076-25.83-226.298-36.12 0 0-138.436-72.98-207.281-129.49-41.426-34-26.158-113.32-59.755-137.62-49.663-35.92-35.156 7.8-59.568-24.14-5.939-16.2-202.988-112.36-220.516-134.35-34.688-43.51 107.664-132.18 103.654-149.96-5.392-23.91-121.007-89.6-146.944-150.14-9.527-22.24 95.674-150.73 96.433-165.62.998-19.59 107.792-48.5 108.832-68.51l-257.551-218.34-13.045-96.44c8.489-40.23 79.047-442.148 79.047-442.148s-.405 396.598 33.588 450.998c23.395 37.44 102.548 89.9 134.726 143.22 13.755 22.8 29.035 55.78 34.748 55.4 5.714-.36-.989-38.88-.467-57.61 7.63-273.69 157.113-447.03 323.406-578.959l-1.749 47.679c-162.892 110.29-228.364 305.78-224.291 562.09 22.442 151.24 82.372 276.8 173.097 369.92 54.243 55.67 119.283 95.92 194.49','1 133.75 0 0-70.383-19.03-90.118-2.64-10.389 8.63 22.214 42.73 23.666 60.62 3.297 40.65 161.055 176.03 152.875 182.84-7.43 6.17-199.564-127.02-253.37-168.18-72.798-55.69-153.388-30.58-170.631-56.28Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8" d="M603.113 833.545c-12.637 20.036-51.996 48.063-90.362 105.055-84.019 124.81-190.145 311.26-190.145 311.26s-104.984 47.1-129.624 146.7"/><path stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7" d="m322.607 1249.86 211.723 417.79 7.912 311.17-105.433 64.27"/><path stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7" d="m542.242 1978.82 193.844 132.71 54.704-13.2c79.3','37 59.26 162.768 97.06 248.28 123.97"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8" d="M1563.99 833.545c12.64 20.036 52 48.063 90.36 105.055 84.02 124.81 190.15 311.26 190.15 311.26s104.98 47.1 129.62 146.7"/><path stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7" d="m1844.5 1249.86-211.72 417.79-7.92 311.17 105.44 64.27m-105.44-64.27-193.84 132.71-54.7-13.2c-79.34 59.26-162.77 97.06-248.28 123.97"/><path fill="#fff" fill-rule="evenodd" d="M1570.28 1759.38c-3.42 33.88-69.03 182.59-164.64 261.76-20.04 16.6-185.45 81.54-241.95 73.06-26.48-3.97 62.87-15.72 127.24-47.59 122.11-60.45 230.18-180.02 279.35-287.23Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="square" str','oke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.999" d="m843.814 2304.01 139.267 28.65-48.67-99.13 110.749 55.32-6.42-63.54m277.92 67.66-131.21 41.61 48.67-99.13-110.74 55.32 4.79-66.28"/><path stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.982" d="m936.247 2389.03 45.964 18.22-47.082-91.69 110.341 42.93-28.37-79.62m214.99 111.51-43.64 19.01 55.35-90.37-118.62 41.61 31.11-83.57"/><path stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.929" d="m826.402 2441.17 157.256 29.24-49.599-84.92 118.271 51.91-37.58-87.9m352.09 88.94-176.94 33.62 49.6-84.93-112.87 47.4 32.01-83.72"/><path fill="'));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[4].toColor(),'" fill-rule="evenodd" stroke="',colors[6].toColor(),'" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.937" d="m1099.11 2625.26-147.199-56.02 8.823-22.46-15.064-19.89-33.108 9.28-91.476-99.78s38.766 34.51 110.695 45.54c37.427 5.74 134.299 75.57 165.839 79.57 29.15 3.69 132.02-77.99 178.21-84.37 50.95-7.05 97.03-43.29 97.03-43.29l-91.48 99.78-33.11-9.29-15.06 19.89 8.82 22.47-142.92 58.57Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m842.537 2455.5 106.815 31.72 121.478 65.45s-11.97 1.99-16.49 14.99c-4.52 13 33.1 43.98 33.1 43.98l19.13 12.19 135.21-59.17 13.96 3.61 96 87.96-66.83-2.13-51.22-82.43-127.12 52.16-152.649-53.6-111.384-114.73Z" clip-rule="evenodd"/><path fill="',colors[7].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="M1256.98 2525.74c-8.4 1.52-15.55 2.96-16.6 19.36-.51 8.03 79.11 104.01 89.51 110.57 8.38 5.28 25.11 8 29.67 1.04 4.57-6.97 12.19-19.94 6.78-27.79-6.94-10.05-100.74-104.73-109.36-103.18Zm-317.291 1.93c8.4 1.52 15.55 2.96 16.6 19.36.51 8.03-79.11 104-89.51 110.56-8.38 5.28-25.11 8.01-29.67 1.05-4.57-6.97-12.19-19.94-6.78-27.79 6.94-10.05 100.74-104.73 109.36-103.18Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M933.811 2543.1c-7.332 6.15-33.936 45.55-33.936 45.55s42.308-34.52 47.396-41.36c2.802-3.78-9.861-7.21-13.46-4.19Zm327.209-2.14 79.42 75.47s-51.34-40.35-65.14-52.49c-6.77-5.96-14.28-22.98-14.28-22.98Z" clip-rule="evenodd"/><path fill="',colors[8].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="21.047" d="M697.028 2147.42c45.5 12.23 116.806 72.57 107.329 108.62-12.943 49.32-70.61 62.61-116.147 50.37-45.499-12.24-73.003-48.69-62.72-98.67 10.274-49.94 26.001-72.57 71.538-60.32Z" clip-rule="evenodd"/><path fill="#000" d="M715.413 2300.1c8.467 0 15.33-28.72 15.33-64.15 0-35.43-6.863-64.15-15.33-64.15-8.466 0-15.329 28.72-15.329 64.15 0 35.43 6.863 64.15 15.329 64.15Z"/><path fill="#fff" fill-opacity=".8" d="M739.993 2266.57c12.71 3.42 25.619-6.48 28.834-22.1 3.215-15.63-4.482-31.07-17.192-34.49-12.71-3.41-25.62 6.48-28.835 22.11-3.215 15.63 4.483 31.06 17.193 34.48Z"/><path fill="'));
      
        return render;
      }

    function renderFn10(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[4].toColor(),'" fill-rule="evenodd" stroke="',colors[5].toColor(),'" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="10.016" d="m1347.62 2334.5-28.86-49.02 10.32-53.02c57.37-57.26 162.21-160.3 227.66-127.93l61.33 22.45s-43.34 123.25-83.08 133.08c-25.76 39.04-64.15 79.06-170.53 53.86l9.08 58.37-25.92-37.79Z" clip-rule="evenodd"/><path fill="',colors[8].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="21.047" d="M1459.27 2147.42c-45.5 12.23-116.81 72.57-107.33 108.62 12.94 49.32 70.61 62.61 116.15 50.37 45.5-12.24 71.54-69.03 61.26-118.96-10.27-49.94-24.54-52.28-70.08-40.03Z" clip-rule="evenodd"/><path fill="#000" d="M1432.52 2301.41c8.31 0 15.05-28.42 15.05-63.47s-6.74-63.47-15.05-63.47-15.05 28.42-15.05 63.47 6.74 63.47 15.05 63.47Z"/><path fill="#fff" fill-opacity=".8" d="M1464.59 2246.31c-12.71 3.41-25.62-6.48-28.84-22.11-3.21-15.63 4.48-31.06 17.19-34.48 12.71-3.42 25.62 6.48 28.84 22.1 3.21 15.63-4.48 31.07-17.19 34.49Z"/><path fill="#fff" fill-rule="evenodd" d="M1356.8 1021.61s168.42 205.95 167.9 337.63c-.9 228.59-108.74 465.15-108.74 465.15 109.69-302.53 61.79','-579.81-59.16-802.78Z" clip-rule="evenodd"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h2160v2700H0z"/></clipPath></defs>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn6(colors),renderFn7(colors),renderFn8(colors),renderFn9(colors),renderFn10(colors)));
      
        return render;
      }
}