//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_05_BODY_beefeater_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<g clip-path="url(#a)"><path fill="',colors[0].toColor(),'" fill-opacity=".4" fill-rule="evenodd" d="M457.887 972.38S629.16 641.29 692.54 568.281c32.676-37.639 115.976-11.847 145.629-33.95 27.746-20.68 37.932-64.522 32.293-98.664-5.652-34.218-97.158-78.496-66.202-106.646 34.682-31.536 204.56-44.994 274.29-82.574 59.56-32.094 119.29-96.562 144.1-142.908 21.28-39.745-27.45-105.775 4.79-135.167 32.24-29.39 188.66-41.18 188.66-41.18s-11.04 119.448-24.22 159.28c-10.12 30.618-44.8 53.048-54.83 79.711-9.43 25.098-17.36 67.052-5.31 80.264 12.04 13.212 58.31 16.258 77.58-.993 24.26-21.719 55.89-82.15 67.99-129.326 12.64-49.316 7.88-166.567 7.88-166.567l253.83-17.819s-356.44 406.74-432.25 510.772c-22.7 31.156-26.09 90.641-22.61 113.421 2.49 16.26 33.68 36.443 43.52 23.263 15.11-20.239 12.44-107.699 47.15-144.694 53.04-56.528 234.79-127.407 317.48-191.073 7','7.37-59.574 124.9-133.668 178.64-190.925 41.95-44.698 97.36-156.02 97.36-156.02l254.98 46.13s-184.04 185.124-223.57 238.352c-16.32 21.984.35 57.433-13.56 81.016-16.79 28.453-51.73 67.724-87.16 89.705-49.41 30.662-160.71 46.407-209.34 94.27-48.62 47.862-86.29 144.577-82.41 192.904 3.82 47.674 88.28 56.042 105.66 97.063 17.38 41.02-1.4 149.059-1.4 149.059l-7.57 78.237-36.21 77.418-316.91-68.359-89.35-157.764s50.74-95.76 43.39-103.609c-7.35-7.849-77.7 30.69-87.49 56.517-9.8 25.826 8 98.777 8 98.777l-394.615 27.445s-11.088-89.478-1.233-131.227c9.855-41.748 66.986-103.569 60.361-119.261-6.625-15.693-81.346 13.767-100.11 25.105-12.753 7.706-13.893 28.092-12.475 42.925 3.102 32.455 31.088 151.81 31.088 151.81L457.887 972.38Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-opacity=".75" fill-rule="evenodd" d="M1315.28 564.278c.82-2.388 1.49-5.307 2.28-8.559 3-12.501 5.39-28.868 8.67-45.971 6.21-32.447 16.07-66.877 35.47-87.558 22.14-23.592 65.53-49.923 115.43-76.866 70.87-38.264 155.19-78.419 204.19-116.154 76.52-58.917 123.36-132.356 176.5-188.981 40.76-43.428 94.37-151.722 94.37-151.722a18 18 0 0 1 19.32-9.692l254.99 46.128a17.985 17.985 0 0 1 13.96 12.313c2.01 6.38.31 13.347-4.4 18.09 0 0-182.68 183.587-221.89 236.394-2.87 3.868-3.61 8.57-4.01 13.459-.63 7.791-.03 16.076.08 24.215.2 15.024-1.38 29.549-8.58 41.757-17.94 30.41-55.31 72.362-93.17 95.854-25.59 15.879-67.1 28.172-108.62 42.415-37.36 12.82-74.92 27.079-97.58 49.387-45.1 44.393-80.7 133.814-77.1 178.639.58 7.275 4.66 12.814 10 17.777 7.74 7.209 17.99 13.102 28.52 18.946 15.2 8.419 30.96 1','6.637 43.19 26.487 10.12 8.14 17.99 17.442 22.58 28.269 5.93 13.998 8.57 34.794 8.78 57.136.42 44.209-7.82 94.819-8.91 101.319l-7.5 77.597c-.2 2.041-.75 4.034-1.62 5.892l-36.19 77.421a18.016 18.016 0 0 1-20.11 9.97l-316.91-68.363a18.003 18.003 0 0 1-11.87-8.725l-89.35-157.763a18.015 18.015 0 0 1-.24-17.299l30.08-66.387c-3.4 1.795-6.75 3.701-9.78 5.652-9.39 6.052-18.51 12.942-25.11 19.756-2.98 3.077-5.5 5.908-6.56 8.697-3.19 8.435-1.99 23.044-.35 37.518 2.88 25.461 9.02 50.61 9.02 50.61a17.996 17.996 0 0 1-16.24 22.224l-394.616 27.444c-9.542.664-17.936-6.251-19.112-15.743 0 0-.681-5.692-1.553-14.927L463.25 989.564a18.002 18.002 0 0 1-21.35-25.454s173.09-333.955 237.048-407.628c19.341-22.279 53.023-27.783 86.899-28.99 13.892-.495 27.693-.49 39.82-1.731 8.774-.898 16.537-1.98 21.745-5.862 22.','755-16.961 29.915-53.298 25.291-81.299-1.117-6.757-8.018-13.342-15.404-20.807-16.514-16.691-37.913-34.104-48.411-49.767-7.166-10.693-10.033-21.25-8.657-30.788 1.083-7.508 4.575-14.854 11.92-21.533 15.173-13.798 53.563-25.681 99.583-36.105 61.495-13.93 137.516-27.026 178.276-48.998 56.51-30.452 113.23-91.582 136.77-135.558 4.66-8.703 3.94-19.205 2.38-30.121-2.12-14.79-6.46-30.236-8.94-44.664-4.51-26.17-2.25-49.373 15.1-65.188 11.13-10.154 34.78-19.38 62.93-26.067 58.25-13.833 136.49-19.76 136.49-19.76a17.99 17.99 0 0 1 14.19 5.328 17.975 17.975 0 0 1 5.09 14.277s-11.54 122.436-25.05 163.276c-5.79 17.512-18.2 32.945-31 47.55-9.67 11.029-19.74 21.328-24.07 32.844-5.06 13.452-9.7 32.309-10.22 47.805-.12 3.482-.03 6.764.39 9.701.25 1.73.11 3.359.97 4.296 2.73 3.002 9.02 3.789 15.75 4.575 12.73 '));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('1.487 28.24.564 36.53-6.852 22.52-20.168 51.32-76.58 62.55-120.386 12.25-47.772 7.33-161.366 7.33-161.366-.39-9.726 7.02-18.004 16.73-18.686l253.82-17.819a18.011 18.011 0 0 1 17.39 9.954 18.001 18.001 0 0 1-2.59 19.865s-355.6 405.729-431.23 509.509c-20.02 27.466-22.44 80.016-19.37 100.098.43 2.805 3.75 5.153 6.75 7.47 1.76 1.353 4.5 2.684 6.58 3.595ZM457.887 972.381 808.386 863S780.4 743.645 777.298 711.19c-1.418-14.833-.278-35.219 12.475-42.925 18.764-11.338 93.485-40.798 100.11-25.105 6.625 15.692-50.506 77.513-60.361 119.261-9.855 41.749 1.233 131.227 1.233 131.227l394.615-27.445s-17.8-72.951-8-98.777c9.79-25.827 80.14-64.366 87.49-56.517 7.35 7.849-43.39 103.609-43.39 103.609l89.35 157.764 316.9 68.358 36.21-77.417 7.58-78.237s18.77-108.039 1.4-149.059c-17.38-41.021-101.84-49.389-105.6','6-97.063-3.88-48.328 33.79-145.043 82.41-192.905 48.62-47.862 159.93-63.607 209.34-94.269 35.43-21.981 70.37-61.252 87.16-89.705 13.91-23.583-2.76-59.032 13.56-81.016 39.53-53.228 223.57-238.353 223.57-238.353l-254.98-46.129s-55.41 111.322-97.36 156.02c-53.74 57.257-101.28 131.351-178.64 190.925-82.69 63.666-264.44 134.545-317.48 191.073-34.71 36.994-32.04 124.454-47.15 144.693-9.84 13.18-41.03-7.003-43.52-23.263-3.48-22.78-.09-82.265 22.61-113.421 75.81-104.031 432.24-510.77 432.24-510.77l-253.82 17.818s4.76 117.251-7.88 166.567c-12.1 47.176-43.73 107.607-67.99 129.326-19.27 17.251-65.54 14.205-77.58.993-12.05-13.212-4.12-55.166 5.31-80.264 10.03-26.663 44.71-49.093 54.83-79.711 13.18-39.832 24.22-159.28 24.22-159.28s-156.42 11.79-188.66 41.18c-32.24 29.392 16.49 95.422-4.79 135.167-24.81',' 46.346-84.54 110.814-144.1 142.908-69.73 37.58-239.608 51.038-274.29 82.574-30.956 28.15 60.55 72.428 66.202 106.645 5.639 34.142-4.547 77.984-32.293 98.664-29.653 22.103-112.953-3.689-145.629 33.951-63.38 73.009-234.653 404.099-234.653 404.099Zm350.73-190.505c.688-8.717 1.775-16.762 3.386-23.59 6.287-26.633 30.15-61.229 47.128-88.025 2.382-3.758 4.76-7.986 6.833-11.869-.389.078-.772.159-1.146.244-23.314 5.275-54.809 18.432-65.736 25.035-2.277 1.376-2.655 4.342-3.263 7.168-1.314 6.11-1.15 12.912-.603 18.638 1.312 13.72 7.157 43.212 13.401 72.399Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="M684.544 805.986c63.597 0 120.87 27.268 160.73 70.729 35.538 38.748-346.135 296.485-371.183 203.835-4.899-18.12-7.513-37.16-7.513-56.82 0-120.179 97.667-217.744 217.966-217.744Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="M691.813 853.811c49.954 0 96.007 16.824 132.783 45.103 25.354 19.497-51.554 89.075-124.531 168.026-76.081 82.31-149.319 173.26-169.678 150.85-35.125-38.66-56.539-89.97-56.539-146.24 0-120.175 97.667-217.739 217.965-217.739Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="M1418.12 792.893c120.3 0 217.97 97.564 217.97 217.737 0 120.17-418.84-96.599-390.14-133.478 39.9-51.257 102.21-84.259 172.17-84.259Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" fill-rule="evenodd" d="M1474.92 808.358c.5 1.323-.93 6.159 2.73 11.415 3.78 5.436 12.65 11.338 13.61 15.381 2.23 9.473-7.16 10.705-7.16 10.705 12.37 2.587 20.93 6.724 33.39 12.095 1.63-3.756 2.29-7.856 2.09-12.256-.25-5.781-7.36-11.031-10.27-17.751-.88-2.035 3.51-5.158 2.42-7.267 0 0-39.03-18.218-36.81-12.322Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" fill-rule="evenodd" d="M1518.4 824.28c.27 1.385-3.63 2.417-.87 8.196 2.85 5.977 13.14 14.718 13.43 18.863.66 9.','709-8.8 9.403-8.8 9.403 11.79 4.557 8.52 3.273 19.96 10.594 2.2-3.443 5.91-6.236 6.44-10.608.68-5.747-9.8-11.42-11.59-18.524-.54-2.151 8.53.86 7.8-1.398 0 0-27.61-22.704-26.37-16.526Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="M1424.56 844.586c120.29 0 217.96 97.565 217.96 217.734 0 36.72-9.12 71.34-25.22 101.7-19.25 36.3-88.44-68.2-175.85-144.12-78.73-68.376-178.85-106.195-156.04-125.128 37.76-31.335 86.27-50.186 139.15-50.186Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="M1047.32 695.355c120.3 0 211.45 97.742 217.97 217.739 1.34 24.67-112.08-48.81-223.76-50.38-106.142-1.49-212.175 108.93-212.175 50.38 0-120.174 97.667-217.739 217.965-217.739Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" fill-rule="evenodd" d="M1068.77 704.759c.77 1.401.4 7.126 5.11 12.386 4.87 5.44 14.84 10.466 16.64 14.854 4.2 10.285-4.77 13.411-4.77 13.411 12.71.636 22 3.727 35.39 7.49.8-4.542.58-9.294-.55-14.226-1.47-6.482-9.58-11.097-13.86-18.148-1.3-2.135 2.35-6.473.83-8.653 0 0-42.22-13.362-38.79-7.114Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" fill-rule="evenodd" d="M1114.89 714.704c.56 1.515-3.06 3.4.88 9.417 4.07 6.223 16.04 1','4.192 17.2 18.819 2.72 10.841-6.65 12.243-6.65 12.243 12.55 2.97 9.07 2.123 21.86 8.278 1.44-4.297 4.5-8.136 4.09-13.17-.56-6.615-12.06-11.085-15.33-18.777-.98-2.329 8.57-.605 7.37-3.019 0 0-31.95-20.539-29.42-13.791Zm-460.367 93.638c.974 1.27 1.456 6.987 6.902 11.482 5.628 4.65 16.238 8.128 18.676 12.197 5.694 9.54-2.704 13.973-2.704 13.973 12.659-1.273 22.307.392 36.105 2.11.116-4.612-.814-9.277-2.67-13.984-2.426-6.188-11.127-9.539-16.421-15.869-1.601-1.917 1.36-6.752-.468-8.68 0 0-43.749-6.893-39.42-1.229Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" fill-rule="evenodd" d="M701.604 811.276c.779 1.413-2.511 3.818 2.284 9.178 4.954 5.543 17.979 11.632 19.825 16.032 4.307 10.313-4.746 13.101-4.746 13.101 12.855 1.058 9.286.741 22.855 4.913.779-4.464 3.225-8.716 2.065-13.633-1.','535-6.458-13.577-9.156-17.96-16.271-1.324-2.156 8.382-1.882 6.834-4.089 0 0-34.663-15.525-31.157-9.231Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="M1051.15 748.75c93.74 0 173.73 59.233 204.49 142.239 4.16 11.23-102.45-27.38-202.71-23.8-109.769 3.91-214.159 49.05-211.278 39.05 26.185-90.904 110.12-157.489 209.498-157.489Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="16.178" d="M1079.2 814.211c139.16 0 598.62 141.061 598.62 141.061s248.63 240.058 290.1 370.478c37.17 116.88-281.42 253.78-281.42 391.55 0 138.38 11.89 281.32 11.89 281.32s38.9 189.27 16.01 263.75c-33.73 109.68-75.63 134.95-223.67 229.17 0 0-271.62 184.59-409.11 184.66-136.035.07-362.305-163.77-362.305-163.77-170.781-92.13-207.491-152.06-240.165-243.93-33.906-95.33-21.958-278.05-21.958-278.05s18.8-129.58 14.715-273.15c-2.44-85.75-320.164-204.33-280.565-363.64 36.222-145.72 288.112-390.54 288.112-390.54S915.386 814.211 1079.2 814.211Zm3.29 71.035c-284.61 0-515.674 263.164-515.674 587.304 0 324.15 231.064 587.31 515.674 587.31s515.67-263.16 515.67-587.31c0-324.14-231.06-587','.304-515.67-587.304Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".6" fill-rule="evenodd" d="m1694.75 981.182 254.48 422.598 14.58-64.5c-18.05-117.23-269.06-358.098-269.06-358.098Zm-6.38 548.278-7.96 314.98 45.33 376.55-42.14 106.83-107.26-138.35 34.44-149.04 7.38-283.44 70.21-227.53Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m1936.59 1420.68-235.17 56.86-10.46 207.61c44.41-93.45 139.58-179.73 245.63-264.47Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1494.98 2478.18-35.09-60.01-75.72-37.23-92.46 69.6-65.03 22.49m-518.325 22.08 28.049-55.78 74.367-36.57 92.462 69.6 65.029 22.49m-474.473-191.07 75.688-108.18-25.516-134.12 76.436-8.44 44.751 76.47 108.533',' 17.45m910.519 181.18-109.63-132.54 25.52-134.12-76.44-8.44-44.75 76.47-103.35 21.29"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1603.37 2055.22 13.3-295.11 79.12-279.66 244.48-63.37"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.991" d="M1430.59 2373.56c-49.76-5.44-67.06-9.1-157.32-16.8-70.49-6.02-123.96-56.94-190.23-55.18-66.26 1.76-140.403 56.84-207.362 65.74-61.013 8.12-116.304 11.64-143.455 13.01-11.244.55-180.063 33.15-180.063 33.15 57.249 42.28 116.586 83.1 182.86 119.02 0 0 63.645-8.13 150.663 9.02 67.381 13.27 124.877 76.22 189.887 77.69 65.01 1.47 130.98-57.46 200.17-68.86 90.78-14.95 181.24-19.88 181.24-19.88 57.91-37.37 113.45-78.34 166.82-122.61 0 0-132.92-27.71-193.21-34.3Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors)));
      
        return render;
      }
}