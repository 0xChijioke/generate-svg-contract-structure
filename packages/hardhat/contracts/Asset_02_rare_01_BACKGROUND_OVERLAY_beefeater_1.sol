//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_beefeater_1 {

using ToColor for bytes4;

function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[8].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.915" d="m1265.31 973.78-10.86-6.115-6.49 11.527 10.87 6.115 6.48-11.527Z"/><path fill="',colors[5].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.785" d="m1371.19 805.434-14.69-9.768 20.24-30.427 14.69 9.769-20.24 30.426Z"/><path fill="',colors[6].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.078" d="m1371.51 785.745-12.06-8.018 7.43-11.17 12.06 8.019-7.43 11.169Z"/><path fill="',colors[7].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.645" d="m1385.94 794.742-8.04-5.344 6.99-10.511 8.04 5.343-6.99 10.512Z"/><path fill="'));
      
        return render;
      }

    function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[8].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.915" d="m1377.93 789.895-10.38-6.906 7.32-11.013 10.38 6.906-7.32 11.013Z"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.162" d="M1360.19 957.64c4.76-7.826 3.53-17.256-2.74-21.063-6.27-3.808-15.21-.551-19.96 7.275-4.75 7.825-3.52 17.255 2.75 21.063 6.27 3.807 15.2.55 19.95-7.275Zm44.07-77.251c4.75-7.826 3.52-17.256-2.75-21.063-6.26-3.808-15.2-.551-19.95 7.275-4.75 7.825-3.52 17.255 2.74 21.063 6.27 3.807 15.21.55 19.96-7.275Z"/><path fill="#000" fill-rule="evenodd" d="M1374.2 835.118c.53-.012.86-.752 1.39-.763.5-.009 20.34 1.405 22.11 1.528 2.18.156 2.41 2.331 1.86 3.301-2.71 4.902-14.64 26.029-22.22 38.278-6.77 10.','909-14.99 23.123-16.33 25.109-1.41 2.109-4.86 1.692-5.44-1.013-2.32-10.89-1.86-11.008-2.32-11.859-1.41-2.619-4.33-4.079-6.47-6.133-.06-.06-9.73-9.339-9.73-9.339-.1-.414-.39-.95-.11-1.27.27-.325.91-.349 1.27-.11.47.308 18.45 13.84 18.76 14.135.27.245.41.513.44.566.47.865.08.952 1.07 12.262 2.6-5.866 4.6-11.973 7.21-17.834.06-.141 5.99-9.986 10.88-17.45 2.19-3.342 4.19-6.818 6.61-10.009 4.16-5.514 8.92-10.553 13.07-16.058l-22.05-3.341Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1312.43 874.58c.56.302 1.33-.22 1.89.073 3.77 2.006 7.26 4.486 10.91 6.723 13.8 8.454 13.78 8.498 28.07 16.098 5.51 2.929 5.56 2.865 5.87 3.219.67.772.44 1.827.24 2.167-.24.405-12.64 20.708-19.69 31.292-6.86 10.317-15.01 20.829-16.12 22.281a261.61 261.61 0 0 1-3.13 4c-.6.755-2.08 1.213-3.16.379-.1','7-.142-11.87-10.127-11.88-10.197-.11-.41-.44-.922-.2-1.272.26-.335.89-.379 1.27-.183 3.86 1.948 7.37 4.544 11.22 6.492.6-1.006 8.74-15.534 16.25-26.053.65-.914 1.31-1.824 1.98-2.728 6.8-9.184 6.9-9.112 18.92-24.645-14.92-10.109-14.74-10.373-23.51-15.544-16.55-9.755-16.66-9.581-18.04-10.512-.5-.343-.38-1.247-.89-1.59Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.162" d="m1386.23 926.62 1.98-6.589"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M1360.8 1004.56c17.25-40.105 68.59-116.967 87.2-142.085l-87.2 142.085Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.108" d="M1360.8 1004.56c17.25-40.105 68.59-116.967 87.2-142.085"/><path fill="',colors[9].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.108" d="m1294.74 971.696-23.11-19.002-39.79-32.606c-1.67-7.416-3.98-14.858 9.75-21.231l-1.26-10.408 10.86-2.6c-2.03-9.733.81-16.656 13.28-17.997 0 0-.18-7.157 40.52-6.253l-32.86-9.574s7.14-12.768 17.88-6.598l-8.86-14.259 17.33 9.433c-5.5-9.459-8.29-19.118-3.17-29.352l.16-14.242 17.43-10.272 17.22-3.062 52.38 28.629 25.75 8.444-39.5-24.374-79.32-57.266-41.16 63.093.73 19.919-10.88-4.37 5.74 13.537-14.3-.398-25.26 38.722-23.52 43.434 96.47 54.197 33.22 19.245-15.73-14.789Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="M1324.89 789.341c-3.92 6.04-7 14.14-10.05 22.33 4.77-6.28 9.44-12.78 17.88-10.79 11.36-4.94 17.2-.75 21.69 5.65l-6.72 23'));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('.12c6.42-13.21 12.47-20.51 17.68-14.22 9.82-.85 14.2 2.35 12.58 10.01l-11.52 9.95 34.54.45-5.81 15.13c11.54 1.72 24.82-6.11 24.07 9.65 3.62 5.08 19.82 17.81 28.21-5.36 16.08 7.05 18.17 17.89 15.13 30.13l3.16-26.49c-57.48-29.92-113.49-61.51-160.17-103.73l19.33 34.17Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1212.45 912.16c8.44.19 24.34-28.559 30.16-16.319 31.76 66.83 55.21 42.29 67.23 53.79l24.14 26.41c8.85 6.64 17.17 4.26 25.09-4.72-.21 8.48-.96 16.86-3.24 24.98 1.37 13.209 8.73 16.329 24.57 5.159 11.8-8.319 17.75-16.629 26.12-19.479l38.02-52.93c-8.19 19.49-15.1 38.36-10.95 51.98l27.18 31.549-45.07-25.559-44.21 34.039c-46.36-14.18-114.71-63.209-159.04-108.9Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.126" d="M1441.4 1010.17c6.28-7.64 6.62-17.741.76-22.557-5.86-4.816-15.7-2.528-21.98 5.112-6.28 7.635-6.62 17.735-.76 22.555 5.85 4.82 15.69 2.53 21.98-5.11Zm42.96-73.321c6.28-7.64 6.62-17.738.77-22.554-5.86-4.817-15.7-2.528-21.98 5.111-6.28 7.64-6.63 17.738-.77 22.554 5.86 4.817 15.7 2.528 21.98-5.111Z"/><path fill="#fff" fill-rule="evenodd" d="M1471.12 921.096s5.53-4.199 7.41-3.175c1.88 1.032 3.88 9.342 3.88 9.342-3.12-4.664-6.87-6.794-11.29-6.167Zm-87.76-55.202s1.99-2.692 3.67-2.215c2 .562 2.44 4.122 2.44 4.122-3.68 2.67-6 2.598-6.11-1.907Zm-39.99 75.081s1.99-2.692 3.67-2.215c2 .562 2.44 4.123 2.44 4.123-3.68 2.669-6 2.597-6.11-1.908Zm85.1 53.059s5.52-4.198 7.41-3.175c1.88 1.032 3.88 9.','341 3.88 9.341-3.13-4.662-6.87-6.792-11.29-6.166Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.126" d="m1449.38 1007.75 11.66 9.91 7.89-7.68 6.03-17.604 20.5-12.141 5.63-8.606-12.15-10.727-39.56 46.848Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.714" d="M1134.9 318.792c4.23-.873 26.92-4.856 27.8-.598l-19.33 13.258 3.05 10.571 22.06 3.752c.88 4.259-25.92 9.756-30.15 10.629l-13.77 6.995c-4.23.873-8.38-1.875-9.26-6.131l-6.84-33.183c-.87-4.256 1.85-8.421 6.09-9.294l20.35 4.001Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.715" d="M1126.71 358.135s3.82-2.199 4.76-6.444c1.07-4.815-.81-11.743-1.96-11.658-2.14.158-6.99-1.821-6.99-1.821l4.61-1.747s4.73-3.503.28-10.336c-4.46-6.832-9.58-7.769-9.58-7.769m14.7 19.812 8.51-1.69m-3.59 6.643-2.3-11.902"/><path fill="'));
      
        return render;
      }

    function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[10].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4" d="M1035.19 310.572c-9.89 3.561-15.03 14.487-11.47 24.379l24.29 66.61c3.56 9.891 14.48 15.033 24.38 11.472l42.66-9.765c9.89-3.561 15.03-14.487 11.47-24.379l-27.77-77.119c-3.56-9.891-14.48-15.033-24.37-11.472l-39.19 20.274Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.572" d="M1090.24 377.618c-1.89-5.239-6.82-8.262-11.02-6.751-4.19 1.512-6.07 6.984-4.18 12.223 1.88 5.239 6.82 8.261 11.01 6.75 4.2-1.511 6.07-6.983 4.19-12.222Zm-19.71-50.373c-1.89-5.24-6.82-8.262-11.01-6.751-4.2 1.511-6.08 6.984-4.19 12.223 1.89 5.239 6.82 8.261 11.02 6.75 4.19-1.511 6.07-6.983 4.18-12.222Z"/>','<path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.572" d="m1058.34 343.505-8.29-23.61m23.63 78.373-9.43-26.445m21.84-19.343-4.81-3.599"/><path fill="',colors[10].toColor(),'" fill-rule="evenodd" d="M1109.74 365.233c-8-23.982-19.01-46.279-37.78-54.45l37.78 54.45Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.715" d="M1109.74 365.233c-8-23.982-19.01-46.279-37.78-54.45"/><path fill="',colors[11].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.715" d="M1077.47 408.551c-6.73-8.133-13.55-9.237-20.45-2.738 1.37-8.102-1.31-10.219-5.49-10.091 14.86-3.985 10.4-9.66-1.26-15.961 8.39-11.268.58-12.901-8.2-13.97 5.19-1.348 3.94-4.965-1.1-9.913 12.06-6.391 7.02-8.439-5.03-8.705 6.4-5.414 5.13-8.396-1.92-9.542 7.59-5.376 5.51-11.136-4.16-17.196 11.28.539 16.68-2.989 12.82-12.916-.65-9.722-4.92-11.913-14.23-3.649-6.57-10.284-21.78-4.305-24.92 7.665-7.815-6.089-14.965-7.777-10.212 4.368-11.475-6.17-12.457 1.701-6.346 10.189-2.812 7.768-4.706 9.587.707 9.717-10.324 7.823-2.86 12.657 6.297 17.212-8.001 9.279-2.441 14.632 7.514 17.329-4.74 7.67-5.198 13.574 2.44 18.859-13.322 6.646-5.74 16.873 11.71 22.822-.7 27.083 15.91 17','.325 25.44 7.795 1.24 7.203 3.09 9.13 6.44-2.017.48 12.582 3.99 15.077 10.91 6.147 8.36 4.617 12.18 2.963 10.32-6.54 6.5 6.108 11.01 7.176 10.57-4.334 4.41-7.901 2.69-8.001-1.85-4.531Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m1002.74 401.659 19.35 4.079.63 12.275 21.79-7.807 11.7 6.158c19.31-8.881 26.3-14.3.17-10.42l.18-11.001 5.92-3.581c3.3 7.07 10.83 9.268 20.16 9.395 16.21-.58 32.39-1.242 42.75-18.302l-7.95-31.891 11.86 6.533-7.56 6.208c4.02 10.627 12.48 19.794 1.46 35.368l-41.41 12.356c-4.12 7.136-8.36 10.413-12.79 7.688.08 6.389-6.34 8.402-10.56 2.277-3.7 8.032-7.34 9.017-10.93.052l-6.85.034c-7.37 6.78-14.16 9.586-20.2 7.355l-5.17-14.88-12.55-11.896Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.334" d="M1146.12 359.274c-1.21-5.892-5.86-9.913-10.38-8.982-4.51.931-7.19 6.462-5.98 12.353 1.22 5.892 5.86 9.913 10.38 8.982 4.52-.931 7.2-6.462 5.98-12.353Zm-18.27-48.349c-1.21-5.891-5.86-9.913-10.38-8.982-4.51.931-7.19 6.462-5.98 12.353 1.22 5.892 5.86 9.913 10.38 8.982 4.52-.931 7.2-6.461 5.98-12.353Z"/><path fill="#fff" fill-rule="evenodd" d="M1115.34 311.168s.12-4.217 1.33-4.718c1.21-.495 5.9 1.736 5.9 1.736-3.4-.304-5.84.653-7.23 2.982Zm-59.66 20.427s-.51-1.967.36-2.583c1.03-.73 2.88.424 2.88.424-.14 2.761-1.06 3.829-3.24 2.159Zm20.24 47.613s-.51-1.967.36-2.583c1.03-.73 2.88.425 2.88.425-.14 2.76-1.06 3.828-3.24 2.158Zm57.63-19.986s.12-4.217 1.33-4.718c1.21-.496 5.9 1.736 5.9 1.736','-3.4-.305-5.84.653-7.23 2.982Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.334" d="m1148.03 354.569 9.15-1.727-.62-6.667-6.03-9.582 2.09-14.339-1.92-5.951-9.72 1.649 7.05 36.617Z" clip-rule="evenodd"/><path fill="',colors[12].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.383" d="M1715.53 470.662c-3.25 5.355-21.42 33.371-26.81 30.098l5.01-33.604-14.23-7.196-25.77 19.716c-5.38-3.273 15.24-37.147 18.49-42.505l6.16-21.513c3.26-5.355 10.27-7.048 15.65-3.777l41.97 25.496c5.39 3.271 7.12 10.276 3.87 15.631l-24.34 17.654Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.385" d="M1681.85 423.133s-1.44 6.232 2.13 11.42c4.07 5.881 13.27 10.727 14.31 9.428 1.96-2.437 8.84-5.627 8.84-5.627l-2.7 6.624s-.95 8.476 10.7 10.491c11.65 2.016 17.7-2.492 17.7-2.492m-35.54-3.956-6.6 10.7m-3.51-10.367 14.91 9.3"/><path fill="',colors[12].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn5(colors),renderFn6(colors),renderFn7(colors),renderFn8(colors),renderFn9(colors)));
      
        return render;
      }
}