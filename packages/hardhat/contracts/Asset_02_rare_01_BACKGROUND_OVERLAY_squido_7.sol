//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_squido_7 {

using ToColor for bytes4;

function renderFn27(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.695" d="M1638.42 400.405c19.02-12.055-111.75-6.413-96.96 3.983-4.09 3.578-11.18 18.473-7.47 17.88.18 3.464-22.79 28.669-25.15 49.542-2.16 18.966 2.97 28.627 7.37 13.415 7.7-26.599 36.24-47.212 41.7-52.01 6.55-.294 7.92 19.956 4.06 43.571-3.3 20.224.37 29.282 7.58 16.654 13.95-24.438 14.87-50.161 17.5-50.503 2.05-.253 5.99 24.697 4.4 41.726-2 21.562-3.04 31.506 1.3 30.207 13.23-3.94 22.22-70.046 17.52-80.84 2.81-2.268 6.58 14.413 8.07 34.118 1.3 17.253.23 37.765 3.55 37.589 10.93-.576 12.72-75.193 14.24-75.661 5.75-1.731 1.41 43.91 11.62 31.335 2.19-2.706-4.9-54.617-9.33-61.006Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.695" d="M1523.7 407.677c-16.92-14.948-31.4-32.516-27.38-56.444 4.25-25.395 67.68-118.365 110.21-115.547 39.6 2.623 76.82 93.519 77.74 119.834 1.34 38.525-24.57 56.208-40.76 64.094 3.47 4.203 3.7 19.708 12.99 45.641 8.85 24.683 20.66 16.399 18.25 21.431-2.49 5.207-17.86 8.663-28.32-1.898-11.41-11.532-19.41-37.63-22.99-38.81-.7 3.394 4.68 36.124 3.79 57.115-.81 19.075-10.7 14.884-16.4.282-3.52-9.045-8.05-44.801-12.7-50.413-6.42-1.338-10.9 18.44-10.74 42.379.13 20.5-4.89 28.858-10.06 15.233-10.01-26.367-6.93-51.916-9.48-52.675-1.99-.578-9.74 23.431-10.8 40.502-1.35 21.615-5 13.931-9.09 11.969-12.46-6.024-7.97-55.074-1.66-64.982-2.43-2.691-8.73 13.18-13.24 32.402-3.96 16.8','29-6.07 37.257-9.32 36.553-10.71-2.317-.94-76.292-2.37-76.999-5.41-2.628-8.18 43.138-16.32 29.087-1.74-3.023-3.79-23.771 4.47-42.405 4.89-11.005 8.81-10.749 14.18-16.349Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M1592.48 275.484c-4.65 1.762-7.28 6.81-5.86 11.275 1.41 4.464 6.34 6.655 11 4.892 4.65-1.762 7.28-6.81 5.86-11.275-1.41-4.464-6.34-6.655-11-4.892Z"/><path fill="',colors[3].toColor()));
      
        return render;
      }

    function renderFn28(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M1642.43 362.297c-4.65 1.763-7.28 6.811-5.86 11.275 1.41 4.465 6.34 6.655 11 4.893 4.65-1.763 7.28-6.811 5.86-11.275-1.42-4.465-6.34-6.655-11-4.893Zm-113.95-18.647c-4.66 1.762-7.28 6.81-5.87 11.275 1.42 4.464 6.34 6.655 11 4.892 4.66-1.762 7.29-6.81 5.87-11.275-1.42-4.464-6.34-6.655-11-4.892Z"/><path fill="',colors[2].toColor(),'" d="M1606.08 242.675c-4.66 1.763-7.28 6.811-5.87 11.275 1.42 4.465 6.35 6.655 11 4.893 4.66-1.763 7.29-6.811 5.87-11.275-1.42-4.465-6.34-6.656-11-4.893Zm25.69 34.646c-4.65 1.762-7.28 6.81-5.86 11.275 1.42 4.464 6.34 6.655 11 4.892 4.65-1.762 7.28-6.81 5.86-11.275-1.41-4.465-6.34-6.655-11-4.892Zm-65.44-4.221c-2.44-1.465-5.82.03-7.54 3.339-1.73 3.308-1.15 7.178 1.29 8.642 2.44 1.464 5.81-.031 7.54-3.339 1.73-3.309 1.15-7.178-1.29-8.642Zm96.33 62.009c-3.29-.348-6.21 1.982-6.53 5.203-.32 3.22 2.08 6.113 5.37 6.46 3.28.347 6.2-1.982 6.52-5.203.32-3.221-2.08-6.113-5.36-6.46Zm-5.94-29.386c-3.28-.347-6.2 1.982-6.52 5.203-.32 3.221 2.08 6.113 5.36 6.46 3.29.347 6.21-1.982 6.53-5.203.32-3.221-2.08-6.113-5.37-6.46Zm-134.98 21.299c-3.28-.348-6.2 1.982-6.52 5.203-.32 3.22 2.08 6.113 5.36 6.46 3.28.347',' 6.21-1.982 6.53-5.203.32-3.221-2.09-6.113-5.37-6.46Zm76.94 19.644c-2.43-.257-4.6 1.598-4.86 4.143-.25 2.546 1.52 4.817 3.95 5.074 2.43.257 4.6-1.598 4.85-4.143.26-2.545-1.51-4.817-3.94-5.074Zm-16.08 10.358c-2.43-.257-4.6 1.598-4.85 4.144-.26 2.545 1.51 4.817 3.94 5.074 2.43.257 4.6-1.598 4.86-4.144.25-2.545-1.52-4.817-3.95-5.074Zm2.24-21.658c-2.43-.257-4.6 1.598-4.85 4.143-.26 2.546 1.51 4.818 3.94 5.074 2.43.257 4.6-1.598 4.85-4.143.26-2.545-1.51-4.817-3.94-5.074Zm-23.37 13.593c-2.43-.257-4.61 1.598-4.86 4.143-.25 2.546 1.51 4.817 3.94 5.074 2.43.257 4.61-1.598 4.86-4.143s-1.51-4.817-3.94-5.074Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1527.99 419.639c-8.92 17.637.58 72.311-8.51 83.521-3.34 4.112 7.33-17.457-8.09-11.438-4.59 1.791-1.87-10.652-3.84-22.08-4.68-27.195 2','.71-61.557 16.84-59.35l-2.91-5.694c-9.61-8.629-18.29-16.455-22.38-29.509-2.7-8.608-2.39-21.18-2.64-31.743 23.5-57.123 27.1-32.796 17.82-9.166-8.06 20.509-7.74 40.481 20.28 70.503l-.76 3.597c-.28.474 20.84 12.043 20.25 13.178 11.94 7.749-19.89-2.126-26.06-1.819Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1603.98 399.68 7.27-34.968s5.7-2.316 5.71 1.875c.01 6.421-5.77 20.787-6.8 24.813-1.37 5.314-6.18 8.28-6.18 8.28Zm-24.53 114.865c5.24-19.504 2.59-23.195 3.17-61.263 0 0 4.43 31.989 2.05 47.404-2.07 13.383-5.22 13.859-5.22 13.859Zm41.25 4.152c1.91-46.505 1.36-32.867-.36-71.248 0 0 7.23 40.874 4.22 59.229-2.61 15.933-3.86 12.019-3.86 12.019Zm48.14-119.884c7.66-35.26-21.44-146.799-88.08-155.221 11.52-5.192 31.11-19.732 55.86 12.715 25.14 32.961 37.17 61.95','2 47.24 100.338-4.79 20.971-4.35 33.255-15.02 42.168Zm-31.46 22.925c1.4 6.318 3.12 12.622 5.06 18.921 4.49 14.55 10.19 29.065 15.87 43.627 0 0-6.5-24.986-10.68-39.338-.83-2.863-1.57-5.303-2.16-7.037-1.98-5.93-8.09-16.173-8.09-16.173Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1635.87 430.325c-1.15-5.266-7.79-6.08-4.71-6.894 3.09-.814 7.98-1.733 8.49 3.666 2.54 27.311 6.7 19.013 3.61 19.827-3.08.814-6.25-11.333-7.39-16.599Zm-1.41-172.143c8.61 8.258 22.15 33.725 18.71 31.449-2.66-1.769-12.99-20.577-21.6-28.834-8.61-8.258-17.54-11.871-15.51-14.341 2.03-2.47 9.79 3.47 18.4 11.726Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="M1605.52 301.47c4.42 9.416 20.06 14.014 39.04 17.174-14.31-5.722-26.47-12.622-31.68-23.328l-7.36 6.154Z" clip-rule','="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1548.91 395.315c-4.57.108-5.87-15.213 4.28-21.657 6.65-4.221 2.05-11.226 7.8-9.441l-8.36 4.175c-15.96 12.347-16.62 16.621-10.17 29.64l23.97-19.781-14.12 35.506 2.63-22.948-6.03 4.506Zm11.68-105.259s21.55-5.515 18.79-3.2c-2.76 2.315-5.27 7.722-8.81 7.423-17.04-1.436-28.79 12.755-32.51 18.467 0 0 1.09-8.899 3.38-11.086 3.67-3.5 19.15-11.604 19.15-11.604Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.138" d="M1615.2 368.411c-4.4 11.573-.43 34.662-13.2 34.719-2.34.01-1.66-27.276-3.93-25.031-6.53 6.478-9.86 41.852-15.74 43.268-15.37 3.694-.51-35.273-1.69-39.266-1.18-3.994-18.59 31.609-24.17 31.609-10.57.002 14.12-36.872 11.45-39.106-2.67-2.23','5-22.11 23.07-24.13 20.799-6-6.742 15.07-29.648 15.07-29.648"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.487" d="M1618.98 345.004c-8.4-2.827-12.79-12.324-9.78-21.193 3-8.87 8.28-2.244 16.68.583.58.197 1.17.37 1.75.525 7.76 2.072 14.81.883 12.01 9.136-3 8.87-12.26 13.776-20.66 10.949Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.477" d="M1562.88 335.67c-8.77.308-14.83-3.701-15.67-11.772-1.13-10.924 7.15-9.576 15.92-9.885 8.78-.309 16.65-7.788 17.14 3.183.48 10.972-8.61 18.165-17.39 18.474Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin='));
      
        return render;
      }

    function renderFn29(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('"round" stroke-miterlimit="1.5" stroke-width="10.277" d="M1619.47 325.801c-1.1.415-1.29 2.962-.42 5.689.87 2.727 2.46 4.601 3.55 4.185 1.1-.415 1.29-2.962.42-5.688-.86-2.727-2.45-4.601-3.55-4.186Z"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9.774" d="M1568.16 316.587c-.94-.694-3 .678-4.6 3.063-1.6 2.385-2.13 4.881-1.19 5.574.94.693 2.99-.678 4.59-3.063 1.6-2.385 2.14-4.881 1.2-5.574Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.695" d="M180.049 2540.64c21.982-4.88-74.633 83.41-71.497 65.62-5.423.35-20.96-5.2-17.909-7.4-2.323-2.58-36.383-4.22-52.788-17.34-14.911-11.92-18.099-22.38-4.245-14.71 24.227 13.41 58.994 7.87 66.248 7.41 4.846-4.41-8.473-19.72-27.876-33.73-16.611-12-20.405-21-6.383-17.15 27.134 7.47 45.936 25.04 48.043 23.43 1.632-1.27-13.186-21.73-26.332-32.67-16.638-13.86-24.396-20.17-20.402-22.31 12.154-6.55 65.179 33.94 69.468 44.9 3.595-.38-5.51-14.86-18.366-29.86-11.25-13.15-26.487-26.92-24.015-29.14 8.151-7.31 62.082 44.29 63.494 43.55 5.292-2.83-29.992-32.11-13.889-30.4 3.462.37 35.081 42.15 36.449 49.8Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.694" d="M93.648 2616.46c-1.435 22.53.707 45.19 20.44 59.31 20.94 14.99 131.491 36.08 159.63 4.07 26.201-29.81-11.586-120.47-29.506-139.77-26.245-28.23-57.076-22.47-74.112-16.63-.509-5.43-11.292-16.57-23.014-41.5-11.15-23.73 3.063-26.2-2.193-28.07-5.44-1.93-18.772 6.48-18.726 21.34.056 16.22 12.81 40.35 11.108 43.72-2.896-1.91-22.18-28.9-37.629-43.14-14.034-12.94-18.089-2.99-11.82 11.38 3.891 8.89 25.923 37.41 26.59 44.67-3.605 5.48-20.742-5.36-37.523-22.44-14.376-14.61-23.834-16.99-17.88-3.68 11.524 25.73 31.735 41.66 30.465 44-1 1.81-23.434-9.73-36.235-21.07-16.215-14.36-13.376-6.34-14.89-2.06-4.57 13.06 33.225 44.64 44.69 47.2.176 3.62-15.488-3.17-32.251-13.61-14.683','-9.12-30.597-22.1-32.4-19.31-5.949 9.19 53.184 54.7 52.666 56.22-1.976 5.68-36.243-24.79-32.086-9.09.896 3.37 14.09 19.51 33.095 26.88 11.228 4.35 13.826 1.4 21.581 1.58Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M235.678 2661.56c-4.543 2.04-9.967.31-12.114-3.85-2.147-4.16-.205-9.19 4.339-11.23 4.543-2.04 9.966-.31 12.114 3.85 2.147 4.16.204 9.19-4.339 11.23Z"/><path fill="'));
      
        return render;
      }

    function renderFn30(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" d="M209.791 2564.8c-4.543 2.04-9.967.32-12.114-3.84-2.147-4.17-.204-9.2 4.339-11.23 4.543-2.04 9.967-.32 12.114 3.84 2.147 4.17.204 9.19-4.339 11.23Zm-67.564 93.64c-4.544 2.04-9.967.32-12.114-3.84-2.147-4.17-.205-9.19 4.338-11.23 4.544-2.04 9.967-.32 12.114 3.84 2.147 4.17.205 9.19-4.338 11.23Z"/><path fill="',colors[2].toColor(),'" d="M268.467 2675.2c-4.543 2.04-9.967.32-12.114-3.84-2.147-4.17-.205-9.19 4.339-11.23 4.543-2.04 9.967-.32 12.114 3.84 2.147 4.17.204 9.19-4.339 11.23Zm-6.25-42.68c-4.543 2.04-9.967.32-12.114-3.84-2.147-4.16-.205-9.19 4.339-11.23 4.543-2.04 9.967-.32 12.114 3.85 2.147 4.16.204 9.19-4.339 11.22Zm-43.384 49.19c-.694 2.75-4.141 4.08-7.699 2.95-3.558-1.12-5.88-4.27-5.186-7.03.694-2.76 4.141-4.08 7.7-2.96 3.558 1.13 5.879 4.28 5.185 7.04Zm24.471-111.92c-2.08 2.56-5.793 2.97-8.293.92-2.5-2.06-2.84-5.8-.76-8.36 2.08-2.57 5.793-2.98 8.293-.92 2.5 2.05 2.841 5.8.76 8.36Zm16.54 25c-2.081 2.57-5.794 2.98-8.294.92-2.5-2.05-2.84-5.8-.76-8.36 2.08-2.56 5.793-2.97 8.293-.92 2.5 2.06 2.841 5.8.761 8.36Zm-110.655 80.19c-2.08 2.56-5.793 2.97-8.293.91-2.5-2.05-2.841-5.79-.76-8.36 2.08-2.56 5.793-2.97 8.293-','.92 2.5 2.06 2.84 5.8.76 8.37Zm40.641-68.22c-1.54 1.89-4.391 2.11-6.366.49-1.976-1.63-2.329-4.48-.789-6.38 1.54-1.89 4.39-2.12 6.365-.49 1.976 1.62 2.329 4.48.79 6.38Zm-18.702 4.01c-1.54 1.89-4.39 2.11-6.365.49-1.976-1.63-2.33-4.48-.79-6.38 1.54-1.89 4.39-2.12 6.366-.49 1.976 1.62 2.329 4.48.789 6.38Zm16.873 13.76c-1.54 1.9-4.39 2.12-6.365.49-1.976-1.62-2.33-4.48-.79-6.37 1.54-1.9 4.39-2.12 6.366-.5 1.976 1.63 2.329 4.48.789 6.38Zm-26.154 6.87c-1.54 1.89-4.39 2.11-6.366.49-1.976-1.63-2.329-4.48-.789-6.38 1.54-1.89 4.39-2.11 6.366-.49 1.976 1.62 2.329 4.48.789 6.38Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M88.25 2604.95c-18.775-6.19-50.63-51.63-64.984-53.15-5.264-.56 17.519 7.19 2.34 13.81-4.513 1.97 6.2 8.86 12.871 18.35 15.877 22.57 45.361 41.7 53.818 30.16l1.958 6.08','c-.719 12.9-1.347 24.57 4.967 36.71 4.163 8 13.262 16.68 20.534 24.35 56.971 23.87 42.35 4.1 19.096-6.09-20.184-8.84-34.052-23.21-35.396-64.26l-3.077-2.01c-.533-.13 6.262-23.24 5.049-23.63 2.988-13.91-12.593 15.55-17.177 19.68Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m156.168 2565.46 29.826 19.64s5.671-2.38 2.721-5.35c-4.52-4.56-18.757-10.66-22.33-12.78-4.716-2.81-10.217-1.51-10.217-1.51Zm-98.452-64.06c17.475 10.12 18.207 14.6 45.482 41.17 0 0-19.44-25.79-32.005-35.03-10.908-8.03-13.477-6.14-13.477-6.14Zm26.292-32.06c34.172 31.61 24.159 22.33 50.028 50.74 0 0-23.724-34.07-38.811-44.94-13.098-9.45-11.217-5.8-11.217-5.8Zm118.719 50.95c30.31 19.58 88.422 119.13 47.155 172.13 11.828-4.45 35.964-7.97 30.595-48.43-5.454-41.09-17.389-70.12-37.35-104.42-18.','193-11.48-26.553-20.49-40.4-19.28Zm-38.467 5.97c-3.472-5.46-6.704-11.14-9.772-16.98-7.087-13.47-13.297-27.78-19.551-42.1 0 0 13.033 22.29 20.2 35.4 1.43 2.62 2.626 4.87 3.439 6.51 2.78 5.6 5.684 17.17 5.684 17.17Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M157.123 2521.25c2.907 4.53-1.225 9.8 1.535 8.2 2.76-1.6 6.877-4.4 3.422-8.58-17.477-21.14-8.672-18.2-11.432-16.6-2.761 1.6 3.568 12.44 6.475 16.98Zm120.501 122.94c.271-11.93-8.112-39.53-8.937-35.49-.641 3.13 5.318 23.75 5.047 35.67-.271 11.93-4.051 20.8-.868 21.11 3.183.32 4.487-9.37 4.758-21.29Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="M226.573 2633.95c-3.514-9.79 4.316-24.09 15.533-39.72-6.098 14.15-9.841 27.62-5.979 38.88l-9.554.84Z" clip-rule="evenodd"/><path fill="#000" fi','ll-opacity=".3" fill-rule="evenodd" d="M120.238 2607.42c-3.315 3.15 6.576 14.92 18.316 12.32 7.689-1.7 9.372 6.51 12.188 1.18l-8.869 2.95c-20.025 2.52-23.51-.04-28.124-13.82l30.943-2.91-35.065-15.18 18.059 14.4-7.448 1.06Zm82.56 66.32s19.159-11.3 15.57-10.99c-3.588.31-9.181-1.75-11.482.96-11.055 13.04-29.393 11.28-36.063 9.86 0 0 7.05 5.54 10.218 5.47 5.07-.11 21.757-5.3 21.757-5.3Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.138" d="M186.184 2579.69c-11.285-5.09-24.771-24.25-33.854-15.28-1.667 1.65 18.07 20.5 14.883 20.51-9.198.02-36.528-22.69-41.695-19.54-13.491 8.23 24.541 25.34 26.52 29.01 1.98 3.66-35.476-9.28-39.436-5.33-7.488 7.45 36.034 16.15 35.717 19.62-.318 3.47-31.949-.74-31.777 2.29.512 9.01 3'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn27(colors),renderFn28(colors),renderFn29(colors),renderFn30(colors)));
      
        return render;
      }
}