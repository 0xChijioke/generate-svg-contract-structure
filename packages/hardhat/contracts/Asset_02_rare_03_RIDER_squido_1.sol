//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_03_RIDER_squido_1 {

using ToColor for bytes4;

function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M629.378 1746.81c-33.411 6.46-80.017-178.02-72.45-190.78 12.283-20.71 45.645-14.87 42.576-54.17-.999-28.39-12.504-97.77-16.319-177.96-1.814-38.11 5.026-61.68 6.186-101.19 1.855-63.31 250.911-306.201 255.811-304.164 40.252 16.7 61.256 48.76 89.875 64.324 13.671 7.431 39.685 13.839 48.136 15.214 10.641 1.742 26.537-12.93 41.827-25.027 27.28-21.599-69.886-42.286-58.022-56.958 8.89-10.996 82.622 4.334 92.252 18.404 8.53 12.471 33.5 36.928 13.6 61.111-29.29 35.596-71.05 65.036-96.28 66.246-29.805 1.39-90.075-31.14-161.202-45.4-22.229-4.45-45.351-6.37-68.551-4.5 1.492-.57 1.832-1.34.097-2.49-.943-.61-.987.8-.996 2.56-5.44.46-10.882 1.13-16.314 2.02 3.93-.64 12.338-.78 16.314-1.82-.008 1.28-.01 2.68-.329 3.61-6.808 19.82-6.342 47.74-6.552 79.77-.289 44.19 4.376 94.6 8.595',' 144.91 3.638 43.41 7.879 86.45 10.853 124.88 4.672 60.43 6.623 109.99 6.455 133.27-4.43 105.94-38.797 176.52-85.712 211.84-22.406 16.87-23.863 31.27-49.85 36.3Zm117.439-734.85c-.264.09-.569.19-.899.27v-.2c.299-.03.599-.05.899-.07Z" clip-rule="evenodd"/><path stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="5.002" d="M746.817 1011.96c23.2-1.87 46.322.05 68.551 4.5 71.127 14.26 131.397 46.79 161.202 45.4 25.23-1.21 66.99-30.65 96.28-66.246 19.9-24.183-5.07-48.64-13.6-61.111-9.63-14.07-83.362-29.4-92.252-18.404-11.864 14.672 85.302 35.359 58.022 56.958-15.29 12.097-31.186 26.769-41.827 25.027-8.451-1.375-34.465-7.783-48.136-15.214-28.619-15.564-49.623-47.624-89.875-64.324-4.9-2.037-253.956 240.854-255.811 304.164-1.16 39.51-8 63.08-6.186 101.19 3.815 80.19 15.32 149.','57 16.319 177.96 3.069 39.3-30.293 33.46-42.576 54.17-7.566 12.76 39.039 197.24 72.45 190.78 25.987-5.03 27.444-19.43 49.85-36.3 46.915-35.32 81.282-105.9 85.712-211.84.168-23.28-1.783-72.84-6.455-133.27-2.973-38.43-7.215-81.47-10.853-124.88-4.219-50.31-8.884-100.72-8.595-144.91.21-32.03-.256-59.95 6.552-79.77.319-.93.321-2.33.329-3.61m.899-.27c1.492-.57 1.832-1.34.097-2.49-.943-.61-.987.8-.996 2.56m.899-.07c-.264.09-.569.19-.899.27m.899-.27c-.3.02-.6.04-.899.07m0 0c-5.44.46-10.882 1.13-16.314 2.02 3.93-.64 12.338-.78 16.314-1.82m0-.2v.2"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m639.417 1194.8-13.868 99.2c10.757 7.78 51.336-12.89 79.552-22.35 12.036-4.03 8.61-100.99 12.873-97.86 55.234 40.58 55.535 255.45 97.046 304.21 7.177 8.43 2.996 150.89 9.836 160.05-3.445-3.06 76.','735-90.22 72.788-129.36-2.668-26.45-76.514-17.07-78.816-18.92-57.903-46.45-113.456-63.65-189.522-42.06 0 0 1.914 56.73 14.702 81.01 17.302 32.86 89.11 116.13 89.11 116.13l-97.464 97.02-37.723-231.78-13.23-208.79 54.716-106.5Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M759.392 1391.24c16.697 14.08 18.269 39.72 3.517 57.21-14.759 17.49-40.292 20.25-56.988 6.17-16.697-14.09-18.274-39.72-3.516-57.22 14.752-17.48 40.291-20.25 56.987-6.16Zm-8.993 16.01c-9.275-7.82-22.916-6.93-30.45 2-7.535 8.93-6.122 22.53 3.153 30.36 9.275 7.82 22.923 6.92 30.457-2.01 7.534-8.93 6.115-22.52-3.16-30.35Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M759.878 1390.66c21.642 16.92 19.836 50.01-1.833 67.3-17.379 13.87-43.564 13.65-59.38-4.31-11.261-12.8-14.636-34.16-3.05-52.38 7.098-11.16 20.629-20.81 37.395-20.84 16.011-.02 25.326 8.86 26.868 10.23Zm-.978 1.16c-21.453-16.38-51.311-5.55-60.281 18.39-6.291 16.78-.34 35.68 15.247 44.59 18.213 10.42 42.622 2.7 52.812-17.63 3.742-7.46 5.093-16.04 3.59-24.44-2.131-11.94-8.726-18.41-11.368-20.','91Zm-8.712 15.68.706-.83c10.054 7.47 11.461 19.46 7.899 27.89-6.424 15.2-26.65 19.36-39.554 7.54-10.248-9.4-11.382-26.57-.221-36.49 8.028-7.13 21.875-8.6 31.873 1.06l-.703.83Zm-.27.32c-.985-.65-6.861-5.02-15.488-3.71-10.021 1.52-17.52 11.15-14.773 22.17 1.899 7.59 9.812 15.58 20.553 14.61 13.519-1.21 20.828-16.79 12.735-29.34-1.358-2.11-2.763-3.45-3.032-3.72l.005-.01Z" clip-rule="evenodd"/><path fill="',colors[3].toColor()));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M705.025 1514.76c6.717-14.79 24.076-21.39 38.734-14.73 14.663 6.66 21.11 24.07 14.394 38.86-6.717 14.79-24.071 21.39-38.734 14.73-14.657-6.65-21.111-24.07-14.394-38.86Zm12.619 2.91c-3.731 8.22-.688 17.65 6.798 21.05 7.486 3.4 16.593-.51 20.324-8.73 3.731-8.22.682-17.65-6.803-21.05-7.486-3.4-16.588.52-20.319 8.73Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M704.526 1514.54c6.279-15.04 20.771-20.39 32.578-18.77 16.892 2.33 29.042 18.34 26.509 35.81-2.466 17.06-18.412 29.26-35.663 26.93-16.392-2.22-27.961-16.91-26.521-33.14.518-5.85 2.733-10.08 3.097-10.83Zm.994.45h.006c-.03.07-5.38 11.52.998 23.88 7.755 15.03 26.807 19.31 40.045 9.52 12.381-9.15 14.923-27.17 4.991-39.24-9.601-11.68-27.276-13.25-39.254-2.86-4.182 3.63-6.13 7.47-6.786 8.7Zm11.624 2.','46c4.786-12.57 19.874-15.4 27.924-6.11 7.936 9.16 4.625 24.77-7.478 29.91-10.476 4.45-21.967-2.13-22.727-14.04-.143-2.18.277-4.21.349-4.57.6-2.88 1.764-4.87 1.932-5.19Zm.989.45c-.372 1.16-1.94 5.47-.127 10.83 2.548 7.52 10.953 11.15 18.324 6.44 6.554-4.18 9.647-14.43 4.276-21.25-5.182-6.57-16.224-5.89-21.949 3.1-.142.22-.135.22-.518.88h-.006Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M750.56 1306.69c13.9 5.23 20.166 22.82 13.987 39.25-6.181 16.43-22.483 25.53-36.383 20.3-13.9-5.23-20.168-22.81-13.987-39.25 6.179-16.43 22.483-25.53 36.383-20.3Zm-2.675 13.78c-7.721-2.9-16.55 1.54-19.706 9.93-3.155 8.4.551 17.57 8.273 20.47 7.721 2.9 16.553-1.55 19.708-9.94 3.156-8.39-.553-17.56-8.275-20.46Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m750.464 1306.94.29-.77c.056.03 12.47 3.26 16.805 18.64 5.34 18.94-6.226 40.49-24.643 45.24-14.737 3.8-29.463-5.16-33.011-22.03-3.843-18.27 7.719-38.6 25.337-42.94 8.1-1.99 13.882.44 15.508 1.09l-.286.77Zm-.095.26h-.002c-.06-.01-10.726-4.29-22.199 4.05-14.114 10.25-17.997 31.49-8.75 44.34 8.892 12.36 25.939 11.68 36.932-.85 10.522-11.99 11.746-30.55 2.167-41.58-3.391-3.9-6.979-5.42-8.148-5.96Zm-2.2','88 12.75c12.02 3.72 14.841 20.05 5.468 29.54-8.737 8.84-23.195 6.57-27.924-5.26-4.119-10.28 1.817-22.27 12.135-25.11 1.278-.36 3.201-.67 5.347-.49 2.677.22 4.544 1.13 4.974 1.32Zm-.387 1.03c-1.162-.29-5.352-1.48-10.403 1.39-7.855 4.47-10.369 16.23-3.688 22.93 4.514 4.53 12.58 4.77 18.004-1.31 6.168-6.93 4.943-18.56-3.582-22.84-.11-.06-.224-.11-.334-.17h.003Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M726.798 1203.78c16.64 6.26 25.106 24.75 18.896 41.26-6.212 16.52-24.763 24.84-41.403 18.58-16.641-6.25-25.108-24.74-18.896-41.26 6.209-16.51 24.763-24.84 41.403-18.58Zm-2.266 14.01c-9.244-3.48-19.321.54-22.492 8.97-3.171 8.43 1.758 18.1 11.002 21.58 9.243 3.47 19.324-.55 22.495-8.98 3.171-8.43-1.761-18.1-11.005-21.57Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M727.011 1203.22c.102.03 15.042 4.07 20.924 20.38 7.243 20.08-5.758 41.9-27.46 45.18-16.293 2.48-32.62-7.16-38.089-23.4-6.646-19.72 5.736-40.97 26.522-44.34 9.275-1.5 16.117 1.37 18.103 2.18Zm-.422 1.12h-.002c-.074-.03-12.974-5.03-26.011 2.84-15.586 9.42-19.107 30.1-7.945 43.95 10.43 12.92 30.022 15.07 42.884 3.82 12.353-10.8 13.675-30.17 1.851-43.02-4.512-4.89-9.311-6.93-10.777-7.59Zm-1.','845 12.88c13.531 4.15 17.963 19.41 9.66 29.04-8.421 9.77-25.247 8.81-32.95-2.82-7.656-11.57-1.296-26.18 12.458-27.99 2.608-.35 5.039.04 5.47.12 2.863.46 4.918 1.45 5.362 1.65Zm-.418 1.12c-1.397-.36-6.058-1.67-11.664.58-9.067 3.64-11.769 14.57-4.67 22.02 5.372 5.63 15.068 7.43 21.664 2.21 7.475-5.91 6.256-18.51-4.337-24.3-.25-.14-.249-.14-.997-.51h.004Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" fill-rule="evenodd" d="M735.105 1100.31c12.448 13.61 11.979 34.34-1.041 46.24-13.025 11.91-33.702 10.52-46.15-3.1-12.449-13.61-11.984-34.33 1.041-46.24 13.02-11.9 33.702-10.52 46.15 3.1Zm-8.298 11.54c-6.915-7.57-17.923-8.78-24.572-2.7-6.65 6.08-6.435 17.16.48 24.72 6.915 7.57 17.928 8.77 24.578 2.69 6.649-6.08 6.429-17.15-.486-24.71Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M735.555 1099.9c.109.11 11.964 10.86 10.103 28.33-2.304 21.58-23.989 35.06-45.34 27.63-15.769-5.5-26.372-21.63-24.398-38.81 2.414-20.98 23.019-34.65 43.682-27.92 9.398 3.06 14.497 9.08 15.953 10.77Zm-.894.81-.004.01c-.06-.06-9.669-10.75-25.124-9.91-18.271 1.01-30.639 17.6-26.81 35.32 3.671 16.99 21.077 28.66 38.066 24.4 16.052-4.02 25.522-20.99 20.239-38.14-1.97-6.38-5.346-10.39-6.367-11.68Zm-7.3','99 10.72c.857.83 6.636 6.13 6.557 15.13-.103 11.91-11.862 20.25-24.691 15.7-13.042-4.63-18.848-20.06-12.367-30.8 3.637-6.02 9.497-7.39 10.512-7.63 5.541-1.29 13.82-.15 19.989 7.6Zm-.899.82c-1.065-.93-4.794-4.4-10.986-5.06-8.771-.94-16.168 5.71-14.499 15.42 1.288 7.53 8.912 15.48 18.121 14.75 9.378-.75 14.772-11.44 9.434-21.86-.926-1.81-1.954-3.08-2.076-3.24l.006-.01Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M745.242 982.53c12.317 4.633 18.638 18.18 14.107 30.23-4.533 12.05-18.212 18.07-30.529 13.44-12.318-4.64-18.64-18.18-14.107-30.231 4.531-12.047 18.211-18.071 30.529-13.439Zm-1.626 10.231c-6.842-2.573-14.274.329-16.588 6.481-2.314 6.148 1.362 13.238 8.205 15.808 6.842 2.58 14.277-.33 16.591-6.48 2.313-6.15-1.365-13.235-8.208-15.809Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M745.397 982.119c14.25 4.863 19.949 19.521 15.623 31.611-5.915 16.54-27.233 22.09-40.981 10.15-10.682-9.28-11.951-25.797-2.081-36.125 5.311-5.554 15.616-10.459 27.439-5.636Zm-.308.818-.001.004c-16.755-5.291-31.268 7.699-29.722 22.599 1.489 14.37 16.68 23.29 29.968 18.29 14.581-5.48 18.584-23.919 7.556-35.493-3.288-3.447-6.71-4.903-7.801-5.4Zm-1.316 9.409c.7.225 6.075 1.651 8.','968 7.454 4.18 8.38-1.807 18.58-12.908 18.66-7.902.06-15.624-6.41-15.63-14.87-.008-9.468 10.07-15.45 19.248-11.388.108.047.214.097.322.144Zm-.311.827c-.098-.026-5.427-1.801-10.448 1.308-6.131 3.795-6.124 12.289.337 16.709 8.002 5.47 18.327.83 17.612-7.98-.162-2-.938-4.022-2.251-5.793-2.144-2.896-4.984-4.112-5.25-4.244Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M838.711 980.894c12.317 4.632 18.637 18.179 14.107 30.226-4.533 12.05-18.212 18.07-30.529 13.44-12.318-4.63-18.64-18.18-14.107-30.227 4.53-12.047 18.211-18.072 30.529-13.439Zm-1.626 10.231c-6.842-2.574-14.275.328-16.588 6.48-2.314 6.155 1.362 13.235 8.204 15.815 6.843 2.57 14.277-.34 16.591-6.49 2.314-6.15-1.364-13.232-8.207-15.805Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M838.866 980.483c14.25 4.862 19.949 19.527 15.623 31.617-5.915 16.53-27.233 22.09-40.981 10.14-10.682-9.27-11.951-25.794-2.081-36.122 5.311-5.554 15.616-10.459 27.439-5.635Zm-.308.817-.002.005c-16.754-5.292-31.267 7.699-29.722 22.595 1.49 14.37 16.68 23.3 29.969 18.3 14.581-5.49 18.584-23.926 7.556-35.5-3.288-3.446-6.711-4.903-7.801-5.4Zm-1.316 9.409c.7.225 6.074 1.651 8.968'));
      
        return render;
      }

    function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(' 7.454 4.179 8.387-1.808 18.577-12.908 18.667-7.902.05-15.624-6.41-15.63-14.87-.008-9.474 10.07-15.457 19.247-11.394.109.046.215.097.323.143Zm-.311.827c-.098-.026-5.427-1.801-10.449 1.309-6.131 3.794-6.124 12.295.337 16.705 8.003 5.47 18.328.83 17.613-7.97-.162-2.002-.939-4.029-2.252-5.8-2.143-2.896-4.983-4.111-5.249-4.244Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M887.006 992.74c8.938-1.148 17.241 6.058 18.527 16.08 1.288 10.02-4.924 19.09-13.863 20.23-8.938 1.15-17.24-6.05-18.527-16.07-1.287-10.02 4.924-19.092 13.863-20.24Zm2.427 7.72c-4.965.64-8.463 5.3-7.806 10.42.657 5.12 5.222 8.76 10.188 8.12 4.965-.64 8.463-5.31 7.806-10.43-.658-5.12-5.222-8.749-10.188-8.11Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M886.965 992.418c14.152-2.234 24.767 14.442 18.284 28.442-4.025 8.69-14.242 13.09-23.315 8.12-12.206-6.69-13.658-25.01-3.102-33.298 3.619-2.845 7.137-3.16 8.133-3.264Zm.081.637.001.008c-.005 0-6.977.762-10.823 8.147-5.578 10.7.872 24.84 12.141 26.02 9.218.97 17.3-7.99 15.647-19.32-.584-4.01-2.559-8.033-5.596-10.787-5.011-4.55-10.022-4.136-11.37-4.068Zm2.346 7.085c.044-.01 4.063-1.075 7.851 2 6.346 5.1','5 4.52 15.62-3.285 18.29-7.085 2.42-14.477-3.6-13.7-11.26.339-3.34 2.836-8.56 9.134-9.03Zm.083.64c-.004 0-3.414.53-5.441 3.92-3.386 5.65.859 13.12 7.449 12.44 6.323-.66 9.122-8.59 4.703-13.56a8.341 8.341 0 0 0-2.752-2.03c-1.99-.92-3.734-.78-3.959-.77Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" d="M955.27 1034.24c2.597 8.63-1.227 12.29-10.899 15.2-9.677 2.91-19.639-1.73-22.236-10.36-2.597-8.63 1.227-12.29 10.9-15.2 9.676-2.91 19.638 1.73 22.235 10.36Zm-7.212 3.66c-1.443-4.8-6.625-7.48-11.565-6-4.94 1.49-5.856.88-4.413 5.68 1.443 4.79 6.625 7.48 11.565 5.99 4.94-1.49 5.856-.88 4.413-5.67Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M955.582 1034.15c2.086 6.22 1.779 11.23-7.445 15.23-2.325 1.01-9.332 4.2-17.338 1.17-8.318-3.14-10.262-10.16-10.597-11.35-3.031-10.94 4.301-14.47 12.433-16.67 9.436-2.54 20.28 1.69 22.947 11.62Zm-.623.18c-.033-.1-1.929-6.64-9.637-9.22-6.471-2.17-12.033.02-15.097 1.31-6.888 2.91-8.12 6.07-6.283 12.12 2.424 7.96 11.573 11.81 19.839 9.71 3.756-.96 7.954-2.29 10.082-4.86 2.442-2.95 1.626-6.77 1.096-9.06Zm-6.591 3.47c','1.099 2.82 1.701 4.42-1.084 5.58-.215.09-3.494 1.34-4.083 1.51-5.406 1.58-11.221-1.33-12.928-6.77-1.306-4.16-.853-6.11 2.741-7.05.26-.07.466-.12 3.297-.74 4.874-1.07 10.747 1.46 12.057 7.47Zm-.621.19c-2.25-5-7.21-5.85-10.607-4.64-2.961 1.05-3.35 1.09-3.815 1.35.041.35.171 1.22.673 2.68 1.453 4.25 5.776 5.83 9.114 5.17 4.537-.91 4.957-.83 4.982-1.92.019-.88-.219-1.98-.346-2.64h-.001Z" clip-rule="evenodd"/><path fill="',colors[3].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn3(colors),renderFn4(colors),renderFn5(colors),renderFn6(colors)));
      
        return render;
      }
}