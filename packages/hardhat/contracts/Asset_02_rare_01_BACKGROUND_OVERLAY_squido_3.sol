//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_squido_3 {

using ToColor for bytes4;

function renderFn12(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('.97 7.88Zm-15.48 7.51c-2.92-9.54-4.99-10.39-14.72-26.48 0 0 10.23 12.23 13.27 19.31 2.64 6.14 1.45 7.17 1.45 7.17Zm-13.12 13.8c-2.9-10.77-1.67-10.23-7.54-20.63 0 0 7.6 12.82 9.76 18.44 1.87 4.88-2.22 2.19-2.22 2.19Zm-.07-82.33c-3.85-13.05-51.47-35.15-72.57-32.19 19.84-6.85 65.43 8.38 70.32 20.13l2.25 12.06Zm10.18 21.26c8.08 6.82 15.29 15.16 22.54 23.51 0 0-12.71-11.8-16.47-15.71-2.13-2.23-6.07-7.8-6.07-7.8Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1806.45 2603.53c.73-1.52 3.82-.74 2.44-1.49-1.39-.75-3.6-1.81-4.05-.15-2.27 8.44-3.85 5.1-2.47 5.85 1.39.75 3.34-2.68 4.08-4.21Zm-16.76-33.18c-2.45-2.61-8.49-4.13-9.68-3.18-1.18.96 4.91 2.17 7.36 4.79 2.45 2.61 4 5.38 5.19 4.43 1.18-.95-.42-3.42-2.87-6.04Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule=','"evenodd" d="m1816.68 2600.84 10.19 12.21-7.52-6.99-2.67-5.22Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1824.39 2647.17s-3.48-9.25-11.9-14.35l-11.37-4c4.96 6.85 13.19 18.65 15.45 15.21 4.24-6.45.79-3.05 7.82 3.14Zm-40.28-25.52s-9.96-8.47-18.12-12.25c-.97-.45-1.64 1.89-.01 4.77 1.73 3.03 5.7 6.64 2.16 7.91-2.14.77-11.45-12.58-11.56-13.19-.69-3.96-4.19-1.45-4.19-1.45-6.38 8.75-1.59 11.48 3.75 10.75l9.06 6.34 4.59-1.3 3.5-3.55c6.48 4.34 9.46 4.19 10.82 1.97Zm-56.46-21.97s1.09-14.94 4.45-17.22c2.93-1.98 14.12 3.1 14.12 3.1l-.51-12.51c-1.64 5.57.14 7.8-3.86 8.37-9.1-3.22-10.4-1.76-14.83 4.39l.63 13.87Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.386" d="M1754.59 2612.51c','5.42 2.82 11.54 12.64 16.27 8.47.87-.77-8.34-10.61-6.77-10.53 4.53.25 17.38 12.2 20.02 10.79 6.88-3.69-11.4-13.18-12.28-15.04-.88-1.86 17.24 5.55 19.3 3.72 3.9-3.47-17.32-8.96-17.07-10.66.25-1.7 15.73 1.24 15.73-.26 0-4.45-15.3-5.98-15.3-5.98"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.316" d="M1744.48 2608.54c3.12-3.06 1.44-7.21-.22-11.52-1.68-4.36-5.01-8.61-8.13-5.54-3.13 3.06-4.86 12.49-1.61 15.79 3.24 3.29 6.83 4.34 9.96 1.27Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.308" d="M1768.72 2581.16c1.78-3.95-.51-8.53-5.44-10.81-4.92-2.27-10.97.22-12.75 4.17-1.78 3.96 1.99 7.72 6.','92 10 4.92 2.27 9.48.59 11.27-3.36Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.406" d="M1741.61 2596.51c.55-.21 1.45.67 2.03 1.96.57 1.29.6 2.5.06 2.71-.54.2-1.44-.67-2.02-1.96-.58-1.29-.61-2.51-.07-2.71Z"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.241" d="M1754.68 2580.24c.25-.52 1.46-.4 2.71.26 1.25.67 2.07 1.63 1.82 2.15-.25.52-1.46.4-2.72-.26-1.25-.67-2.06-1.63-1.81-2.15Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.171" d="M1613.26 643.559c-5.59 1.104 26.81 11.068 24 7.434 1.28-.462 4.17-3.237 3.21-3.422.23-.802 7.8-4.555 10-9.095 1.99-4.125 1.49-6.762-.76-3.683-3.95 5.383-12.52 7.613-14.23 8.234-1.62-.497-.39-5.217 2.39-10.251 2.37-4.313 2.18-6.687-.56-4.437-5.31 4.353-7.53 10.121-8.2 9.972-.52-.119.45-6.128 2.16-9.861 2.17-4.728 3.19-6.898 2.03-6.977-3.54-.242-10.87 14.008-10.55 16.865-.87.274-.5-3.841.67-8.447 1.02-4.033 2.87-8.603 2.05-8.848-2.72-.809-8.94 15.994-9.35 15.97-1.54-.101 3.06-10.101-.41-8.12-.75.426-3.04 12.833-2.45 14.666Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.171" d="M1641.86 651.773c2.97 4.852 5.15 10.09 2.31 15.182-3.01 5.405-25.72 21.078-35.9 16.78-9.47-4.001-11.52-27.859-9.7-33.919 2.66-8.87 10.36-10.661 14.93-11.06-.52-1.254.63-4.797.37-11.489-.25-6.371-1.83-6.144-.85-7.08 1.01-.969 3.09.207 4.83 3.507 1.89 3.602 1.82 10.22 2.6 10.796.44-.71 1.66-8.612 3.51-13.305 1.68-4.266 4.58-5.34 4.84-1.531.15 2.358-2.32 13.75-1.62 15.426 1.47.856 4.1-3.253 5.91-8.707 1.56-4.67 3.44-6.138 3.65-2.597.39 6.853-2.34 12.395-1.78 12.786.45.302 4.2-4.487 5.79-8.276 2-4.795 2.9-7.021 3.75-6.22 2.58 2.437-2.93 17.484-5.24 19.193.39.82 3.16-2.245 5.75-6.225 2.27-3.484 4.38-7.945 5.11-7.506 2.44 1.448-5.69 17.419-5.39 17.703 1.12 1.062 5.35'));
      
        return render;
      }

    function renderFn13(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('-9.1 6.24-5.207.2.837-.91 5.728-4.38 9.252-2.05 2.081-2.98 1.686-4.73 2.497Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M1614.79 675.899c1.28 0 2.31-.921 2.31-2.058 0-1.136-1.03-2.058-2.31-2.058-1.27 0-2.31.922-2.31 2.058 0 1.137 1.04 2.058 2.31 2.058Z"/><path fill="',colors[3].toColor(),'" d="M1609.32 651.874c1.27 0 2.31-.921 2.31-2.057 0-1.137-1.04-2.058-2.31-2.058-1.28 0-2.31.921-2.31 2.058 0 1.136 1.03 2.057 2.31 2.057Zm26.4 14.039c1.28 0 2.31-.922 2.31-2.058 0-1.137-1.03-2.058-2.31-2.058-1.27 0-2.31.921-2.31 2.058 0 1.136 1.04 2.058 2.31 2.058Z"/><path fill="',colors[2].toColor(),'" d="M1608.92 682.186c1.28 0 2.31-.921 2.31-2.058 0-1.136-1.03-2.058-2.31-2.058-1.27 0-2.31.922-2.31 2.058 0 1.137 1.04 2.058 2.31 2.058Zm-3.59-10.083c1.28 0 2.31-.921 2.31-2.058 0-1.136-1.03-2.058-2.31-2.058-1.27 0-2.31.922-2.31 2.058 0 1.137 1.04 2.058 2.31 2.058Zm15.67 6.587c.48.543 1.42.493 2.1-.11.68-.604.84-1.533.36-2.075-.49-.543-1.43-.493-2.11.11-.68.604-.83 1.533-.35 2.075Zm-18.73-22.377c.77.361 1.67.083 1.99-.621.33-.705-.03-1.568-.81-1.93-.77-.361-1.67-.083-1.99.622-.33.704.03 1.568.81 1.929Zm-.83 7.189c.77.361 1.67.083 1.99-.622.33-.704-.03-1.568-.81-1.929-.77-.361-1.67-.083-1.99.621-.33.705.03 1.568.81 1.93Zm34.64 6.768c.77.361 1.67.083 2-.621.32-.705-.04-1.568-.81-1.93-.78-.361-1.67-.083-2 .622-.33.704.03 1.568.81 1.929Zm-17.28-11.081c.57.267 1.25.032 1.51-.524.26-.557 0-1.22','5-.57-1.492-.58-.268-1.25-.033-1.51.523-.26.557 0 1.225.57 1.493Zm4.73-.971c.58.267 1.25.033 1.51-.524s0-1.225-.57-1.492c-.57-.267-1.25-.033-1.51.524-.26.556 0 1.224.57 1.492Zm-2.22 4.729a1.12 1.12 0 0 0 1.5-.524c.26-.556.01-1.224-.57-1.492-.57-.267-1.25-.032-1.5.524-.26.557-.01 1.225.57 1.492Zm6.76-1.079c.58.268 1.25.033 1.51-.524.26-.556.01-1.224-.57-1.492-.57-.267-1.25-.033-1.51.524s0 1.225.57 1.492Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1634.72 675.062c-6.96 2.317-4.22-.954-7.26.027-.98.319-3.3.277-4.79-.649-1.49-.924-2.1-1.623-2.93-2.133-.65-.403.29 1.68 1.65 2.826.9.763 1.86 1.158 1.45 1.509-2.98 2.497-1.83 5.549-10.34 3.636-10.56-2.374-11.15-22.217-10.51-28.315.55-5.292 2.95-9.448 12.85-12.331l.25-.849c-.1-1.548.52-15.932-1.94-18.345.52 5.052.61 10.894.63 17.'));
      
        return render;
      }

    function renderFn14(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('33-6.21.608-11.16 3.937-14.79 10.093-1.3 14.87-.18 27.541 9.37 36.558 8.74 1.219 21.52-6.205 26.36-9.357Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1644.39 622.834-3.25 16.28 4.45-12.486-1.2-3.794Zm-8.93-.721c.63 4.895-.17 5.652-1.37 14.757 0 0 2.26-7.422 2.2-11.209-.05-3.288-.83-3.548-.83-3.548Zm-9.15-4.033c.91 5.461 1.38 4.994.8 10.806 0 0 .88-7.227.72-10.19-.15-2.572-1.52-.616-1.52-.616Zm17.41 37.837c.94 6.675-2.25 12.321-7.06 17.562 3.84-3.122 8.72-5.363 8.55-11.623l-1.49-5.939Zm.32-11.558c2.39-4.555 4.04-9.656 5.71-14.769 0 0-3.53 7.655-4.48 10.117-.54 1.4-1.23 4.652-1.23 4.652Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1642.7 646.733c1.06.896 2.54.143 2.04.732-.5.588-1.35 1.446-2.3.435-4.79-5.115-4.34-2.881-3.84-3.469.5-.5','88 3.05 1.406 4.1 2.302Zm.87 13.457c.45 1.31-.53 3.691-1.26 3.944-.73.252.4-2.098-.05-3.407-.46-1.31-1.22-2.331-.49-2.583.72-.253 1.34.737 1.8 2.046Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1648.35 647.255 2.25-7.403-2.08 4.533-.17 2.87Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1648.82 646.098c-5.12 4.659-7.77 2.809-11.84-.329l-5.97-3.454c5 3.568 8.92 7.329 11.33 11.361l-.45-2.559c3.29-.205 6.6-3.001 6.93-5.019Zm-30.03 2.752s-1.1 3.522-.63 5.289c.51 1.941 6.11 4.266 7.66 4.356l-6.06-.279c-4.88-2.899-6.21-4.722-3.53-5.327l2.56-4.039Zm-12.39 14.611 7.91 3.063 1.59-1.36-.02 1.97-4.65.739-4.83-4.412Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" ','stroke-width="1.391" d="M1616.45 652.827c1.97-2.252 2.79-7.84 5.92-6.755.57.199-1.71 6.341-.98 6.026 2.1-.911 5.66-8.663 7.2-8.479 4.04.482-2.61 8.06-2.63 9.069-.02 1.009 6.99-5.585 8.36-5.105 2.58.909-6.31 7.165-5.83 7.903.48.737 7.19-3.341 7.51-2.652.94 2.048-5.99 5.442-5.99 5.442"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.382" d="M1612.5 656.428c2.13.859 3.18 3.249 2.34 5.334-.84 2.085-1.84.911-3.97.053-2.13-.859-4.6-1.079-3.76-3.164.84-2.085 3.25-3.081 5.39-2.223Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.422" d="M1629.79 664.742c1.68 1.502 1.56 4.009-.29 5.921-1.85 1.913-','4.11 2.223-5.79.721-1.68-1.502-3.21-4.098-1.36-6.01 1.85-1.913 5.75-2.134 7.44-.632Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.99" d="M1612.12 662.282c.3 0 .54-.563.54-1.257s-.24-1.256-.54-1.256c-.3 0-.54.562-.54 1.256s.24 1.257.54 1.257Zm15.24 7.184c.23.195.78-.073 1.23-.6.45-.527.63-1.112.4-1.308-.22-.195-.77.073-1.23.6-.45.527-.63 1.112-.4 1.308Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.078" d="M894.595 166.73c1.342-4.993-19.887 16.28-15.772 15.741-.136 1.24.98 4.86 1.516 4.182.568.559.602 8.389 3.446 12.285 2.583 3.541 4.951 4.378 3.331 1.122-2.832-5.693-1.21-13.613-1.033-15.272 1.062-1.067 4.44 2.142 7.457 6.735 2.585 3.931 4.613 4.893 3.87 1.637-1.438-6.3-5.281-10.79-4.889-11.258.307-.361 4.851 3.244 7.228 6.371 3.012 3.956 4.381 5.799 4.913 4.905 1.625-2.722-7.128-15.295-9.6-16.389.123-.821 3.352 1.414 6.665 4.514 2.903 2.714 5.909 6.348 6.442 5.803 1.758-1.796-9.535-14.688-9.349-15.005.702-1.185 7.062 7.204 6.832 3.493-.05-.798-9.314-8.473-11.057-8.864Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.078" d="M876.332 185.786c-5.183.102-10.361-.617-13.4-5.287-3.227-4.954-6.951-30.528.676-36.66 7.102-5.711 27.52 3.872 31.765 8.177 6.212 6.306 4.581 13.321 3.069 17.17 1.24.171 3.688 2.757 9.288 5.697 5.332 2.798 6.042-.438 6.417.787.388 1.267-1.675 4.241-5.084 4.08-3.721-.176-9.128-3.345-9.917-2.989.408.684 6.405 5.38 9.516 9.067 2.828 3.35.503 4.18-2.729 2.597-2.001-.982-8.322-6.324-9.98-6.55-1.294.772 1.021 4.812 4.769 8.834 3.208 3.446 3.657 5.639.666 4.139-5.788-2.903-9.239-7.7-9.788-7.432-.425.211 1.996 5.474 4.469 8.525 3.13 3.864 1.319 3.132.323 3.436-3.042.917-9.906-8.072-10.379-10.728-.829-.077.573 3.585 2.797 7.536 1.946 3.46 4.763 7.242 4.105 7.627-2.17 1.2'));
      
        return render;
      }

    function renderFn15(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('72-12.014-12.752-12.367-12.648-1.322.396 5.321 8.564 1.762 7.452-.765-.239-4.335-3.429-5.833-7.863-.885-2.62-.182-3.186-.145-4.967Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M867.419 152.749c-.514 1.022-.173 2.284.76 2.818.933.535 2.106.14 2.62-.882.513-1.022.173-2.283-.761-2.818-.933-.534-2.106-.139-2.619.882Z"/><path fill="',colors[3].toColor(),'" d="M889.352 159.663c-.513 1.022-.173 2.284.761 2.818.933.535 2.106.14 2.619-.882.514-1.022.173-2.283-.76-2.818-.933-.534-2.106-.139-2.62.882Zm-22.162 14.556c-.513 1.022-.173 2.283.761 2.818.933.534 2.106.139 2.619-.882.514-1.022.173-2.284-.76-2.818-.933-.535-2.106-.14-2.62.882Z"/><path fill="',colors[2].toColor(),'" d="M864.618 145.089c-.514 1.022-.173 2.283.76 2.818.934.534 2.107.139 2.62-.882.513-1.022.173-2.284-.76-2.818-.934-.535-2.107-.14-2.62.882Zm9.728 1.865c-.513 1.022-.173 2.284.761 2.818.933.535 2.106.14 2.62-.882.513-1.022.173-2.283-.761-2.818-.933-.534-2.106-.139-2.62.882Zm-11.72 9.456c-.64.131-.978.909-.756 1.736.223.828.921 1.392 1.561 1.261.64-.132.979-.909.756-1.737-.222-.827-.921-1.391-1.561-1.26Zm25.921-4.486c-.609.452-.741 1.299-.294 1.893.446.595 1.301.71 1.91.259a1.348 1.348 0 0 0 .294-1.893c-.446-.594-1.301-.71-1.91-.259Zm-5.57-4.046a1.35 1.35 0 0 0-.295 1.894c.447.594 1.302.71 1.911.258.609-.451.74-1.299.294-1.893-.446-.594-1.302-.71-1.91-.259Zm-19.508 24.576a1.35 1.35 0 0 0-.295 1.894c.447.594 1.302.71 1.911.258a1.348 1.348 0 0 0 .294-1.893c-.446-.594-1.301-.71-1.91-.259Zm16.','059-8.635c-.451.335-.531.986-.178 1.456.353.469 1.004.579 1.455.245.451-.334.53-.986.177-1.455-.352-.47-1.004-.58-1.454-.246Zm-1.11 4.25c-.451.335-.53.986-.177 1.456.353.469 1.004.579 1.455.245.45-.334.53-.986.177-1.455-.353-.47-1.004-.58-1.455-.246Zm-2.986-4.009c-.451.334-.53.985-.178 1.455.353.47 1.005.579 1.455.245.451-.334.53-.985.178-1.455-.353-.47-1.004-.58-1.455-.245Zm-1.84 5.93c-.451.334-.53.986-.177 1.456.352.469 1.004.579 1.454.245.451-.334.531-.986.178-1.455-.353-.47-1.004-.58-1.455-.246Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M878.917 187.141c1.231 4.369 11.334 12.135 11.539 15.443.075 1.213-1.473-4.091-3.146-.676-.497 1.015-1.97-1.512-4.079-3.138-5.017-3.869-9.108-10.826-6.376-12.65l-1.376-.51c-2.966.035-5.651.061-8.371-1.51-1.794-1.036-3.694-3.21-5.379-4'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn12(colors),renderFn13(colors),renderFn14(colors),renderFn15(colors)));
      
        return render;
      }
}