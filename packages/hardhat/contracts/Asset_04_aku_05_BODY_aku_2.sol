//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_04_aku_05_BODY_aku_2 {

using ToColor for bytes4;

function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.573" d="M832.55 2207.94c26.382 7.1 54.342 43.5 51.172 62.3-5.051 30.02-38.209 37.92-64.591 30.83-26.36-7.09-42.109-31.95-35.974-61.77 6.13-29.8 23.033-38.44 49.393-31.36Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".3" stroke-width="5.715" d="M842.999 2271.39c6.828 1.84 13.763-3.48 15.49-11.87 1.727-8.4-2.408-16.69-9.236-18.53-6.828-1.83-13.763 3.49-15.491 11.88-1.727 8.4 2.409 16.69 9.237 18.52Z"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.573" d="M888.208 2367.02c26.36 7.09 67.533 42.72 61.912 64.24-7.677 29.44-41.183 37.61-67.565 30.52-26.36-7.09-42.196-28.68-36.061-58.51 6.13-29.79 15.332-43.34 41.714-36.25Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".3" stroke-width="5.715" d="M906.336 2435.37c6.828 1.84 13.763-3.48 15.49-11.87 1.727-8.4-2.408-16.69-9.236-18.53-6.828-1.84-13.764 3.48-15.491 11.88-1.727 8.39 2.409 16.69 9.237 18.52Z"/><path fill="#fff" fill-rule="evenodd" d="m713.608 2187.55.353-.39c1.857 1.39 3.757 2.81 7.29 6.65 2.375 2.58 5.616 6.93 7.487 10.69 2.078 4.18 3.506 8.89 4','.016 13.22.809 6.88-.967 10.79-1.372 11.78l-.499-.15c1.022-5.26.345-10.83-4.243-20.2-7.819-15.95-12.125-20.55-13.032-21.6Zm141.649 45.94.353-.39c1.857 1.39 3.757 2.81 7.29 6.65 2.375 2.58 5.616 6.93 7.487 10.69 2.078 4.18 3.506 8.89 4.016 13.22.809 6.88-.967 10.79-1.372 11.78l-.499-.15c1.022-5.26.345-10.83-4.243-20.2-7.819-15.95-12.125-20.55-13.032-21.6Zm-86.432 119.67.353-.39c1.857 1.39 3.757 2.81 7.29 6.65 2.375 2.58 5.616 6.93 7.487 10.69 2.078 4.18 3.506 8.89 4.016 13.22.809 6.88-.967 10.79-1.372 11.78l-.499-.15c1.022-5.26.345-10.83-4.243-20.2-7.819-15.95-12.125-20.55-13.032-21.6Zm147.738 40.54.26-.37c2.025 1.13 4.096 2.28 8.107 5.62 2.696 2.24 6.485 6.13 8.838 9.6 2.614 3.87 4.654 8.35 5.733 12.58 1.714 6.71.472 10.82.202 11.85l-.514-.08c.283-4.8-.65-10.48-7.71-20.68-1.788-2.59-8.561-','12.8-14.661-18.2-.153-.14-.126-.15-.255-.32Z" clip-rule="evenodd"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.601" d="M1512.07 2155.57c-23.8 5.14-55.84 44.78-54.32 59.89 2.71 27.14 26.83 32.76 50.65 27.61 23.8-5.14 42.68-23.17 38.23-50.1-4.44-26.9-10.74-42.55-34.56-37.4Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".3" stroke-width="5.749" d="M1492.05 2218.94c-6.17 1.34-12.18-3.73-13.43-11.31-1.26-7.58 2.73-14.8 8.89-16.13 6.17-1.34 12.18 3.73 13.43 11.31s-2.73 14.8-8.89 16.13Z"/><path fill="',colors[6].toColor()));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.601" d="M1449.91 2310.07c-23.8 5.14-53.37 48.76-51.19 65.73 3.5 27.05 27.12 34.47 50.94 29.33 23.8-5.14 39.8-21.04 35.35-47.97-4.45-26.9-11.28-52.23-35.1-47.09Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".3" stroke-width="5.749" d="M1430.42 2383.13c-6.16 1.33-12.17-3.73-13.43-11.31-1.25-7.58 2.73-14.8 8.9-16.14 6.16-1.33 12.18 3.74 13.43 11.32s-2.73 14.8-8.9 16.13Z"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.621" d="M1379.9 2186.4c-26.61 5.75-64.76 51.11-62.37 66.9 4.58 30.15 31.5 30.89 58.13 25.14 26.61-5.75 44.73-21.98 39.76-52.08-4.97-30.08-8.89-45.71-35.52-39.96Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".3" stroke-width="5.739" d="M1354.39 2255.39c-6.89 1.49-13.61-4.17-15.01-12.64-1.4-8.48 3.05-16.55 9.94-18.04 6.9-1.49 13.62 4.17 15.02 12.65 1.4 8.47-3.05 16.55-9.95 18.03Z"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.621" d="M1305.34 2337.66c-26.61 5.75-66.58 56.13-61.83 75.39 7.3 29.6 35.68 38.89 62.29 33.14 26.63-5.75 44.97-29.12 40-59.22-4.97-30.08-13.83-55.06-40.46-49.31Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".3" stroke-width="5.739" d="M1284.77 2416.01c-6.89 1.48-13.61-4.18-15.01-12.65-1.4-8.48 3.05-16.55 9.94-18.04 6.89-1.49 13.62 4.17 15.02 12.65 1.4 8.47-3.06 16.55-9.95 18.04Z"/><path fill="#fff" fill-rule="evenodd" d="m1537.94 2202.61-.46-.04c-.01-.11-.06-.2-.07-.3-.11-.8.05-.82-.48-4.62-.98-7.01-4.54-19.4-6.33-24.03-3.53-9.18-7.87-11.82-9.04-12.62l.25-.','46c.75.31 7.1 2.51 12.33 12.79 2.59 5.1 5.06 12.51 4.46 23.94-.14 2.6-.57 4.75-.66 5.34Zm-131.35 32.83-.46-.04c-.01-.1-.06-.19-.07-.29-.11-.81.05-.82-.49-4.62-1-7.01-4.61-19.39-6.4-24.02-3.56-9.16-7.92-11.79-9.08-12.59l.25-.46c.74.31 7.1 2.48 12.36 12.75 2.61 5.1 5.1 12.49 4.54 23.93-.13 2.6-.56 4.75-.65 5.34Zm67.11 123.27-.45-.03c-.02-.11-.07-.2-.08-.3-.11-.8.04-.82-.53-4.61-1.04-7.01-4.73-19.35-6.56-23.97-3.62-9.14-8-11.74-9.17-12.53l.25-.46c.75.3 7.12 2.43 12.45 12.66 2.64 5.08 5.19 12.46 4.7 23.9-.11 2.6-.52 4.75-.61 5.34Zm-138.33 30.14c-.09-.07-.25.01-.34-.05-.37-.26.07-.42-.6-5.05-.99-6.8-4.97-18.06-6.84-22.16-3.26-7.19-6.91-10.21-8.21-11.24-.09-.07-.17-.17-.27-.21-.1-.04-.22 0-.31-.04l.36-.6c2.25 1.16 8.55 4.26 13.69 14.92.74 1.53 3.7 8.01 3.39 17.71-.1 3.39-.51 5.05-.87 6.72Z" clip','-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".3" stroke-width="6.002" d="M1356.8 1021.61s168.43 205.95 167.9 337.63c-.9 228.59-108.74 465.15-108.74 465.15 109.69-302.53 61.79-579.81-59.16-802.78Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1462.41 2212.28c9.22 15.3 38.57 23.5 58.61 22.97 0 0-24.39 17.14-48.05 1.43-14.19-9.42-10.56-24.4-10.56-24.4Zm-142.32 39.78c23.49 16.05 58.37 18.7 81.87 11.94 0 0-23.4 23.27-65.35 17.61-10.14-1.37-16.52-29.55-16.52-29.55Zm80.78 122.02c16.96 15.54 41.54 22.68 73.17 22.04 0 0-48.2 11-58.52 8.27-9.86-2.6-14.65-30.31-14.65-30.31Zm-152.72 33.01c20.85 23.44 54.47 32.08 78.98 28.7 0 0-42.94 19.23-69.45 7.67-11.25-','4.91-9.53-36.37-9.53-36.37Zm-457.485-176.75c1.037 30.5 18.985 52.73 56.494 65.19 0 0-37.654 11.35-54.28-12.23-14.972-21.24-2.214-52.96-2.214-52.96Zm60.701 163.82c12.427 32.63 36.252 53.66 70.274 64.29 0 0-43.748 16.37-66.264-6.89-21.722-22.44-4.01-57.4-4.01-57.4Zm-101.015 19.6c-16.219-11.29-25.744-30.54-30.552-55.39 0 0-29.767 24.51-12.238 45 19.428 22.72 42.79 10.39 42.79 10.39Zm-85.28-232.94c-3.669 29.05 9.403 52.46 40.663 69.74-16.828 10.22-34.862 4.51-54.015-15.96-8.2-27.46-4.291-45.79 13.352-53.78Z" clip-rule="evenodd"/>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn8(colors),renderFn9(colors)));
      
        return render;
      }
}