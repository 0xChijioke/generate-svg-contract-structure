//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_02_POD_gunner_3 {

using ToColor for bytes4;

function renderFn14(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.932" d="M696.195 1256.62c-5.722 6.89-15.124 15.4-26.48 12.22-9.679-2.7-20.966-15.81-30.578-24.9-10.369-9.8-22.843-22.05-26.251-32.65-3.46-10.75 2.257-19.82 7.596-26.24 5.554-6.69 12.523-13.11 23.474-10.3 9.942 2.56 23.643 13.58 33.588 22.98 9.818 9.28 24.103 20.01 27.719 30.12 4.078 11.4-3.45 22.01-9.068 28.77Zm-16.524-16.29c-2.479 2.98-6.485 7.41-11.793 6.21-6.041-1.36-13.581-8.89-19.14-14.15-5.855-5.53-12.389-12.57-13.741-18.4-1.062-4.58 2.087-8.24 4.416-11.05 2.426-2.92 5.801-7.53 10.421-6.79 5.476.87 12.442 7.77 18.108 13.13 5.798 5.48 15.054 13.74 17.102 19.98 1.639 4.99-3.015 8.23-5.373 11.07Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.924" d="M619.992 1159.28c-8.486-.85-20.298-3.93-24.338-15.69-3.446-10.02.105-27.67 1.549-41.45 1.559-14.87 3.785-33.03 9.901-42.32 6.205-9.44 16.349-9.9 24.267-9.1 8.237.82 17.079 3.04 21.162 14.23 3.709 10.16 3.121 28.65 1.626 42.91-1.476 14.08-1.513 32.9-7.145 42.09-6.349 10.36-18.691 10.17-27.022 9.33Zm2.994-24.1c-3.676-.37-9.321-1.19-11.426-6.52-2.394-6.07-.955-17.12-.119-25.09.88-8.39 2.514-18.28 6.181-22.94 2.875-3.66 7.449-3.11 10.904-2.77 3.597.36 9.018.54 11.085 4.99 2.449 5.28 1.16 15.46.309 23.58-.871 8.31-1.889 21.29-5.465 26.8-2.864 4.41-7.973 2.31-11.469 1.95Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.712" d="m879.408 972.737-2.346-14.084s25.842-3.879 26.607 3.634c1.536 15.106-17.385 87.003-17.385 87.003s-3.366 22.16-13.535 14.41c-10.17-7.75-4.189-17.98-4.189-17.98l10.848-72.983Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.714" d="m864.679 1094.91.271-14.35s25.962 1.56 25.342 9.11c-1.249 15.19-32.833 82.03-32.833 82.03s-7.324 21.12-15.852 11.37c-8.528-9.74-.819-18.57-.819-18.57l23.891-69.59Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn15(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.233" d="m772.637 1253.34-11.106 5.4s13.05 23.59 18.678 20.31c11.315-6.61 49.213-59.94 49.213-59.94s13.181-14.38 1.672-18.82c-11.51-4.44-14.904 5.89-14.904 5.89l-43.553 47.16Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.231" d="m725.842 1280.37 6.632 10.71s19.82-18.13 15.951-23.45c-7.78-10.71-62.628-40.78-62.628-40.78s-15.23-11.23-17.611 1.72c-2.382 12.96 7.658 14.62 7.658 14.62l49.998 37.18Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.228" d="m634.568 1134.03 1.582-12.87s-25.848.14-26.209 6.94c-.723 13.67 21.863 75.06 21.863 75.06s4.514 19.27 14.194 10.95 3.203-16.6 3.203-16.6l-14.633-63.48Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.224" d="m641.127 1012.12 5.347-11.72s-24.376-8.719-26.753-2.364c-4.779 12.774-1.922 79.034-1.922 79.034s-1.527 19.91 10.079 15.3c11.607-4.61 7.991-14.72 7.991-14.72l5.258-65.53Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn16(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.955" d="M921.608 919.91c9.832.053 23.735 1.773 29.727 11.683 5.11 8.446 3.074 24.091 3.008 36.205-.07 13.069-.527 29.06-6.469 37.642-6.028 8.72-17.61 9.94-26.783 9.89-9.543-.05-19.941-1.25-25.916-10.67-5.428-8.544-6.888-24.685-6.82-37.22.067-12.373-2.062-28.762 3.336-37.217 6.087-9.533 20.265-10.365 29.917-10.313Zm-.653 21.217c4.26.023 10.83.287 13.86 4.753 3.446 5.085 3.071 14.823 3.033 21.829-.04 7.379-.773 16.114-4.441 20.471-2.875 3.417-8.185 3.316-12.187 3.294-4.168-.022-10.406.265-13.291-3.443-3.418-4.395-3.115-13.36-3.076-20.501.039-7.307-.292-18.687 3.174-23.771 2.776-4.072 8.878-2.654 12.928-2.632Z" clip-rule="evenodd"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.955" d="M907.154 934.714c3.672 6.862 15.038 16.42 20.348 12.542 5.811-4.243.838-47.495.838-47.495l-22.867 6.322s-1.99 21.769 1.681 28.631Zm7.452 92.366c9.832.06 23.736 1.77 29.727 11.69 5.11 8.44 3.074 24.09 3.008 36.2-.07 13.07-.527 29.06-6.469 37.65-6.028 8.71-17.61 9.94-26.783 9.89-9.543-.06-19.941-1.26-25.916-10.68-5.428-8.54-6.888-24.68-6.82-37.22.067-12.37-2.062-28.76 3.336-37.21 6.087-9.54 20.265-10.37 29.917-10.32Zm-.652 21.22c4.259.02 10.829.29 13.859 4.75 3.446 5.09 3.071 14.82 3.033 21.83-.04 7.38-.773 16.11-4.441 20.47-2.875 3.42-8.185 3.32-12.187 3.3-4.168-.03-10.406.26-13.291-3.45-3.418-4.39-3.115-13.36-3.076-20.5.039-7.31-.292-18.68 3.174-23.77 2.776-4.0','7 8.878-2.65 12.929-2.63Z" clip-rule="evenodd"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.24" d="M920.547 1129.53c8.078-.48 19.527.49 24.608 10.13 4.334 8.22 2.914 24.07 3.055 36.26.152 13.15.035 29.26-4.708 38.23-4.811 9.09-14.307 10.96-21.843 11.41-7.841.47-16.402-.18-21.462-9.32-4.597-8.3-6.056-24.46-6.202-37.07-.144-12.46-2.158-28.83 2.14-37.63 4.848-9.92 16.482-11.53 24.412-12.01Zm-.195 21.38c3.5-.21 8.901-.3 11.463 4.03 2.912 4.92 2.761 14.74 2.843 21.79.086 7.43-.376 16.25-3.319 20.84-2.307 3.59-6.67 3.78-9.958 3.98-3.425.2-8.545.83-10.974-2.74-2.879-4.23-2.775-13.27-2.858-20.46-.085-7.35-.54-18.78 2.225-24.08 2.215-4.25 7.25-3.16 10.578-3.36Z" clip-rule="evenodd"/><path fill="',colors[13].toColor()));
      
        return render;
      }

    function renderFn17(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.245" d="M910.176 1331.58c-7.482-1.41-17.623-5.1-19.551-16.2-1.645-9.46 4.076-25.41 7.354-37.96 3.536-13.55 8.145-30.07 14.963-38.16 6.918-8.21 16.075-7.89 23.055-6.58 7.262 1.37 14.868 4.05 16.915 14.63 1.861 9.61-1.327 26.55-4.718 39.54-3.349 12.82-6.092 30.11-12.46 38.14-7.181 9.05-18.213 7.97-25.558 6.59Zm6.151-21.92c-3.241-.61-8.18-1.78-9.3-6.83-1.272-5.75 1.608-15.79 3.504-23.06 1.997-7.64 4.883-16.6 8.841-20.62 3.102-3.15 7.123-2.31 10.169-1.74 3.172.6 8.004 1.15 9.216 5.4 1.434 5.03-1.185 14.28-3.117 21.68-1.978 7.57-4.757 19.42-8.754 24.22-3.202 3.84-7.476 1.53-10.559.95Z" clip-rule="evenodd"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.248" d="M913.111 1338.97c7.133-2.88 18.007-5.38 27.085 2.22 7.739 6.48 13.761 21.91 19.517 33.41 6.208 12.4 13.538 27.69 13.356 37.59-.183 10.05-7.969 14.65-14.624 17.34-6.923 2.78-15.018 4.73-23.846-2.41-8.017-6.48-16.804-21.34-22.759-33.23-5.878-11.74-15.268-26.64-15.416-36.25-.166-10.85 9.685-15.85 16.687-18.67Zm9.691 20.29c3.09-1.24 7.966-2.95 12.295.38 4.927 3.8 9.32 13.13 12.649 19.78 3.506 7 7.159 15.5 6.595 20.72-.441 4.09-4.328 5.57-7.232 6.74-3.023 1.22-7.395 3.35-11.256.69-4.576-3.14-8.652-11.73-12.044-18.5-3.472-6.94-9.162-17.62-9.092-23.47.056-4.68 5.146-5.15 8.085-6.34Z" clip-rule="evenodd"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.237" d="M913.168 1535.71c-7.576-2.98-17.728-8.75-18.973-19.85-1.064-9.45 5.85-23.54 10.036-34.89 4.517-12.25 10.329-27.13 17.85-33.42 7.632-6.39 16.996-4.08 24.064-1.29 7.354 2.9 14.973 7.14 16.374 17.77 1.276 9.64-3.108 25.23-7.439 36.98-4.276 11.6-8.226 27.63-15.282 33.96-7.957 7.13-19.193 3.68-26.63.74Zm7.747-19.72c-3.282-1.3-8.266-3.51-9.083-8.61-.925-5.8 2.689-14.83 5.11-21.4 2.55-6.92 6.099-14.9 10.419-17.9 3.388-2.35 7.455-.67 10.539.55 3.211 1.26 8.128 2.86 9.09 7.2 1.14 5.15-2.155 13.48-4.623 20.17-2.525 6.85-6.154 17.64-10.567 21.38-3.534 2.99-7.763-.16-10.885-1.39Z" clip-rule="evenodd"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.955" d="m910.781 991.971-3.947-11.949s23.969-6.246 25.613.183c3.306 12.926-5.778 77.375-5.778 77.375s-.466 19.58-11.035 14c-10.57-5.58-6.167-15.12-6.167-15.12l1.314-64.489Z" clip-rule="evenodd"/><path fill="',colors[13].toColor()));
      
        return render;
      }

    function renderFn18(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.957" d="m923.053 1094.06 3.685-11.95s-24.031-6.48-25.537-.05c-3.026 12.93 7.381 77.65 7.381 77.65s.875 19.66 11.297 14.15c10.424-5.5 5.833-15.11 5.833-15.11l-2.659-64.69Z" clip-rule="evenodd"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.522" d="m915.601 1260.12-4.228 11.19s23.017 4.65 24.827-1.35c3.64-12.05-2.988-71-2.988-71s.209-18.02-10.222-12.39c-10.431 5.63-6.486 14.21-6.486 14.21l-.903 59.34Zm15.946 43.36 2.704-11.35s-23.044-5.79-24.049.31c-2.019 12.27 11.93 73.31 11.93 73.31s2.084 18.57 11.545 13.22 4.523-14.37 4.523-14.37l-6.653-61.12Z" clip-rule="evenodd"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.517" d="m942.341 1410.02 4.291-10.37s-23.42-8-25.256-2.37c-3.691 11.31 3.106 70.24 3.106 70.24s-.195 17.69 10.411 13.71c10.607-3.99 6.585-13.01 6.585-13.01l.863-58.2Z" clip-rule="evenodd"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.509" d="m942.779 1517.09 3.621-10.76s-24.126-4.84-25.596.94c-2.953 11.61 7.872 68.73 7.872 68.73s.997 17.44 11.41 12.14c10.414-5.29 5.754-13.65 5.754-13.65l-3.061-57.4Z" clip-rule="evenodd"/><path fill="',colors[14].toColor()));
      
        return render;
      }

    function renderFn19(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.587" d="M977.227 894.686c10.519 0 25.403 1.791 31.873 12.55 5.51 9.169 3.42 26.223 3.42 39.419 0 14.235-.39 31.657-6.7 41.045-6.396 9.53-18.78 10.931-28.593 10.931-10.208 0-21.338-1.254-27.785-11.473-5.856-9.276-7.511-26.85-7.511-40.503 0-13.478-2.373-31.318 3.352-40.559 6.457-10.42 21.619-11.41 31.944-11.41Zm-.575 23.114c4.557 0 11.587.249 14.854 5.096 3.715 5.519 3.371 16.127 3.371 23.759 0 8.038-.733 17.557-4.632 22.325-3.056 3.739-8.736 3.66-13.018 3.66-4.458 0-11.13.35-14.238-3.672-3.681-4.767-3.41-14.534-3.41-22.313 0-7.959-.42-20.353 3.258-25.912 2.946-4.451 9.482-2.943 13.815-2.943Z" clip-rule="evenodd"/><path fill="',colors[14].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.587" d="M962.837 920.745c3.968 7.453 16.182 17.797 21.841 13.541 6.191-4.656.62-51.739.62-51.739l-24.425 7.021s-2.003 23.724 1.964 31.177Zm12.322 90.045c10.518 0 25.401 1.79 31.871 12.55 5.51 9.17 3.43 26.23 3.43 39.42 0 14.24-.4 31.66-6.71 41.05-6.395 9.53-18.778 10.93-28.591 10.93-10.209 0-21.339-1.26-27.786-11.47-5.855-9.28-7.51-26.85-7.51-40.51 0-13.48-2.374-31.32 3.352-40.56 6.456-10.42 21.619-11.41 31.944-11.41Zm-.575 23.12c4.556 0 11.586.25 14.854 5.09 3.715 5.52 3.371 16.13 3.371 23.76 0 8.04-.734 17.56-4.632 22.33-3.056 3.74-8.737 3.66-13.018 3.66-4.459 0-11.13.35-14.238-3.67-3.682-4.77-3.41-14.54-3.41-22.32 0-7.96-.42-20.35 3.258-25.91 2.946-4.45 9.482-2.94 1','3.815-2.94Z" clip-rule="evenodd"/><path fill="',colors[14].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.811" d="M972.557 1132.31c8.393 2.3 19.794 7.28 22.109 19.07 1.976 10.05-4.198 26.04-7.686 38.77-3.764 13.72-8.686 30.44-16.199 38.11-7.625 7.8-17.876 6.44-25.705 4.29-8.146-2.23-16.695-5.87-19.137-17.14-2.219-10.23 1.106-27.54 4.716-40.7 3.563-13 6.386-30.73 13.398-38.39 7.906-8.63 20.266-6.27 28.504-4.01Zm-6.57 22.16c3.636 1 9.179 2.78 10.505 8.17 1.505 6.13-1.574 16.29-3.592 23.65-2.125 7.75-5.227 16.77-9.598 20.51-3.427 2.94-7.939 1.62-11.355.69-3.557-.98-8.973-2.1-10.389-6.66-1.677-5.4 1.122-14.76 3.178-22.26 2.105-7.68 5.046-19.73 9.45-24.28 3.528-3.65 8.344-.77 11.801.18Zm-36.764 90.77c3.853 7.8 7.698 19.64.42 29.2-6.201 8.15-22.257 14.15-34.089 20-12.764 6.3-28.','53 13.72-39.258 13.2-10.888-.53-16.68-9.1-20.275-16.38-3.739-7.57-6.692-16.38.109-25.69 6.172-8.45 21.323-17.46 33.566-23.5 12.085-5.97 27.211-15.63 37.594-15.47 11.708.17 18.151 10.98 21.933 18.64Zm-20.936 9.81c1.669 3.38 4.021 8.7.872 13.27-3.588 5.2-13.226 9.65-20.069 13.02-7.208 3.56-16.011 7.23-21.714 6.45-4.472-.61-6.482-4.86-8.051-8.03-1.633-3.31-4.39-8.1-1.923-12.19 2.927-4.84 11.784-8.97 18.758-12.41 7.137-3.52 18.096-9.32 24.427-9.06 5.07.22 6.112 5.74 7.7 8.95Zm-84.53 4.7c-4.849 7.22-13.198 16.45-25.113 14.89-10.156-1.32-23.355-12.25-34.312-19.61-11.82-7.93-26.104-17.91-30.992-27.47-4.964-9.71-.418-18.99 4.106-25.74 4.706-7.01 10.879-13.96 22.336-12.69 10.402 1.15 25.757 9.8 37.094 17.41 11.192 7.51 27.099 15.82 32.133 24.9 5.675 10.25-.492 21.21-5.252 28.31Zm-18.928-13.28c-2.10','1 3.13-5.548 7.82-11.079 7.37-6.296-.53-14.946-6.68-21.283-10.93-6.675-4.48-14.24-10.29-16.402-15.62-1.696-4.18.989-8.04 2.962-10.98 2.056-3.07 4.841-7.84 9.613-7.74 5.656.13 13.641 5.76 20.1 10.09 6.609 4.44 17.094 11.06 20.014 16.68 2.338 4.5-1.928 8.15-3.925 11.13Zm-71.386-68.9c-8.698.28-21.061-1.13-26.748-11.71-4.849-9.02-3.661-26.12-4.077-39.31-.449-14.23-.671-31.65 4.247-41.2 4.99-9.69 15.186-11.42 23.301-11.67 8.441-.27 17.684.7 23.338 10.74 5.134 9.12 7.057 26.64 7.487 40.29.425 13.47 2.95 31.24-1.493 40.62-5.01 10.59-17.517 11.97-26.055 12.24Zm-.253-23.12c-3.768.12-9.589.06-12.444-4.7-3.246-5.42-3.296-16.03-3.537-23.66-.253-8.04.054-17.57 3.127-22.44 2.409-3.81 7.109-3.88 10.649-3.99 3.687-.12 9.193-.64 11.889 3.29 3.195 4.67 3.278 14.44 3.524 22.22.251 7.95.989 20.33-1.877 25.98-'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn14(colors),renderFn15(colors),renderFn16(colors),renderFn17(colors),renderFn18(colors),renderFn19(colors)));
      
        return render;
      }
}