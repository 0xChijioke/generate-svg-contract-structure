//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_03_RIDER_tweetybord_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="',colors[1].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.997" d="M1104.61 1393.71c-9.47-17.39-212.087-25-244.522-7.21 39.877-4.14 78.977-6.06 109.814 15.45l-101.247 67.17 93.948-26.92c-85.824 53.74-117.076 159.88-87.357 236.29l44.452-43.02-2.053 61.38 53.016-37.46 3.112 65.08 32.957-28.16 202.12-10.97 32.08 25.5 3.18-31.47 41.71 23.89-17.36-39.48 75.94 25.66c41.63-97.83 30.85-184.14-60.05-245.51.13-13.41 8.05-11.51 24.99-7.2-12.17-15.12-22.06-22.7-50.45-15.59 1.15-17.9 31.6-19.31 61.29-9.5-22.64-19.84-44.84-26.51-66.52-17.73 5.33-21.6 25.09-26.96 47.79-29.02-.33-6.84-44.87-6.71-90.61 16.4-46.13 23.31-103.93 16.64-106.23 12.42Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-opacity=".5" fill-rule="evenodd" d="M1305.18 1483.85c17.2 25.81 37.68 46.82 43.73 73.99 7.03 31.53-1.16 60.85-5.21 102.26 0 0 1.75-59.08.13-61.02-1.63-1.95-10.17 54.79-10.17 54.79s8.03-67.51 5.54-66.26c-2.48 1.26-17.12 77.78-17.12 77.78s12.69-87.94 9.91-88.64c-2.78-.71-21.49 79.64-21.49 79.64s12.28-79.52 7.49-80.4c-4.79-.88-18.82 76.34-18.82 76.34s10.32-79.24 12.23-86.49c1.91-7.26-14.69 45.66-14.69 45.66 5.86-11.34 6.27-30.76 6.13-46.63-.12-14.28-11.72-32.88-20.3-55.02 0 0 23.91 44.68 24.81 42.31.9-2.37-27.67-79.96-19.39-56.54 8.27 23.41 37.28 76.38 38.44 73.76 1.16-2.63-31.48-89.52-31.48-89.52s33.09 72.02 39.49 74.26c1.74.61-29.23-70.27-29.23-70.27Z" clip-rule="evenodd"/><path fill="',colors[3].toColor()));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.77" d="M1067.74 2026.78c-8.88-8.45 12.28-46.12 2.07-50.74-18.24-8.25-62.5 27.79-62.67 51.11-.12 15.85 5.86 43.99 5.86 43.99l66.18-5.09s-4.85-33-11.44-39.27Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.769" d="m990.742 1892.03-29.946 129.59 79.704-23.16 59.61-2.84 102.62-2.07 3.89-154.94-215.878 53.42Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.769" d="m947.984 1775.75-85.774 35.98s-22.904-14.01-7.379-36.32c15.525-22.32 105.679-33.66 105.679-33.66l-12.526 34Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.994" d="m1230.57 1702.27 45.27 62.11-76.19 25.14-11 114.79-103.24-43.9-117.492 73.43 24.129-154.13-50.002 24.24 11.899-77.22 69.506-35.52 207.12 11.06Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m1050.44 1803.33-128.459-67.45-16.565 31.69 21.945 10.84 18.764-2.9 22.501 14.03 19.223-6.54 1.336 19.73 23.105 2.72-16.644 68.23-25.914 26.63 59.848 22.02 43.79-38','.71-22.93-80.29Zm76.17-66.43-19.31 52.36-32.82-15.93 12.82-17.37c-53.99-8.22-75.07-27.95-88.941-50.21l128.251 31.15Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.998" d="m1039.45 1801.85 9.31 2.92 19.59-40.95 22.28 10.17 63.09-50.31 54.93 79.72 266.31-26.33-214.47 257.72-120.18-125.29s-205.982-21.06-222.79-39c-16.808-17.94 121.93-68.65 121.93-68.65Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="M1171.78 1928.12s82.62 94.54 87.38 92.76c4.76-1.79 44.4-50.22 44.4-50.22s-35.48 33.69-44.51 31.71c-9.02-1.97-87.27-74.25-87.27-74.25Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.998" d="m657.418 1640.17-72.669-167.34 3.572-81.85c32.575 84.39 74.372 153.54 124.698 208.59l355.571 164.24-21.23 41.87-354.445-172.75-35.497 7.24Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="M706.573 1601.27s-30.002 25-42.42 20.78c-12.418-4.23-34.356-47.12-34.356-47.12l30.178 62.94 33.087-9.8 13.511-26.8Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1322.46 1928.47c7.98-3.86 119.57-122.72 113.72-130.86-9.12-12.71-163.53 13.6-164.65 11.17 0 0 144.88-15.15 149.8-4.93 4.95 10.29-98.87 124.62-98.87 124.62Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="'));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('round" stroke-miterlimit="1.5" stroke-width="1.4" d="M661.035 1611.59c3.057 0 5.536-2.32 5.536-5.19 0-2.86-2.479-5.18-5.536-5.18-3.058 0-5.536 2.32-5.536 5.18 0 2.87 2.478 5.19 5.536 5.19Zm-16.555-29.49c3.058 0 5.536-2.32 5.536-5.19 0-2.86-2.478-5.18-5.536-5.18-3.057 0-5.536 2.32-5.536 5.18 0 2.87 2.479 5.19 5.536 5.19Zm-15.305-30.57c3.057 0 5.536-2.32 5.536-5.18s-2.479-5.18-5.536-5.18c-3.058 0-5.536 2.32-5.536 5.18s2.478 5.18 5.536 5.18Zm-13.402-30.41c3.058 0 5.536-2.32 5.536-5.18 0-2.87-2.478-5.19-5.536-5.19-3.057 0-5.536 2.32-5.536 5.19 0 2.86 2.479 5.18 5.536 5.18Zm-12.016-28.85c3.058 0 5.536-2.32 5.536-5.18 0-2.87-2.478-5.19-5.536-5.19-3.057 0-5.536 2.32-5.536 5.19 0 2.86 2.479 5.18 5.536 5.18Zm-12.169-26.03c3.057 0 5.536-2.32 5.536-5.19 0-2.86-2.479-5.18-5.536-5.18-3.058 0-5.536 2.32','-5.536 5.18 0 2.87 2.478 5.19 5.536 5.19Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5" d="M1251.95 1969.52c5.37 0 9.71-4.55 9.71-10.15 0-5.61-4.34-10.15-9.71-10.15-5.36 0-9.71 4.54-9.71 10.15 0 5.6 4.35 10.15 9.71 10.15Zm-39.83-30.33c5.36 0 9.71-4.54 9.71-10.15 0-5.6-4.35-10.15-9.71-10.15-5.37 0-9.71 4.55-9.71 10.15 0 5.61 4.34 10.15 9.71 10.15Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.579" d="m1231.52 1832.89-9.22-4.48-27.51 56.63 9.21 4.48 27.52-56.63Z"/><path fill="',colors[6].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.457" d="m1116.9 1791.49-26.42-12.84-23.26 47.88 26.41 12.83 23.27-47.87Zm89.06 34.39-26.41-12.83-23.26 47.87 26.41 12.84 23.26-47.88Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m1073.35 1766.11-8.94 26.01 11.86 11.13 12.68 18.36-8.22 19.93 10.76 5.41 55.58-54.83-73.72-26.01Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="M998.322 1824.5s-62.102 32.66-58.884 38.09c3.219 5.43 151.192 30.05 151.192 30.05s-151.236-12.49-169.712-25.95c-9.227-6.72 77.404-42.19 77.404-42.19Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.159" d="m1067','.12 1766.1-18.3-8.89-18.53 38.14 18.3 8.89 18.53-38.14Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.114" d="m1045.33 1755.47-17.21-8.36-18.2 37.45 17.21 8.36 18.2-37.45Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.102" d="m1023.91 1745.63-16.68-8.11-18.39 37.86 16.67 8.1 18.4-37.85Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.156" d="m1002.57 1736.6-19.148-9.3-17.617 36.25 19.143 9.31 17.622-36.26Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterli','mit="1.5" stroke-width="1.226" d="m979.394 1725.42-21.27-10.34-17.851 36.74 21.27 10.33 17.851-36.73Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.201" d="m953.159 1713.48-23.761-11.54-17.253 35.5 23.76 11.55 17.254-35.51Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.165" d="m925.92 1700.28-28.494-13.85-16.926 34.83 28.494 13.85 16.926-34.83Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.177" d="m890.88 1684.94-29.991-14.58-16.408 33.77 29.991 14.57 16.408-33.76Z"/><path fill="#000" fill-opacity=".5" stroke="#000"',' stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.102" d="m856.537 1669.13-33.955-16.5-16.063 33.05 33.955 16.5 16.063-33.05Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.096" d="m818.701 1650.85-33.955-16.5-15.88 32.68 33.955 16.5 15.88-32.68Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.091" d="m780.065 1633.46-33.956-16.5-15.732 32.38 33.956 16.5 15.732-32.38Z"/><path fill="#000" fill-opacity=".5" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.037" d="m741.439 1615.02-31.765-15.44-15.184 31.25 31.766 15.44 15.18','3-31.25Z"/><path fill="'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.769" d="M1148.08 1897.61c-11.03-32.42-24.15-53.49-45.62-24.6-9.35 12.59-2.97 161.63-2.97 161.63l79.24-2.76s-20.01-102.96-30.65-134.27Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m1103.92 1892.64 9.06 85.42-11.69 32.67 2.63-118.09Z" clip-rule="evenodd"/><path fill="',colors[7].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.769" d="M1085.67 2059.57s17-89.96 50.3-96.63c33.92-6.79 83.92 87.38 83.92 87.38-56.23 25.74-91.59 26.55-134.22 9.25Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.769" d="m1153.51 1782.09 85.65 36.31s24.29-9.69 8.84-32.06c-15.45-22.38-106.9-38.29-106.9-38.29l12.41 34.04Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.997" d="M833.532 1750.7c-7.603-13.73 18.458-44.85 18.458-44.85l13.534 3.61 6.676-13.39 34.437 1.63-18.883 58.37 11.419-21.98 24.407-15.46-10.869 28.9-14.04 38.71s-56.905-20.68-65.139-35.54Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6" d="m865.84 1708.99-10.644 34.76m32.45-43.8-16.712 55.13"/><path fill="'));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.85" d="M1170.09 1804.79c-6.24 17.78-71.94 41.27-71.94 41.27-7.1-9.52-1.08-17.67 14.88-24.79 0 0-20.9-23.14-22-30.45-1.04-6.89 15.37-13.41 15.37-13.41l-18.78-1.06s38.21-42.69 51.95-37.95c13.75 4.74 36.76 48.62 30.52 66.39Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7" d="m1093.98 1797.19 47.92-13.89m-35.53 25.21 31.94-6.57m-32.42-24.95c4.19.02 12.22-6.88 16.25-15.42m-7.38 59.68 15.29-5.12"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.994" d="M1114.09 1415.03s-164.581 113.5-164.581 162.14c0 89.49 73.751 162.14 164.581 162.14 90.84 0 164.59-72.65 164.59-162.14 0-48.64-164.59-162.14-164.59-162.14Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.997" d="m1096.79 1534.32 5.28-14.93 21.01 15.87-26.29-.94Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.997" d="M974.909 1553.29c-23.377 10.89-21.056 74.88-.253 95.09 24.243 23.56 69.044 80.08 138.374 71.82 92.92-11.07 142.8-68.57 153.52-99.12 8.15-23.23 9.92-70.64-1','2.89-77.36-23.18-6.82-84.66 28.67-136.46 33.22-54.99 4.82-118.914-34.54-142.291-23.65Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M961.042 1599.28a.284.284 0 0 1-.114-.39.298.298 0 0 1 .388-.11c17.047 8.64 35.031 15.87 53.614 21.73a360.07 360.07 0 0 0 37.19 9.57c12.48 2.53 25.13 4.35 37.88 5.5 8.44.76 16.93 1.24 25.45 1.4 21.08.39 42.32-1.32 63.43-5.64 30.32-6.21 60.33-17.59 88.95-35.54a.3.3 0 0 1 .4.08c.09.14.05.31-.08.4-28 19.56-57.71 32.78-88.08 40.32-21.41 5.31-43.12 7.87-64.69 7.88-8.74 0-17.46-.44-26.11-1.32-13.03-1.32-25.92-3.6-38.58-6.67-12.7-3.08-25.15-7-37.27-11.63-18.341-7.01-35.849-15.7-52.378-25.58Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M995.097 1557.51a.297.297 0 0 1 .312-.26c.158.02.271.16.26.31 0 0 .425 7.97.546 19.51.037 3.61.01','5 7.53-.084 11.67a197.09 197.09 0 0 1-.322 7.75c-.195 3.07-.451 6.17-.792 9.28-.521 4.69-1.225 9.34-1.885 13.85-.718 4.9-1.47 9.56-2.173 13.82a1241.604 1241.604 0 0 1-3.593 20.71.283.283 0 0 1-.308.26c-.158-.02-.275-.15-.26-.31 0 0-.095-8.71-.004-21.02.033-4.32.084-9.03.213-13.99.117-4.55.22-9.26.509-13.97.191-3.11.47-6.22.8-9.27.285-2.62.637-5.2 1.008-7.7a341.34 341.34 0 0 1 1.91-11.51c2.085-11.35 3.863-19.13 3.863-19.13Zm41.923 11.52c.02-.16.17-.26.32-.24.16.01.27.16.25.32 0 0-.16 9.68-.88 23.62-.22 4.37-.53 9.12-.94 14.13-.24 3.05-.52 6.19-.88 9.38-.42 3.69-.91 7.45-1.48 11.2-.86 5.66-1.9 11.28-2.89 16.71-1.08 5.91-2.18 11.54-3.2 16.67-2.89 14.62-5.1 24.97-5.1 24.97a.29.29 0 0 1-.32.25.29.29 0 0 1-.25-.32s.54-10.57 1.53-25.44c.35-5.22.75-10.95 1.24-16.93.45-5.5.9-11.21 1.53-16.89.42-3.7','7.92-7.53 1.48-11.21.48-3.17 1.02-6.27 1.57-9.29.91-4.94 1.84-9.6 2.75-13.88 2.92-13.65 5.27-23.05 5.27-23.05Zm67.51 17.44c0-.16.14-.28.29-.27.16.01.29.14.27.3 0 0 .58 10.26.92 25.06.1 4.64.15 9.69.13 15.02-.01 3.25-.06 6.59-.18 9.99-.13 3.95-.33 7.96-.62 11.97-.43 6.06-1.04 12.1-1.62 17.93-.63 6.34-1.3 12.39-1.92 17.91a2028.6 2028.6 0 0 1-3.21 26.84c-.01.16-.14.28-.3.28a.291.291 0 0 1-.27-.31s-.26-11.22-.4-27.03c-.04-5.55-.08-11.64-.04-18.01.03-5.86.05-11.93.25-18 .13-4.02.35-8.03.62-11.97.24-3.39.54-6.72.87-9.96.53-5.3 1.11-10.32 1.69-14.92 1.87-14.68 3.52-24.83 3.52-24.83Zm73.59-19.65c-.01-.15.11-.29.27-.3.15-.01.29.11.3.27 0 0 1.71 10.17 3.7 24.89.61 4.62 1.23 9.65 1.8 14.97.35 3.24.68 6.58.94 9.98.3 3.96.55 7.98.71 12.02.25 6.09.31 12.18.39 18.06.08 6.4.09 12.5.08 18.08-.02 15.86-.19 ','27.13-.19 27.13 0 .16-.11.29-.27.3a.28.28 0 0 1-.3-.26s-1.51-11.18-3.41-26.93c-.66-5.53-1.38-11.6-2.05-17.96-.62-5.84-1.28-11.9-1.76-17.98-.31-4.02-.54-8.05-.71-12.01-.14-3.41-.21-6.76-.25-10.03-.07-5.35-.05-10.41.02-15.07.23-14.85.73-25.16.73-25.16Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12.923" d="M1138.29 1513.99c25.6-18.24 49.35-18.83 71.55-4.54m-193.75 5.7c25.6-18.24 49.35-18.83 71.55-4.54"/><path fill="'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors)));
      
        return render;
      }
}