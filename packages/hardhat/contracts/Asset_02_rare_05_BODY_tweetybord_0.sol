//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_05_BODY_tweetybord_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="14.014" d="m653.64 1097.61-116.63-54.64s214.657-439.956 251.351-502.605c12.132-20.715 101.018-122.837 100.694-106.322-.39 19.872.668 90.438-20.943 180.203-41.03 170.426-117.717 398.424-117.717 398.424l-96.755 84.94Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="14.014" d="M812.291 956.831 693.81 1004.68s132.553-185.097 163.587-233.277c12.991-20.169 84.821-66.039 84.821-66.039l-38.916 204.768-91.011 46.699ZM556.714 1062.62l-126.063-26.37s153.628-445.123 179.194-513.077c20.741-55.124 84.484-131.739 87.748-115.571 3.057 15.137 22.116 81.13 17.189 136.299-15.495 173.494-80.219 452.358-80.219 452.358l-77.849 66.361ZM1506 1093.03l114.53-58.92s-197.27-416.869-236.26-478.117c-12.89-20.251-97.62-117.177-96.31-100.755 1.83 22.931 1.01 106.983 24.71 210.149 36.24 157.736 101.75 349.183 101.75 349.183l91.58 78.46Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="14.014" d="m1342.25 958.223 120.17 43.427s-131.06-178.305-163.86-225.302c-13.73-19.674-74.27-69.614-74.27-69.614l25.28 208.192 92.68 43.297Zm259.32 96.257 125-31.03c8.88-.68-110.14-352.95-160.85-451.606-25.94-50.457-97.27-177.003-99.93-160.727-4.19 25.585-7.95 119.152 3.43 229.089 16.7 161.483 52.09 350.837 52.09 350.837l80.26 63.437Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1498.91 465.975c56.98 95.266 106.16 207.956 141.42 327.411l-20.62 100.698c-26.77-152.454-69.52-293.364-120.8-428.109Zm-191.96 13.13c66.76 66.944 108.49 174.686 157.64 275.433l-7.25 82.636c-38.21-134.828-89.1-241.217-150.39-358.069Zm-429.641-9.767c1.148 94.541-46.857 220.88-81.9','13 327.355l-62.841 54.152c66.668-123.264 107.166-255.023 144.754-381.507Zm-184.227-20.193c13.438 93.588-27.335 294.872-48.232 405.007l-55.271 61.861c50.065-130.889 82.69-336.569 103.503-466.868Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="12" d="m1599.53 950.464-125.79-537.909m-6.67 489.016-172.8-433.635m7.15 379.017-68.54-125.498M854.332 843.458l70.82-115.919M689.445 886.456l186.826-450.181M561.477 932.642l126.201-528.794"/><path fill="'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m399.409 1301.31-46.304-223.81-165.695 140.12 46.303 223.81 165.696-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m445.065 1218.55-46.303-223.818-165.696 140.118 46.303 223.82 165.696-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="M491.534 1120.73 445.23 896.916 279.535 1037.04l46.303 223.81 165.696-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="M540.053 1032.76 493.75 808.943l-165.696 140.12 46.304 223.817 165.695-140.12Z"/><path fill="#fff" fill-rule="evenodd" d="m487.5 859.574 19.993 86.044-12.836-.156-7.157-85.888Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1748.28 1278.62 46.31-223.81 165.69 140.12-46.3 223.81-165.7-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1702.63 1195.86 46.3-223.813 165.7 140.123-46.31 223.81-165.69-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1656.16 1098.04 46.3-223.811 165.7 140.121-46.31 223.81-165.69-140.12Z"/><path fill="',colors[1].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.138" d="m1607.64 1010.07 46.3-223.814 165.7 140.12-46.31 223.814-165.69-140.12Z"/><path fill="'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" fill-rule="evenodd" d="m1690.51 840.334 89.58 96.098 1.99 89.528s18.4-89.903 12.58-97.126c-8.41-10.427-104.15-88.5-104.15-88.5Zm123.21 141.562 28.12 43.714 2.4 30.33s11.78-30.67 7.73-37.18c-5.84-9.41-38.25-36.864-38.25-36.864Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="16.178" d="M1224.38 773.72c35.02 6.644-8.82 52.692 75.67 75.573 262.32 71.04 594.29 245.037 667.87 476.457 37.17 116.88-281.41 253.78-281.41 391.55 0 498.43-272.12 903.09-607.3 903.09-335.177 0-607.3-404.66-607.3-903.09 0-92.94-298.135-279.23-280.565-363.63 59.032-283.6 392.029-450.344 666.548-512.01 27.228-6.116 20.746-62.174 47.763-67.183 61.083-11.324 252.994-13.226 318.724-.757Zm-141.89 111.527c-284.606 0-515.67 263.163-515.67 587.303 0 324.15 231.064 587.31 515.67 587.31 284.61 0 515.68-263.16 515.68-587.31 0-324.14-231.07-587.303-515.68-587.303Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m1300.27 2153.45-38.26-57.17s88.83-41.97 161.82-96.61c36.5','3-27.35 59.35-54.82 86.52-83.01 0 0-39.88 56.28-68.52 80.72-26.05 22.23-111.55 68.44-148.96 102.01-19.14 17.17 7.4 54.06 7.4 54.06Zm5.57 78.49s-41.18-76.53-76.26-94.69c-35.08-18.16-134.23-14.26-134.23-14.26 53.91-1.67 137.85-20.13 137.85-20.13l72.64 129.08Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m762.375 2487.73 65.098-261.23 87.342-142.83m476.435 404.06-65.1-261.23-87.34-142.83"/><path fill="#fff" fill-rule="evenodd" d="M1638.93 1010.72c-77.82-49.303-169.42-86.349-265.06-119.781 91.36 40.088 184.42 80.461 248.9 130.451l16.16-10.67Zm62.21 50.87s198.38 169.12 222.03 269.8c4.93 21.01-29.54 74.61-29.54 74.61s61.99-47.05 53.42-74.59c-39.02-125.4-245.91-269.82-245.91-269.82Z" clip-rule="evenodd"/><pa','th fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="14.463" d="M1087.39 2304.64c47.44 21 205.09 129.18 231.67 174.11l-230.39 188.38-235.049-174.72c20.229-41.14 172.709-167.75 233.769-187.77Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".52" fill-rule="evenodd" d="M1087.39 2304.64c47.44 21 158.86 126.72 185.42 171.66-63.22 46.88-83.99 106.36-141.21 127.49-12.63 4.66-30.49-8.49-44.45-4.75-16.13-4.06-27.3 10.37-41.7 5.75-60.476-19.42-88.615-76.27-148.579-116.51 20.229-41.14 129.449-163.62 190.519-183.64Z" clip-rule="evenodd"/><mask id="a" width="377" height="302" x="896" y="2304" maskUnits="userSpaceOnUse" style="mask-type:luminance"><path fill="#fff" d="M1087.39 2304.64c47.44 21 158.86 126.72 185.42 171.66-63.22 46'));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('.88-83.99 106.36-141.21 127.49-12.63 4.66-30.49-8.49-44.45-4.75-16.13-4.06-27.3 10.37-41.7 5.75-60.476-19.42-88.615-76.27-148.579-116.51 20.229-41.14 129.449-163.62 190.519-183.64Z"/></mask><g fill-rule="evenodd" clip-rule="evenodd" mask="url(#a)"><path fill="',colors[4].toColor(),'" d="m982.135 2586.2-12.206-9.71a3.4 3.4 0 0 1-1.264-3.13l12.518-90.34a3.45 3.45 0 0 1 2.252-2.76l16.467-5.96a3.527 3.527 0 0 1 3.278.46c.94.68 1.47 1.79 1.41 2.94l-5.994 110.46c-.036.66-.27 1.29-.642 1.8 2.156 1.72 3.566 2.84 3.566 2.84l12.61-125.5c.09-.89.53-1.72 1.23-2.29l42.21-34.83a3.544 3.544 0 0 1 3.67-.5 3.44 3.44 0 0 1 2.06 3.03l2.87 102.25 1.15 17.53 20.97-.28c-1.79-5.81-5.37-17.4-10.69-34.54-8.16-26.3.15-70.72.15-70.72.17-.91.7-1.7 1.48-2.22l19.38-12.86c1.59-1.05 3.75-.64 4.83.92l19.15 27.75c.52.74.71 1.67.54 2.55 0 0-1.5 8.1-.12 25.31 1.36 16.9 2.85 30.9 11.18 39.61 7.88 8.24 8.92 20.66 9.03 25.05l13.72 13.1 8.88-100.5c.1-1.04.66-1.98 1.55-2.56.88-.58 1.99-.73 3-.41l14.67 4.66a3.48 3.48 0 0 1 2.15 1.94c.39.92.35 1.97-.1 2.86 0 0-3.6 7.81 1.94 27.39 2.89 10.23 6.75 15.24 9.57 19','.88 3.3 5.41 5.47 10.39 4.23 20.58-1.48 12.09-5.23 23.88-7.7 30.71l38.53-8.06-28.77-96.42c-.44-1.45.16-3.02 1.46-3.84l38.66-24.55c1-.64 2.26-.73 3.34-.24s1.84 1.49 2 2.65l13.58 96.35 2.3-1.44-10.43-99.89c-.09-.9.18-1.8.75-2.5l11.85-14.52c.87-1.07 2.31-1.52 3.65-1.16 1.34.37 2.33 1.49 2.52 2.84l13.06 94.61 26.79-21.6c.6-3.12 2.11-12.08 1.51-20.55-.23-3.28-.78-6.47-1.88-9.17-.91-2.24-2.19-4.12-4.15-5.19-13.83-7.54-27.95-32.45-27.95-32.45-.54-.96-.58-2.1-.12-3.09l16.41-35c.67-1.43 2.25-2.22 3.82-1.93 1.57.3 2.74 1.61 2.83 3.18 0 0 .67 13.58 8.95 21.15 7.8 7.13 30.45 28.93 37.29 35.53l15-9.43-7.36-102.68c-.07-.9.23-1.78.82-2.47l18.28-21.13a3.525 3.525 0 0 1 4.95-.36s12.34 10.13 5.7 33.1c-5.7 19.74.42 45.24.42 45.24.09.4.12.81.06 1.21l-4.04 31.33-6.92-.87.44-3.4 3.53-27.33c-.91-4.2-5.78-28.71-.','19-48.05 3.43-11.87.77-19.43-1.44-23.19l-14.56 16.83 7.41 103.32a3.41 3.41 0 0 1-1.6 3.13l-19.09 12c-1.37.86-3.15.68-4.31-.44 0 0-29.93-28.91-39.13-37.31-4.65-4.25-7.39-10.03-8.99-15.05l-11.2 23.9c3.05 5.19 13.71 22.46 24.36 28.26 4.8 2.62 7.61 7.86 8.86 14.11 2.53 12.65-1.13 29.41-1.13 29.41a3.44 3.44 0 0 1-1.2 1.92l-32.58 26.26c-.98.79-2.31.99-3.48.54a3.428 3.428 0 0 1-2.18-2.73s-9.53-69.03-12.8-92.77l-5.88 7.19 10.5 100.61c.14 1.29-.48 2.55-1.59 3.24l-8.7 5.45c-1 .62-2.26.7-3.33.22a3.43 3.43 0 0 1-1.99-2.65l-13.57-96.32-31.89 20.25 29.1 97.5c.28.92.15 1.91-.35 2.73-.49.82-1.32 1.4-2.27 1.59l-48.46 10.15a3.49 3.49 0 0 1-3.41-1.17 3.378 3.378 0 0 1-.53-3.51s7.35-17.1 9.51-34.86c.99-8.04-.68-11.98-3.28-16.24-3.06-5.04-7.17-10.48-10.31-21.57-4.19-14.79-3.6-23.9-2.64-28.53l-7.28-2.31-9.14 10','3.4c-.11 1.32-.99 2.45-2.25 2.91-1.26.47-2.68.17-3.65-.75l-20.04-19.12c-.72-.68-1.1-1.63-1.05-2.62 0 0 .72-13.43-7.14-21.65-9.25-9.67-11.55-25.02-13.06-43.77-1.13-14.09-.4-22.49 0-25.65l-16.43-23.82-15.28 10.14c-1.31 7.53-7.02 43.68-.08 66.06 7.98 25.69 12.03 38.92 12.03 38.92.32 1.03.13 2.15-.52 3.01-.65.87-1.67 1.39-2.77 1.41l-28.91.38c-1.85.02-3.41-1.39-3.52-3.21l-1.37-20.85c-.01-.04-.01-.08-.01-.12l-2.67-95.22-35.6 29.38-13.1 130.43a3.438 3.438 0 0 1-2.13 2.83 3.54 3.54 0 0 1-3.53-.5l-12.558-9.98-31.037 4.02c-1.843.25-3.552-.98-3.886-2.78l-4.122-22.4c-.879-3.06-14.264-49.61-20.923-68.58-1.003-2.85-1.451-5.63-1.467-8.3l-21.313 55.94a3.491 3.491 0 0 1-3.14 2.22 3.499 3.499 0 0 1-3.292-1.99l-10.124-21.67a3.382 3.382 0 0 1 .04-2.95l33.816-67.44h-.054l-54.909 84.77a3.496 3.496 0 0 1-3.022 1','.58 3.495 3.495 0 0 1-2.94-1.72l-22.724-39.05a3.37 3.37 0 0 1 .331-3.87l57.943-69.63-19.713-12.5-34.726 38.62-9.333 41.11a3.47 3.47 0 0 1-2.612 2.59 3.507 3.507 0 0 1-3.507-1.19l-20.456-25.05a3.401 3.401 0 0 1-.725-2.7s6.42-38.99 11.121-50.26c.406-.98.164-2.72-.203-5.04-.731-4.59-2.479-10.89-4.78-17.99-9.163-28.28-27.067-69.1-27.067-69.1l-1.382-3.15 6.402-2.72 1.382 3.15s23.62 53.9 30.691 81.18c1.119 4.31 1.825 8 2.016 10.76.164 2.41-.097 4.28-.609 5.51-4.013 9.63-9.251 40.12-10.442 47.25l14.946 18.31 7.95-35.02c.127-.57.4-1.09.791-1.52l37.306-41.49a3.52 3.52 0 0 1 4.497-.61l25.512 16.17c.834.53 1.4 1.39 1.555 2.35a3.4 3.4 0 0 1-.746 2.71l-58.897 70.78 18.661 32.06 52.927-81.7a3.516 3.516 0 0 1 3.192-1.58l7.292.52c1.158.08 2.195.73 2.774 1.72.576.99.612 2.2.1 3.22l-35.372 70.54 5.938 12.7 ','28.864-75.75c.533-1.4 1.934-2.3 3.455-2.22l14.167.77a3.466 3.466 0 0 1 3.17 2.52 3.394 3.394 0 0 1-1.424 3.75s-7.823 5.15-12.706 13.19c-3.04 5-4.95 11.2-2.564 17.98 6.926 19.72 21.086 69.11 21.086 69.11.031.11.058.22.076.32l3.561 19.35 21.178-2.75Zm-46.55-111.54a53.422 53.422 0 0 1 5.019-5.56l-2.84-.15-2.179 5.71Zm56.082 110.3.122-.02 5.555-102.41-9.535 3.45-11.969 86.39s8.583 6.83 15.827 12.59Z"/><path fill="#000" d="m937.889 2457.04 12.142.66a8.516 8.516 0 0 1 7.748 6.2 8.434 8.434 0 0 1-3.507 9.31s-6.878 4.52-11.169 11.59c-2.322 3.82-3.941 8.53-2.122 13.71 6.956 19.79 21.177 69.39 21.177 69.39.076.26.14.52.188.79l2.698 14.65 4.655-.6-2.903-2.31a8.423 8.423 0 0 1-3.113-7.76l12.518-90.35a8.466 8.466 0 0 1 5.519-6.79l16.471-5.96a8.56 8.56 0 0 1 7.939 1.11c.97.71 1.76 1.59 2.34 2.59l.65-6.4'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors)));
      
        return render;
      }
}