//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_squido_1 {

using ToColor for bytes4;

function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('-3.798-13.649-4.702-12.266-2.61 3.992-.471 22.288-3.301 23.642-7.389 3.537-4.073-17.829-5.105-19.725-1.033-1.897-6.001 18.038-8.835 18.643-5.358 1.145 3.172-20.224 1.574-21.067-1.597-.844-8.714 14.091-9.983 13.158-3.77-2.769 4.431-16.664 4.431-16.664"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.326" d="M403.387 357.825c-4.566-.524-7.816-4.864-7.254-9.686.562-4.823 3.954-2.034 8.52-1.51.318.036.633.061.944.076 4.16.21 7.605-1.155 7.082 3.331-.562 4.822-4.726 8.312-9.292 7.789Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.321" d="M373.936 359.165c-4.416 1.107-7.922-.27-9.22-4.272-1.7','56-5.416 2.588-5.629 7.003-6.735 4.415-1.107 7.596-5.751 9.031-.241 1.435 5.51-2.399 10.142-6.814 11.248Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.328" d="M401.557 348.036c-.511.329-.331 1.64.403 2.929s1.744 2.067 2.255 1.738c.511-.33.331-1.641-.403-2.93-.735-1.289-1.744-2.067-2.255-1.737Z"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.067" d="M374.546 348.918c-.552-.249-1.447.669-1.999 2.051-.553 1.383-.554 2.706-.003 2.956.552.249 1.447-.669 2-2.051.552-1.383.553-2.706.002-2.956Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.434" d="M99.284 1071.5c11.396-2.53-38.692 43.24-37.066 34.01-2.812.19-10.867-2.69-9.285-3.83-1.204-1.34-18.862-2.19-27.367-8.99-7.73-6.18-9.383-11.6-2.2-7.63 12.559 6.96 30.584 4.08 34.344 3.85 2.513-2.29-4.392-10.23-14.452-17.49-8.611-6.22-10.578-10.89-3.309-8.89 14.067 3.87 23.815 12.98 24.908 12.14.846-.65-6.837-11.26-13.652-16.93-8.626-7.19-12.648-10.46-10.577-11.57 6.3-3.39 33.79 17.59 36.014 23.28 1.864-.2-2.856-7.7-9.52-15.48-5.834-6.82-13.733-13.96-12.451-15.11 4.225-3.79 32.185 22.96 32.918 22.58 2.743-1.47-15.55-16.65-7.201-15.76 1.795.19 18.187 21.85 18.896 25.82Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.434" d="M54.491 1110.8c-.744 11.69.366 23.44 10.597 30.75 10.856 7.77 68.17 18.71 82.758 2.11 13.584-15.45-6.006-62.45-15.297-72.46-13.606-14.63-29.591-11.65-38.422-8.62-.264-2.81-5.855-8.59-11.932-21.51-5.78-12.31 1.588-13.59-1.137-14.56-2.82-1-9.732 3.36-9.708 11.07.03 8.41 6.641 20.92 5.759 22.66-1.501-.99-11.499-14.98-19.508-22.36-7.276-6.71-9.378-1.55-6.128 5.9 2.017 4.61 13.44 19.39 13.785 23.16-1.869 2.84-10.753-2.78-19.453-11.64-7.453-7.57-12.357-8.8-9.27-1.91 5.974 13.34 16.452 21.6 15.794 22.81-.518.94-12.149-5.04-18.785-10.92-8.407-7.44-6.935-3.29-7.72-1.07-2.37 6.77 17.225 23.15 23.169 24.47.091 1.88-8.03-1.64-16.72-7.05-7.612-4.73-15.863-11.46-16.797-10.02','-3.085 4.77 27.572 28.37 27.303 29.15-1.024 2.95-18.79-12.85-16.634-4.71.465 1.75 7.304 10.12 17.158 13.94 5.82 2.25 7.167.72 11.188.81Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" d="M128.124 1134.19c-2.356 1.05-5.168.16-6.281-2-1.113-2.16-.106-4.76 2.25-5.82 2.355-1.06 5.167-.16 6.28 1.99 1.113 2.16.106 4.77-2.249 5.83Z"/><path fill="',colors[3].toColor(),'" d="M114.704 1084.02c-2.356 1.06-5.168.17-6.281-1.99-1.113-2.16-.106-4.76 2.25-5.82 2.355-1.06 5.167-.17 6.28 1.99 1.113 2.16.106 4.77-2.249 5.82Zm-35.03 48.55c-2.355 1.06-5.167.16-6.28-1.99-1.113-2.16-.106-4.77 2.25-5.83 2.355-1.05 5.167-.16 6.28 2 1.113 2.16.106 4.76-2.25 5.82Z"/><path fill="',colors[2].toColor(),'" d="M145.124 1141.26c-2.356 1.06-5.168.16-6.281-2-1.113-2.15-.106-4.76 2.25-5.82 2.355-1.05 5.167-.16 6.28 2 1.113 2.16.106 4.76-2.249 5.82Zm-3.241-22.13c-2.355 1.06-5.167.17-6.28-1.99-1.113-2.16-.106-4.77 2.249-5.82 2.356-1.06 5.168-.17 6.281 1.99 1.113 2.16.106 4.77-2.25 5.82Zm-22.491 25.5c-.36 1.43-2.147 2.12-3.992 1.53-1.845-.58-3.048-2.21-2.688-3.64.36-1.43 2.147-2.12 3.991-1.54 1.845.59 3.049 2.22 2.689 3.65Zm12.687-58.02c-1.079 1.33-3.004 1.54-4.3.48-1.296-1.07-1.472-3.01-.394-4.34 1.079-1.33 3.004-1.54 4.3-.47 1.296 1.06 1.472 3 .394 4.33Zm8.574 12.96c-1.078 1.33-3.003 1.55-4.3.48-1.296-1.07-1.472-3.01-.394-4.34 1.079-1.32 3.004-1.54 4.3-.47 1.296 1.06 1.472 3 .394 4.33Zm-57.367 41.57c-1.079 1.33-3.004 1.54-4.3.48-1.296-1.07-1.472-3.01-.394-4.34 1.079-1.33 3.004-1.54 4.3-.47 1.296',' 1.06 1.472 3 .394 4.33Zm21.07-35.37c-.799.99-2.276 1.1-3.301.26-1.024-.84-1.207-2.32-.409-3.31.799-.98 2.276-1.09 3.3-.25 1.025.84 1.208 2.32.41 3.3Zm-9.698 2.08c-.798.99-2.276 1.1-3.3.26-1.024-.84-1.207-2.32-.409-3.31.798-.98 2.276-1.09 3.3-.25 1.025.84 1.208 2.32.41 3.3Zm8.748 7.14c-.798.98-2.276 1.1-3.3.25-1.024-.84-1.207-2.32-.409-3.3.798-.99 2.276-1.1 3.3-.26 1.025.84 1.208 2.32.409 3.31Zm-13.558 3.56c-.799.98-2.276 1.1-3.3.25-1.025-.84-1.208-2.32-.41-3.3.799-.98 2.276-1.1 3.3-.26 1.025.84 1.208 2.32.41 3.31Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M51.692 1104.84c-9.733-3.21-26.249-26.77-33.69-27.56-2.73-.29 9.082 3.73 1.213 7.16-2.34 1.02 3.214 4.6 6.673 9.51 8.23 11.71 23.517 21.62 27.901 15.64l1.015 3.15c-.372 6.69-.698 12.74 2.576 19.04 2.158 4.14 6.875 8.65',' 10.645 12.62 29.536 12.38 21.956 2.13 9.9-3.16-10.464-4.58-17.654-12.03-18.35-33.31l-1.596-1.04c-.276-.07 3.247-12.05 2.618-12.25 1.549-7.22-6.529 8.06-8.905 10.2Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m86.903 1084.36 15.463 10.19s2.94-1.24 1.41-2.78c-2.343-2.36-9.724-5.52-11.576-6.62-2.445-1.46-5.297-.79-5.297-.79Zm-51.041-33.21c9.06 5.25 9.439 7.58 23.58 21.35 0 0-10.08-13.37-16.593-18.16-5.655-4.16-6.987-3.19-6.987-3.19Zm13.632-16.61c17.716 16.38 12.525 11.57 25.937 26.3 0 0-12.3-17.66-20.122-23.3-6.79-4.9-5.815-3-5.815-3Zm61.547 26.41c15.714 10.15 45.841 61.76 24.447 89.24 6.132-2.31 18.645-4.14 15.862-25.11-2.828-21.31-9.016-36.36-19.364-54.14-9.432-5.95-13.766-10.62-20.945-9.99Zm-19.941 3.09a122.32 122.32 0 0 1-5.067-8.8c-3.674-6.99-6.894-1','4.4-10.136-21.83 0 0 6.757 11.56 10.473 18.36a97.452 97.452 0 0 1 1.782 3.37c1.442 2.9 2.947 8.9 2.947 8.9Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M87.398 1061.44c1.508 2.36-.635 5.09.796 4.26 1.431-.83 3.565-2.29 1.774-4.45-9.06-10.96-4.496-9.44-5.927-8.61-1.43.83 1.85 6.45 3.357 8.8Zm62.473 63.74c.141-6.18-4.206-20.49-4.633-18.4-.332 1.63 2.757 12.31 2.616 18.5-.14 6.18-2.1 10.78-.45 10.94 1.65.16 2.327-4.86 2.467-11.04Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="M123.404 1119.87c-1.822-5.08 2.237-12.48 8.052-20.59-3.161 7.34-5.102 14.32-3.099 20.16l-4.953.43Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M68.276 1106.12c-1.718 1.63 3.41 7.73 9.496 6.39 3.986-.89 4.859 3.37 6.319.61l-4.598 1.'));
      
        return render;
      }

    function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('52c-10.382 1.31-12.188-.02-14.581-7.16l16.042-1.51-18.179-7.87 9.363 7.47-3.862.55Zm42.802 34.38s9.933-5.86 8.072-5.7c-1.86.16-4.76-.91-5.952.5-5.732 6.76-15.24 5.85-18.697 5.11 0 0 3.655 2.88 5.297 2.84 2.629-.06 11.28-2.75 11.28-2.75Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.664" d="M102.464 1091.74c-5.85-2.64-12.841-12.57-17.55-7.92-.865.85 9.368 10.63 7.715 10.63-4.769.01-18.937-11.76-21.616-10.13-6.994 4.27 12.723 13.14 13.75 15.04 1.026 1.9-18.393-4.81-20.446-2.76-3.882 3.87 18.681 8.37 18.517 10.17-.165 1.8-16.564-.38-16.474 1.19.265 4.67 16.383 5.38 16.383 5.38"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-widt','h="2.326" d="M112.418 1098.96c-2.051 4.11-.186 9.2 4.162 11.36s3.861-2.2 5.913-6.32c.142-.28.294-.56.45-.83 2.093-3.6 5.116-5.74 1.07-7.75-4.348-2.16-9.544-.58-11.595 3.54Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.321" d="M95.229 1122.91c-3.336 3.1-4.094 6.79-1.448 10.06 3.582 4.43 6.13.9 9.465-2.2 3.336-3.09 8.963-3.23 5.127-7.43-3.835-4.21-9.809-3.52-13.144-.43Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.328" d="M119.623 1105.83c-.554.25-1.555-.62-2.235-1.94-.68-1.31-.781-2.58-.226-2.83.554-.25 1.555.62 2.235 1.93.68 1.32.781 2.59.226 2.84Z"/><path fill="#fff" stroke="#000"',' stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.067" d="M104.151 1127.99c-.091.6-1.349.85-2.809.56-1.46-.29-2.57-1.01-2.478-1.61.091-.6 1.349-.85 2.809-.56 1.46.29 2.57 1.01 2.478 1.61Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.81" d="M1974.79 1410.37c6.55 22.12 37.64-108.33 23.25-96.68-2.38-5.03-15.07-16.2-15.53-12.37-3.46-.8-21.86-30.5-41.77-38.68-18.09-7.43-29.05-5.09-15.29 3.51 24.06 15.04 36.37 48.95 39.57 55.68-1.54 6.53-21.89 2.21-44.08-8.22-19.01-8.92-28.96-7.84-18.54 2.81 20.18 20.6 45.27 28.71 44.87 31.4-.33 2.1-26.02-1.01-42.36-7.35-20.69-8.02-30.19-11.84-30.13-7.19.17 14.14 62.81 41.53 74.76 39.92 1.45 3.41-16.05 2.45-35.89-1.61-17.37-3.55-37.28-10.35-38.04-7.04-2.49 10.94 70.55 33.62 70.58 35.25.09 6.15-43.67-10.92-34.14 2.66 2.05 2.92 55.2 10.49 62.74 7.91Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.81" d="M1999.78 1295.27c19.48-12.49 40.85-21.83 63.31-11.17 23.83 11.32 97.68 99.89 82.98 141.01-13.68 38.3-113.7 49.5-139.89 43.04-38.35-9.49-48.51-39.98-51.75-58.14-5.11 2.24-20.46-1.88-48.62 0-26.81 1.81-25.31 8.09-29.6 4.31-4.43-3.91-.17-12.36 13.17-19.71 14.57-8.01 42.53-8.58 44.69-11.77-3.14-1.65-36.91-5.51-57.35-12.28-18.57-6.14-24.09-17.57-8.1-19.09 9.9-.94 58.83 7.48 65.66 4.46 3.12-5.95-15.11-15.91-38.75-22.46-20.24-5.62-27.07-12.91-12.19-14.19 28.79-2.47 53.11 7.72 54.57 5.42 1.12-1.79-20.37-16.16-36.89-21.99-20.93-7.39-30.63-10.69-27.53-14.17 9.41-10.59 74.79 9.43 82.79 18.43 3.33-1.64-10.54-12.3-28.22-22.13-15.48-8.62-35.02-16.43-33.42-19.43 5.29-9.9 75.46',' 20.46 76.56 19.24 4.1-4.59-40.23-20.15-24.1-24.23 3.47-.87 24.49 2.93 40.54 16.3 9.48 7.89 8.13 11.69 12.14 18.55Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[2].toColor(),'" d="M2110.78 1400.12c-.43-5.09-4.67-9.09-9.46-8.95-4.8.15-8.34 4.39-7.91 9.47.43 5.09 4.67 9.09 9.47 8.94 4.8-.14 8.34-4.38 7.9-9.46Z"/><path fill="',colors[3].toColor(),'" d="M2011.22 1425.01c-.43-5.08-4.67-9.09-9.46-8.94-4.8.14-8.34 4.38-7.91 9.47.43 5.08 4.67 9.09 9.47 8.94 4.8-.14 8.34-4.38 7.9-9.47Zm50.32-107.08c-.43-5.09-4.67-9.09-9.46-8.94-4.8.14-8.34 4.38-7.91 9.46.43 5.09 4.67 9.09 9.47 8.95 4.8-.15 8.34-4.39 7.9-9.47Z"/><path fill="',colors[2].toColor(),'" d="M2139.31 1422.72c-.43-5.09-4.67-9.09-9.47-8.95-4.8.15-8.33 4.39-7.9 9.47.43 5.09 4.67 9.09 9.47 8.94 4.79-.14 8.33-4.38 7.9-9.46Zm-41.35 15.6c-.43-5.08-4.67-9.08-9.47-8.94-4.79.15-8.33 4.39-7.9 9.47.43 5.09 4.67 9.09 9.47 8.94 4.8-.14 8.33-4.38 7.9-9.47Zm22.51-63.31c2.12-1.99 1.6-5.74-1.18-8.37-2.78-2.63-6.75-3.14-8.88-1.15-2.13 1.99-1.6 5.74 1.18 8.37 2.77 2.63 6.75 3.14 8.88 1.15Zm-88.12 77.55c1.26-3.13-.21-6.67-3.3-7.88-3.08-1.22-6.61.33-7.87 3.47-1.26 3.14.22 6.67 3.3 7.89 3.09 1.22 6.61-.34 7.87-3.48Zm30.63 2.39c1.26-3.13-.22-6.67-3.3-7.88-3.09-1.22-6.61.33-7.87 3.47-1.27 3.14.21 6.67 3.3 7.89 3.08 1.22 6.6-.34 7.87-3.48Zm16.84-139c1.26-3.14-.21-6.67-3.3-7.89-3.08-1.22-6.61.34-7.87 3.48-1.26 3.14.22 6.67 3.3 7.88 3.08 1.22 6.61-.33 7.87-3.47Zm-40.93 70.32c.94-2.32-.28-4.98-2.72-5','.95-2.44-.96-5.17.14-6.11 2.47-.93 2.32.29 4.98 2.73 5.94 2.43.97 5.17-.13 6.1-2.46Zm-5.7-18.75c.94-2.32-.28-4.98-2.72-5.95-2.44-.96-5.17.14-6.11 2.47-.93 2.32.29 4.98 2.73 5.94 2.43.97 5.17-.13 6.1-2.46Zm20.72 8.28c.93-2.32-.28-4.99-2.72-5.95-2.44-.96-5.17.14-6.11 2.46-.93 2.33.29 4.99 2.72 5.95 2.44.96 5.18-.14 6.11-2.46Zm-6.85-26.85c.94-2.32-.28-4.98-2.72-5.95-2.44-.96-5.17.14-6.1 2.47-.94 2.32.28 4.98 2.72 5.95 2.44.96 5.17-.14 6.1-2.47Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M2100.5 1320.75c12.14 27.46-2.59 16.94 2.58 28.94 1.68 3.9 2.28 13.13-1.12 19.19-3.4 6.05-6.14 8.59-8.02 11.96-1.47 2.65 7-1.38 11.38-6.92 2.92-3.7 4.26-7.6 5.88-5.98 11.54 11.54 24.04 6.57 18.85 40.76-6.45 42.42-90.01 47.3-115.97 45.54-22.53-1.53-40.88-10.59-56.41-49.69l-3.66-.87c-6.5.59-67.','43-.05-76.78 10.08 21.15-2.71 45.78-3.83 72.94-4.72 4.66 24.68 20.39 43.98 47.61 57.69 63.21 3.26 116.32-2.84 151.15-42.07 2.18-34.98-33.48-85.01-48.43-103.91Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m1876.77 1288.9 69.82 10.87-54.22-16.18-15.6 5.31Zm-.03 35.7c20.45-3.17 23.92-.07 62.76 3.57 0 0-32.09-8.06-48.06-7.35-13.86.62-14.7 3.78-14.7 3.78Zm-13.92 36.97c22.74-4.31 20.61-6.11 45.34-4.57 0 0-30.81-2.59-43.26-1.54-10.81.91-2.08 6.11-2.08 6.11Zm153.82-74.26c27.86-4.6 52.78 7.41 76.53 25.93-14.48-14.93-25.59-34.11-51.96-32.63l-24.57 6.7Zm-48.89.21c-20.04-8.94-42.13-14.86-64.28-20.87 0 0 33.51 13.08 44.22 16.56 6.1 1.98 20.06 4.31 20.06 4.31Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1978.22 1292.54c3.43-4.33-.25-10.12 2.4-8.2 '));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn4(colors),renderFn5(colors),renderFn6(colors),renderFn7(colors)));
      
        return render;
      }
}