//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_gunner_8 {

using ToColor for bytes4;

function renderFn28(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.955" d="M2025.28 699.377c3.47 6.881 6.97 17.332.59 25.854-5.43 7.265-19.6 12.702-30.04 17.965-11.25 5.678-25.16 12.367-34.67 11.986-9.64-.385-14.84-7.927-18.08-14.347-3.36-6.679-6.04-14.46-.09-22.754 5.4-7.53 18.75-15.622 29.55-21.068 10.66-5.375 23.98-14.043 33.18-13.983 10.37.068 16.15 9.592 19.56 16.347Zm-18.47 8.843c1.51 2.981 3.63 7.679.87 11.75-3.13 4.632-11.64 8.638-17.67 11.682-6.36 3.206-14.13 6.522-19.18 5.873-3.97-.507-5.78-4.255-7.19-7.056-1.47-2.917-3.95-7.142-1.8-10.779 2.56-4.311 10.37-8.028 16.52-11.131 6.3-3.174 15.96-8.392 21.57-8.203 4.49.152 5.45 5.029 6.88 7.864Zm-81.48 29.73c-2.84 7.165-8.33 16.718-18.94 17.611-9.03.764-22.51-6.224-33.38-10.531-11','.72-4.646-25.95-10.601-31.98-17.961-6.12-7.468-3.93-16.36-1.28-23.044 2.76-6.954 6.8-14.126 16.95-15.182 9.22-.961 24.13 3.647 35.38 8.103 11.09 4.4 26.42 8.605 32.48 15.521 6.84 7.799 3.56 18.45.77 25.483Zm-18.87-7.936c-1.23 3.104-3.34 7.811-8.21 8.455-5.55.729-14.19-2.967-20.47-5.458-6.62-2.624-14.26-6.23-17.13-10.442-2.25-3.302-.66-7.145.5-10.062 1.2-3.037 2.72-7.695 6.87-8.499 4.92-.952 12.89 2.421 19.29 4.96 6.55 2.597 16.87 6.356 20.45 10.676 2.87 3.459-.13 7.419-1.3 10.37Zm-53.28-52.761c-7.62 1.103-18.64 1.094-24.7-7.659-5.16-7.458-5.81-22.625-7.48-34.192-1.81-12.477-3.73-27.789-.35-36.68 3.44-9.024 12.24-11.551 19.35-12.58 7.41-1.071 15.64-1.139 21.61 7.141 5.42 7.516 8.85 22.747 10.58 34.714 1.71 11.815 5.69 27.202 2.71 35.903-3.36 9.811-14.23 12.269-21.72 13.353Zm-2.51-20.322c-3.','3.478-8.43.998-11.42-2.908-3.39-4.448-4.49-13.782-5.45-20.472-1.02-7.046-1.7-15.466.52-20.054 1.75-3.598 5.88-4.125 8.98-4.574 3.23-.467 8.03-1.474 10.79 1.725 3.27 3.793 4.32 12.383 5.3 19.201 1.01 6.976 2.89 17.796.93 23.054-1.58 4.21-6.51 3.574-9.65 4.028Zm2.9-87.819c-5.35-5.553-11.77-14.51-8.19-24.532 3.05-8.543 15-17.914 23.42-26.019 9.08-8.742 20.4-19.232 29.59-21.669 9.34-2.475 16.52 3.202 21.51 8.383 5.18 5.39 10.04 12.036 6.79 21.715-2.94 8.788-13.31 20.455-22.03 28.84-8.6 8.277-18.78 20.486-27.58 23.139-9.93 2.991-18.27-4.406-23.51-9.857Zm15.04-13.892c-2.32-2.406-5.73-6.269-4.3-10.971 1.64-5.351 8.58-11.685 13.45-16.372 5.13-4.936 11.58-10.394 16.6-11.264 3.94-.684 6.78 2.364 8.95 4.624 2.27 2.354 5.88 5.661 4.89 9.772-1.17 4.872-7.54 10.726-12.5 15.504-5.08 4.888-12.78 12.721-18','.19 14.193-4.34 1.179-6.7-3.198-8.9-5.486Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.001" d="m2131.58 600.724 5.99-10.534s19.77 12.704 16.24 18.036c-7.09 10.72-58.81 46.289-58.81 46.289s-14.25 12.417-17.03 1.391c-2.77-11.026 6.84-14.151 6.84-14.151l46.77-41.031Zm-75.96 70.707 7.93-9.167s16.91 16.307 12.41 20.851c-9.04 9.135-66.69 33.96-66.69 33.96s-16.4 9.405-16.97-1.95c-.58-11.356 9.45-12.551 9.45-12.551l53.87-31.143Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.98" d="m1907.23 720.153-10.51-3.036s-3.79 23.017 1.83 24.199c11.3 2.373 65.98-9.954 65.98-9.954s16.77-1.578 11.29-11.244c-5.48-9.667-13.37-4.951-13.37-4.951l-55.22 4.986Zm-46.58-10.005-1.24 10.864s23.33-.101 23.56-5.84c.45-11.538-20.84-63.389-20.84-63.389s-4.36-16.27-12.97-9.256c-8.62 7.014-2.65 14.01-2.65 14.01l14.14 53.611Zm16.5-148.857 8.02-7.43s-17.75-15.133-21.66-10.929c-7.87 8.454-25.53 61.65-25.53 61.65s-7.31 15.178 3.8 15.477c11.1.299 11.14-8.897 11.14-8.897l24.23-49.871Zm70.23-75.347 9.98-4.468s-11.97-20.024-17.02-17.295c-10.16 5.488-43.94 50.22-43.94 50.22s-11.78 12.038-1.35 15.879c10.42 3.841 13.4-4.858 13.4-4.858l38.93-39.478Z" clip-rule="evenodd"/><path fi'));
      
        return render;
      }

    function renderFn29(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('ll="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.997" d="M848.731 1009.78c-4.468 7.9-12.111 18.32-22.789 18.68-9.101.32-20.785-8.37-30.511-13.87-10.493-5.94-23.165-13.51-27.406-22.156-4.306-8.778-.078-18.656 4.091-26.021 4.337-7.662 9.99-15.492 20.261-16.067 9.324-.525 22.98 5.565 33.044 11.262 9.935 5.623 24.092 11.285 28.471 19.438 4.937 9.193-.774 20.984-5.161 28.734Zm-16.793-10.074c-1.936 3.424-5.105 8.594-10.066 9.024-5.646.48-13.319-4.2-18.944-7.38-5.925-3.359-12.629-7.881-14.487-12.796-1.459-3.853 1.013-8.084 2.832-11.297 1.894-3.346 4.47-8.5 8.755-9.154 5.078-.774 12.162 3.505 17.895 6.75 5.867 3.321 15.181 8.177 17.715 13.256 2.03 4.068-1.859 8.345-3.7 11.597Zm-66.363-43.803c-4.468 7.895-12.112 18.317-22.789',' 18.681-9.101.314-20.785-8.367-30.511-13.873-10.493-5.939-23.166-13.505-27.407-22.155-4.306-8.778-.077-18.656 4.092-26.021 4.337-7.662 9.989-15.492 20.26-16.067 9.325-.525 22.981 5.565 33.045 11.262 9.934 5.623 24.092 11.285 28.47 19.438 4.938 9.193-.773 20.986-5.16 28.735Zm-16.793-10.075c-1.936 3.42-5.105 8.592-10.066 9.022-5.646.486-13.32-4.199-18.945-7.383-5.925-3.354-12.629-7.876-14.487-12.791-1.458-3.853 1.014-8.084 2.833-11.297 1.894-3.346 4.47-8.5 8.755-9.154 5.078-.774 12.162 3.505 17.895 6.75 5.867 3.321 15.18 8.177 17.715 13.256 2.029 4.069-1.859 8.345-3.7 11.597Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.104" d="M680.395 914.573c-3.246 6.723-9.181 15.507-19.234 15.259-8.568-.208-20.694-8.486-30.575-13.86-10.659-5.797-23.582-13.143-28.665-20.997-5.162-7.971-2.389-16.456.64-22.729 3.151-6.525 7.525-13.129 17.167-13.088 8.753.034 22.423 6.132 32.646 11.692 10.093 5.488 24.183 11.235 29.336 18.658 5.81 8.37 1.872 18.465-1.315 25.065Zm-17.131-9.78c-1.406 2.913-3.762 7.305-8.4 7.42-5.279.127-13.117-4.413-18.831-7.52-6.019-3.273-12.92-7.619-15.287-12.052-1.857-3.476-.045-7.075 1.277-9.811 1.376-2.85 3.173-7.257 7.144-7.606 4.706-.412 11.936 3.739 17.76 6.906 5.96 3.242 15.37 8.02 18.397 12.634 2.424 3.696-.723 7.259-2.06 10.029Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.081" d="M522.348 815.278c4.5-5.393 12.039-11.898 21.847-8.453 8.36 2.933 18.627 14.718 27.262 23.009 9.316 8.944 20.547 20.092 23.993 29.224 3.499 9.268-.882 16.497-5.08 21.528-4.368 5.234-9.95 10.153-19.395 7.037-8.575-2.825-20.784-13.018-29.718-21.597-8.821-8.468-21.51-18.46-25.108-27.201-4.057-9.857 1.782-18.254 6.199-23.547Zm14.88 14.817c1.95-2.336 5.12-5.784 9.69-4.414 5.201 1.563 11.996 8.405 16.99 13.2 5.26 5.05 11.175 11.407 12.628 16.401 1.139 3.916-1.343 6.779-3.174 8.974-1.908 2.286-4.533 5.927-8.494 4.993-4.696-1.108-10.971-7.384-16.061-12.271-5.209-5.001-13.499-12.572-15.563-17.95-1.653-4.308 2.131-6.711 3.984-8.933Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn30(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.672" d="M515.078 814.315c-.896 7.038-3.772 16.923-13.984 20.81-8.703 3.315-23.838 1.221-35.687.681-12.783-.582-28.392-1.559-36.285-6.163-8.012-4.671-8.215-13.014-7.379-19.58.87-6.831 2.944-14.227 12.669-18.123 8.828-3.539 24.749-3.927 37.009-3.369 12.102.552 28.323-.307 36.133 3.903 8.806 4.746 8.404 14.932 7.524 21.841Zm-20.706-1.33c-.388 3.048-1.21 7.742-5.841 9.73-5.272 2.26-14.768 1.596-21.621 1.284-7.218-.329-15.702-1.209-19.651-4.013-3.098-2.198-2.543-5.995-2.178-8.86.38-2.984.634-7.462 4.51-9.377 4.595-2.268 13.341-1.687 20.326-1.369 7.147.326 18.311.552 22.989 3.24 3.746 2.153 1.835 6.465 1.466 9.365Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.898" d="M356.604 725.804c5.816-4.757 15.031-10.336 24.527-6.344 8.095 3.4 16.325 15.307 23.586 23.79 7.833 9.151 17.2 20.529 18.88 29.417 1.706 9.02-4.37 15.521-9.796 19.959-5.645 4.617-12.489 8.844-21.677 5.19-8.341-3.314-18.927-13.863-26.44-22.64-7.416-8.665-18.545-19.06-20.464-27.59-2.163-9.618 5.675-17.113 11.384-21.782Zm12.401 15.119c2.52-2.06 6.544-5.08 11.017-3.442 5.091 1.868 10.739 8.843 14.938 13.749 4.423 5.168 9.255 11.619 9.723 16.447.368 3.786-2.817 6.304-5.184 8.24-2.465 2.017-5.961 5.259-9.893 4.079-4.659-1.4-9.883-7.801-14.163-12.802-4.38-5.117-11.432-12.894-12.457-18.131-.82-4.194 3.624-6.18 6.019-8.14Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.996" d="m795.57 968.626 11.4 2.201s-5.759 22.113-11.676 20.544c-11.898-3.156-59.708-39.478-59.708-39.478s-15.565-9.193-6.311-15.191c9.254-5.999 14.954 1.84 14.954 1.84l51.341 30.084Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.093" d="m707.837 932.559 7.965 8.347s16.036-16.437 11.533-20.545c-9.055-8.258-65.861-29.01-65.861-29.01s-16.22-8.14-16.478 2.731c-.258 10.872 9.545 11.5 9.545 11.5l53.296 26.977Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn31(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.76" d="m577.455 851.811-7.107-8.441s-14.106 16.442-10.092 20.599c8.072 8.359 58.523 29.551 58.523 29.551s14.418 8.28 14.581-2.653c.163-10.934-8.526-11.621-8.526-11.621l-47.379-27.435Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.267" d="m535.355 845.136 7.922 7.285s15.038-15.95 10.576-19.506c-8.973-7.15-64.409-23.391-64.409-23.391s-15.889-6.678-15.84 3.348c.049 10.028 9.535 10.11 9.535 10.11l52.216 22.154Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.179" d="m444.7 805.875 6.42 8.123s16.979-15.262 13.275-19.273c-7.449-8.065-57.968-29.116-57.968-29.116s-14.154-8.118-15.721 2.217c-1.566 10.335 7.512 11.158 7.512 11.158l46.482 26.891Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.979" d="m358.272 758.031 7.037 7.76s14.757-17.251 10.767-21.034c-8.022-7.606-58.898-24.6-58.898-24.6s-14.487-7.043-14.912 3.724c-.426 10.769 8.407 10.781 8.407 10.781l47.599 23.369Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m1931.49 482.469-35.57 37.827-28.66 18.811-19.39 72.713-12.22 3.302 6.86 39.78 9-9.518 17.59 71.493-9.52 4.236 11.3 20.71c-29.09-8.807-46-22.096-19.27-51.43l-.73-11.775c-32.15 6.612-52.77-86.483-9.79-91.437l11.48-23.781c-9.94-9.14-24.8-15.803 55.51-70.343l23.41-10.588Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5"'));
      
        return render;
      }

    function renderFn32(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(' stroke-width="7.177" d="M886.605 55.986s3.872-55.673 10.698-63.21c6.826-7.537 34.996-.557 34.996-.557l32.024-2.914S1006-23.959 1017.97-23.877c7.77.056 18.22 13.693 18.22 13.693s20.58-1.193 22.92 2.292c2.33 3.484-13.65 37.165-13.65 37.165l-3.95 21.376-31.23 6.105-6.08 45.212-36.498-61.305c24.445-1.687 48.738.09 72.798 6.589-31.9-6.582-72.416-8.552-107.451-5.754l-23.652 12.36-1.426 38.667-38.25 9.3 16.884-45.837Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".2" fill-rule="evenodd" d="M877.225 87.552s14.304 6.499 31.613 2.835c26.986-5.712 62.617-22.88 73.129-25.987 21.023-6.213 47.783-10.915 54.163-15.345l-65.775-11.163.771 12.175-62.273 35.163c-3.062-8.168-6.677-24.103 8.981-36.218 6.826-5.284 40.572-9.043 40.691-12.451.309-8.393 81.015 11.385 86.765 2.932 0 0-88.889-17.314-112.195','-9.953-34.988 11.05-27.223 40.577-30.91 35.773-8.174-10.69-.185-45.24-7.418-64.708-12.893 31.102-7.514 63.364-17.542 86.947Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m927.619 30.284.023.028c-.053.049-1.553 1.125.148 10.68.193 1.068.404 2.103.404 2.103-.202.648-.6 1.224-.803 1.872-.457-.497-1.076-.844-1.533-1.342-.09-.097-.734-3.065-.783-3.33-1.017-4.702-2.36-12.497 2.204-13.126 2.763-.379 6.394 2.678 10 6.537-.179-7.581.456-12.596 3.951-13.186 3.253-.555 6.178 3.563 10.299 10.904 1.698-9.24 3.944-15.106 8.417-15.36 3.661-.205 6.412 3.52 8.998 9.805 1.739-5.611 4.537-10.488 9.366-10.605 5.014-.12 9.041 5.22 12.359 11.957 1.819-7.243 4.053-11.033 7.752-11.118 3.419-.078 5.359 3.37 6.049 4.626 1.38 2.533 2.72 6.302 3.93 10.252 2.19-7.502 4.9-13.204 8.96-13.734 4.1-.539 6','.33 4.288 6.86 5.415 2.02 4.263 3.41 10.607 4.24 15.266 4.35-7.551 8.28-13.203 11.54-13.376 3.95-.215 4.07 5.948 4.11 7.856.1 4.88-.54 11.142-1.43 18.362-.11.894-.59.488-1.3 1.054-.23-.499-.82-.797-1.05-1.296-.03-.065 1.86-19.183-.23-22.49-3.55 1.947-10.73 17.209-11.07 17.67-1.03 1.375-3.43 1.106-3.85-.95-.02-.121-2.65-16.075-6.44-21.366-.29-.4-.52-.628-.68-.76-3.55 3.424-6.38 20.847-6.44 21.09-.6 2.787-4.07 3.28-5.53 1.171-.52-.745-.86-2.639-2.9-9.093-.49-1.545-2.55-8.124-4.401-11.489-1.88 4.85-3.226 15.368-3.313 15.833-.663 3.577-5.11 3.995-6.673 1.245-.379-.661-4.694-13.174-9.051-17.778-.587-.616-1.002-.883-1.225-1-1.676 1.416-3.686 7.068-5.211 16.21-.032.199-.108 2.105-1.671 3.107-1.715 1.109-4.091.437-4.979-1.408-.321-.67-1.725-6.515-3.781-11.94-1.184-3.127-2.073-4.732-2.631-5.544-1.6','72 2.967-3.22 10.498-3.405 11.397-1.25 6.076-1.01 6.303-1.652 7.13-1.203 1.556-3.701 1.386-4.634-.423-.959-1.835-5.652-11.967-8.376-15.244-.988 3.739-.754 13.273-.782 13.49-.218 1.596-2.289 2.355-3.468.964-.029-.04-6.911-9.27-10.065-10.003a2.274 2.274 0 0 0-.132-.021.21.21 0 0 1-.121-.043Zm-.267-.392c-.036-.053-.08-.114-.123-.18l.123.18Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.333" d="M944.553 251.333c-53.619-7.595-151.724-84.391-122.205-152.452 18.105-41.775 63.458-34.043 74.271-20.28 4.176 5.316 26.374 16.274 38.567 7.993 12.19-8.26 13.185-23.657 28.904-23.602 5.844.023 16.692.395 28.904 1.883 9.106 1.102 18.946 4.574 28.056 7.284 8.12 2.391 14.92 9.256 20.78 12.96 4.8',' 3.003 7.28 4.346 9.19 9.204 2.67 6.75-6.01 21.044-9.33 30.092-4.84 13.19 30.7 14.26 30.7 14.26l9.03 26.367s-12.94 8.759-14.22 19.515c-1.85 15.649-1.93 28.965-14.71 37.221-1.91 1.232-25.21 2.757-27.08 4.178-17.31 13.133-47.98 30.015-80.857 25.377Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M993.93 173.721c.115.346.287.69.233 1.043-.201 1.442-1.407 1.516-1.583 1.527-1.132.072-1.656-.913-1.732-1.057-1.679-3.165-11.482-26.3-.276-32.62 5.613-3.167 13.638.058 16.998 6.97.39.794 3.56 8.132 13.77 20.367.51.612 13.54 16.841 23.7 21.459 1.56.706 3.43 1.218 3.98.607 1.64-1.835.24-8.784.09-9.531-.35-1.708.96-2.112 1.15-2.169.66-.204.69-.193 1.3.13.36.19.9.473 2.17 4.59 3.29 10.714-2.34 13.918-7.81 13.497-9.83-.758-27.36-13.256-37.89-28.237-6.81-9.7-8.754-16.533-9.36-17.691-1.387-2','.656-4.214-3.829-5.319-2.517-3.039 3.618-1.688 15.645.63 23.604l-.051.028Zm-1.831-.459-.073-.262-.595.169c.25.036.472.067.668.093Zm-103.883-33.67c.38.52.392.55.293 1.186-.116.742-.263.681-.822 1.185-7.316 6.597-8.011 15.02-4.756 17.532 1.309 1.011 6.525 5.037 18.563 9.091 4.252 1.432 16.429 5.14 27.311 6.687 7.259 1.032 34.161 4.866 44.949-11.005.451-.665.363-.819 1.137-1.037.016-.004 1.207.142 1.213.148.246.313.623.559.731.942.101.358.282 1.002-1.87 4.268-12.378 18.782-47.291 19.107-71.307 10.717-13.507-4.718-22.509-11.383-25.868-15.243-5.205-5.981-2.707-17.838 7.981-24.665 1.572-1.005 2.33.036 2.445.194Zm12.275-53.681c-2.168 2.037-6.533 6.74-15.925 17.972l-2.611-1.759c2.011 1.973 4.872 2.932 6.882 4.905.005.005 3.309 5.178 3.31 5.183.148.519.424 1.039.37 1.576a56.762 56.762 0 0 1-.675 1.','329c-.481.128-.949.433-1.443.376-.995-.115-.981-.224-1.677-.948-.82-.853-9.814-10.213-10.178-10.759-.971-1.455-.42-2.883-.33-3.117.124-.321 10.628-20.098 16.748-25.27 3.957-3.344 7.04-1.794 8.824-1.153 10.424 3.75 19.325 7.889 35.085 15.898 7.27 3.695 7.239 3.75 14.421 7.608 10.831 5.819 10.821 5.829 21.591 11.765.864.477.964.436 1.323 1.356.007.017.003 1.501-.003 1.506-1.146 1.058-1.168 1.375-2.69 1.048-.047-.011-.045-.016-11.638-3.909-3.623-1.217-21.06-7.241-27.301-9.55-19.828-7.333-26.017-10.163-34.083-14.057Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".2" fill-rule="evenodd" d="M931.509 242.609c1.217-1.776 41.363 15.058 70.551-6.704.19-.14 10.74-7.697 25.3-11.958 19.04-5.569 41.73-8.752 24.72-15.14-3.56-1.336-15.8 13.131-26.74 4.327-13.85-11.149-6.33 15.471-49.416 16.109-57.','937.861-28.646-47.03-39.957-49.074-88.357-15.971-45.752-42.148-43.583-44.22 28.867-27.564-26.003-24.704 7.961-46.16 12.213-7.715 58.927 21.76 68.706 20.091 9.779-1.67 6.257-6.314 12.08-20.7 3.023-7.47-5.411-20.77-6.053-24.867-12.134-15.907-44.627 20.874-44.627 20.874-9.107-2.626-19.587-3.635-30.406-3.279-44.068 1.45-93.771 25.536-79.316 55.225-.212 64.267 57.836 84.287 110.78 105.476Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".2" fill-rule="evenodd" d="M1051.38 191.981c-5.61 9.929-15.11 4.905-25.01-4.233-2.34-2.16-4.7-4.548-7.04-7.024-12.1-12.816-15.31-32.679-22.216-32.337-10.337.511 6.436 46.475 6.436 46.475s-24.567-21.7-22.582-44.438c.463-5.304 5.914-9.532-6.317-9.931-5.405-.175 2.876-5.036 1.65-7.135-5.507-9.425-3.762-17.374.232-12.736 2.951 3.427 6.787 8.934 8.859 11.753 4.'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn28(colors),renderFn29(colors),renderFn30(colors),renderFn31(colors),renderFn32(colors)));
      
        return render;
      }
}