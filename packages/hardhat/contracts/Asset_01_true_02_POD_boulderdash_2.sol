//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_02_POD_boulderdash_2 {

using ToColor for bytes4;

function renderFn12(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="1.068" d="M1529.81 1606.59c1.42.24 2.74 1 3.88 2.31.88 1.03 1.65 2.39 2.27 4.05.51 1.35.93 2.89 1.24 4.59 2.12 11.28-.15 27.87-4.24 42.34-5.04 17.77-12.89 33.78-20.96 42.99-4.38 5-8.96 8.04-12.84 7.23-1.42-.3-2.73-1.11-3.84-2.51-.84-1.06-1.57-2.46-2.14-4.15-.46-1.34-.82-2.86-1.09-4.52-1.99-12.32 1.21-30.39 5.78-45.23 1.28-4.15 2.7-8.19 4.22-12.04 1.2-3.02 2.46-5.94 3.77-8.72 7.07-14.99 16.45-27.63 23.95-26.34Zm-.72 2.57c-5.98-1.04-13.37 7.34-19.48 18.21-1.1 1.96-2.18 4.03-3.22 6.19-1.3 2.69-2.55 5.52-3.73 8.47-1.49 3.72-2.88 7.63-4.12 11.67-3.95 12.82-6.56 27.82-4.98 38.57.26 1.76.63 3.36 1.1 4.77.6 1.8 1.36 3.27 2.25 4.39 1.19 1.5 2.59 2.35 4.11 2.67 3.52.73 7.61-1.45 11.63-5.5 7.54-7.62 14.93-21.9 19.63-38.46 3.92-13.81 5.92-2','9.5 3.93-40.24-.32-1.71-.73-3.26-1.24-4.61-.61-1.6-1.34-2.91-2.19-3.91-1.08-1.26-2.33-1.99-3.69-2.22Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.413" d="M1481.96 1702.95c.83 6.95 1.68 13.88 2.53 20.79 3.37-3.22 6.73-6.48 10.1-9.76-2.19-4.96-2.84-12.49-2.93-20.67.64-1.6 1.28-3.21 1.92-4.81m25.39 22.17c-4.82 5.82-9.65 11.55-14.48 17.2-1.09-3.93-2.17-7.87-3.25-11.82 4.98-4.81 9.97-10.71 14.82-17.74l1.11-5.02"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.392" d="M1488.58 1712.61c.26-2.11.53-4.21.79-6.31-.31-3.17-.63-6.34-.94-9.51-.16.18-.31.38-.47.59-.12.16-.24.32-.35.49-.33.47-.69.99-.98 1.65-.12.28-.26.65-.28.99-.11 1.86.11 3.6.25 5.19.24 2.87.54 5.67.88 8.42.37-.51.73-1.01 1.1-1.51Zm18.18 3.83c1.02-1.95 2.04-3.91 3.05-5.87 2.16-2.67 4.31-5.35 6.47-8.05l.06.71c.05.84.12 2.51-.42 3.41-1.05 1.75-2.21 3.12-3.3 4.5-1.93 2.44-3.86 4.79-5.79 7.07-.03-.59-.05-1.18-.07-1.77Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.352" d="m1505.21 1619.83-4.3.12c3.46-10.97 6.86-21.99 10.21-33.06.74-2.16 1.47-4.33 2.19-6.5.67-.41 1.34-.83 2.01-1.24-1.95 11.08-3.93 22.17-5.94 33.26-1.39 2.49-2.78 4.96-4.17 7.42Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderFn13(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.381" d="M1513.13 1617.07c-.68.03-1.63.29-2.16-.51-.17-.27-.28-.67-.37-1.08 3.29-8.47 6.55-16.99 9.78-25.57.67-1.62 1.33-3.24 1.99-4.86.56-.05 1.11-.09 1.66-.13-2.04 8.87-4.1 17.73-6.18 26.57-1.57 1.87-3.14 3.72-4.72 5.58Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.441" d="M1505.79 1630.17c-.88.66-2 1.71-2.78 1.46-.26-.09-.45-.36-.64-.65 2.6-10.41 5.16-20.84 7.68-31.28.6-2.07 1.2-4.13 1.8-6.19l2.04-1.62c-.98 9.68-1.96 19.37-2.96 29.06-1.71 3.09-3.42 6.16-5.14 9.22Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.142" d="M1500.84 1626.49c-1.69 1.59-3.39 3.17-5.09 4.75.73-7.46 1.44-14.92 2.16-22.38.24-1.72.47-3.43.71-5.14.68-.93 1.37-1.85 2.05-2.78.94 5.98 1.9 11.93 2.86 17.88-.89 2.55-1.79 5.11-2.69 7.67Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.413" d="M1501.03 1628.34c-1.55.2-3.09.41-4.64.61 2.59-11.18 5.14-22.37 7.64-33.57l1.95-6.57 2.07-1.71c-1.01 10.85-2.03 21.71-3.06 32.58-.52 1.29-.94 2.7-1.46 3.99-.74 1.85-1.61 3.37-2.5 4.67Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderFn14(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.142" d="M1496.14 1639.5c-.24.53-.48 1.06-.72 1.58-1.05 2.23-2.75 5.58-3.95 4.76-.19-.13-.34-.34-.48-.6.22-6.48.45-12.97.67-19.46.25-1.71.49-3.42.73-5.13.7-.91 1.39-1.83 2.08-2.75 1.46 4.67 2.92 9.32 4.39 13.96-.9 2.55-1.81 5.1-2.72 7.64Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.85" d="M1500.37 1643.32c-1.37 2.49-3.19 5.19-4.52 4.48-.22-.12-.4-.31-.57-.56 1.29-8.79 2.57-17.58 3.83-26.36.38-2.01.75-4.02 1.12-6.02.7-.87 1.41-1.74 2.12-2.62.38 7.59.78 15.17 1.19 22.73-1.05 2.79-2.11 5.57-3.17 8.35Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.225" d="M1495.13 1663.83c-.81 2.27-2.14 5.7-3.38 5.62-.2-.01-.38-.12-.55-.27-.25-.24-.45-.58-.64-.97.25-7.61.51-15.22.77-22.84.21-1.81.41-3.61.62-5.42.7-1.01 1.39-2.02 2.09-3.03 1.16 5.91 2.34 11.8 3.52 17.68l-2.43 9.23Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.36" d="M1545.32 1627.13c1.28.57 2.56 1.13 3.84 1.7 2.92-11.29 5.79-22.61 8.6-33.95.48-2.25.96-4.5 1.43-6.75-.39-.62-.79-1.23-1.18-1.84-4.08 10.95-8.21 21.8-12.41 32.56-.09 2.76-.19 5.52-.28 8.28Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderFn15(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.387" d="M1539.66 1621.7c.64.3 1.35.79 2.16.38.33-.17.67-.53 1.01-.89 1.64-8.93 3.25-17.85 4.84-26.77l.75-5.14-1.44-.69c-2.81 8.81-5.66 17.59-8.55 26.35.41 2.26.82 4.51 1.23 6.76Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.45" d="M1539.09 1636.27c.43.94.91 2.22 1.63 2.35.31.06.66-.13 1-.33 3.44-10.37 6.83-20.8 10.16-31.28.56-2.1 1.12-4.2 1.68-6.31-.33-.73-.67-1.47-1.01-2.21-4.29 9.28-8.64 18.46-13.02 27.53-.15 3.42-.29 6.83-.44 10.25Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.155" d="M1545.61 1634.8c.65 2.07 1.3 4.15 1.96 6.23 3.5-7.01 6.98-14.09 10.43-21.23.72-1.66 1.45-3.32 2.17-4.98-.13-1.1-.25-2.19-.38-3.29-4.12 5.16-8.25 10.26-12.38 15.3-.6 2.65-1.2 5.31-1.8 7.97Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.421" d="M1544.41 1636.41c1.28.76 2.57 1.53 3.85 2.3 3.88-11.1 7.7-22.27 11.46-33.51.58-2.25 1.17-4.49 1.75-6.74-.34-.77-.67-1.54-1-2.32-4.9 10.45-9.86 20.76-14.86 30.93-.23 1.3-.59 2.58-.83 3.88-.37 1.96-.47 3.8-.37 5.46Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderFn16(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.155" d="m1542.58 1648.36-.21 1.47c-.05.38-.09.75-.14 1.13-.19 1.76-.38 4.35.47 4.85.14.09.3.11.46.09.27-.04.55-.18.82-.37 3.47-5.91 6.92-11.89 10.35-17.92.74-1.65 1.47-3.3 2.2-4.96-.12-1.1-.25-2.19-.37-3.29-3.92 3.72-7.83 7.41-11.75 11.05l-1.83 7.95Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.864" d="M1536.62 1650.18c-.17 2.88.05 5.72 1.41 5.77.3.02.63-.1.95-.28 3.8-8.37 7.57-16.81 11.3-25.33.77-1.96 1.54-3.93 2.31-5.9-.17-1.05-.33-2.11-.5-3.17a1506.7 1506.7 0 0 1-13.64 20.18l-1.83 8.73Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.238" d="M1529.66 1670.59c-.21.86-.41 1.74-.57 2.63-.09.51-.17 1.03-.21 1.55-.03.31-.04.61-.03.9.09 1.84 1.2 1.35 1.9.94.15-.09.3-.19.45-.29 4.16-6.85 8.29-13.78 12.4-20.8.84-1.71 1.68-3.42 2.51-5.14l-.18-3.55c-4.39 4.91-8.77 9.77-13.17 14.55-1.03 3.08-2.06 6.15-3.1 9.21Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="gray" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8" d="m588.997 1580.6 38.052 10.53c19.518 73.59 35.493 137.91 70.42 210.42l-22.628 31.86c-35.677-75.82-62.538-161.14-85.844-252.81Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2" d="m608.234 1607.38 13.022 2.69m-9.836 10.91 12.79 2.17"/><path fill="#000" fill-rule="evenodd" d="m641.316 1689.81-11.725.38 12.583 33.74 10.12-3.88-10.978-30.24Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn17(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[13].toColor(),'" fill-rule="evenodd" d="m641.712 1689.66 11.227 30.16a.686.686 0 0 1-.401.87l-10.095 3.94a.722.722 0 0 1-.576-.02.73.73 0 0 1-.392-.42s-2.395-6.31-5.042-13.49c-3.467-9.41-7.377-20.3-7.377-20.3a.58.58 0 0 1 .059-.53.537.537 0 0 1 .457-.25l11.729-.24c.182-.01.349.11.411.28Zm-.691.58-10.606.49c1 2.59 4.445 11.52 7.436 19.44 2.166 5.74 4.088 10.95 4.764 12.79l8.808-3.32-10.402-29.4Z" clip-rule="evenodd"/><path fill="#000" d="M652.147 1747.26c1.574-.55 1.679-4.35.235-8.48-1.445-4.14-3.892-7.04-5.466-6.49-1.574.55-1.679 4.34-.234 8.48 1.444 4.13 3.891 7.04 5.465 6.49Z"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" d="M646.761 1731.84c.805-.29 1.843.1 2.868 1.13 1.178 1.18 2.388 3.19 3.261 5.63.865 2.44 1.201 4.78 1.029 6.44-.153 1.48-.749 2.47-1.584 2.76-.835.29-1.91-.1-2.957-1.17-1.168-1.2-2.362-3.24-3.205-5.68-.837-2.46-1.142-4.79-.954-6.44.162-1.44.731-2.39 1.542-2.67Zm.31.89c-.295.1-.49.39-.639.77-.19.52-.276 1.18-.269 1.96.014 1.45.358 3.26 1.028 5.13.666 1.88 1.538 3.48 2.442 4.61.478.6.96 1.05 1.423 1.33.325.18.632.29.903.19.271-.09.45-.36.588-.71.193-.51.284-1.16.288-1.93-.001-1.45-.315-3.24-.962-5.13-.642-1.88-1.498-3.51-2.388-4.65-.481-.61-.964-1.08-1.432-1.36-.354-.21-.686-.31-.982-.21Z" clip-rule="evenodd"/><path fill="#000" d="M660.042 1742.63c1.574-.55 1.679-4.35.235-8.48-1.445-4.14-3.892-7.05-5.466-6.5-1.574.55-1.679 4.35-.234 8.49 1.444 4.13 3.891 7.04 5.465 6.4','9Z"/><path fill="',colors[13].toColor(),'" fill-rule="evenodd" d="M654.637 1727.16c.822-.29 1.88.1 2.915 1.15 1.173 1.19 2.377 3.21 3.235 5.66.857 2.44 1.179 4.78 1.005 6.44-.154 1.47-.742 2.45-1.569 2.74-.828.29-1.897-.11-2.938-1.17-1.171-1.19-2.37-3.22-3.221-5.66-.85-2.45-1.17-4.79-.992-6.45.158-1.46.742-2.43 1.565-2.71Zm.349 1c-.282.09-.471.36-.614.73-.194.5-.282 1.17-.279 1.94.007 1.45.337 3.25.996 5.13s1.528 3.49 2.424 4.62c.48.6.964 1.07 1.424 1.33.337.2.646.3.924.2.277-.1.462-.36.602-.73.196-.49.285-1.16.284-1.93 0-1.44-.327-3.25-.981-5.13-.653-1.87-1.517-3.49-2.414-4.63-.48-.6-.964-1.07-1.428-1.34-.341-.2-.656-.29-.938-.19Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor()));
      
        return render;
      }

    function renderFn18(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" d="m653.757 1750.57 5.275 21.11c5.151-.25 9.342-2.74 11.626-9.68m-7.071-8.91 4.23-2.33m-3.442 3.65 2.083-1.07m1.44-.83 1.117-.73m-4.02 4.01 3.618-2.41m-2.868 3.58 1.379-.83m1.285-.83 1.784-1.14m-4.208 4.19 3.242-2.01m-1.712 2.78 1.01-.6m-34.743-65.37 6.328-.64"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2" d="m613.71 1633.82 13.329.57m-9.655 11.43 13.246.47m-9.931 10.98 6.635-.34m-4.238 10.92 13.713.03"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.2" d="m662.848 1776.54.92 2.65m1.715-3.99.948 2.64m1.514-4.25 1.263 2.51m.496-4.26 1.52 2.35m.11-4.49 1.657 2.26"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5" d="m1018.28 1374.71-.39-33.33 16.52 30.34 13.06-30.17 2.93 31.5m14.21-33.03.32 33.59m15.07-2.25-1.12-31.73 22.53 30.64.54-32.47"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5" d="m1116.56 1338.26-.03 31.34 12.57-1.39 5.85-16.69-6.82-15.11-11.57 1.85Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.529" d="m1007.91 1386.73 17.09-.59m-7.97.59.29',' 15.64"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5" d="m1031.87 1386.17.66 17.08-.36-9.38 10.38.28m1.77-9.05-.25 17.34m9.48-16.66.63 16.64 9.59-.55m-7.14-8.28 7.29-.34m-11.04-9.12 11.02-.35m26.55-1.13-10.97.42.38 18.49 10.4.09-.06-8m8.9 7.82 4.66-17.97 10.71 19.42m-13.29-9.47 8.4.61m14.29 7.71-1.58-20.31 14.2 1.06-1.82 6.53-11.67 1.57"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M830.351 955.255s212.279 1.4 343.439 55.155c119.74 49.07 192.5 140.72 223.75 240.62 35.61 113.85-11.51 360.27-35.61 469.74-.53 2.43-1.17 4.76-1.89 7.01-4.73 14.72 3.36 34.8-4.28 47.49-5.93 9.84-10.77 16.22-30.91 18.21 3.56 14.73-3.75 24.97-16.88 32.79-6.98-5.24-9.9-10.84-10.79-16.63l1.11-15.9c2.73 2.83 19.86 4.19 25.3.47l-25.41-15.03c-','11.16-8.96-13.74-18.38-13.3-30.83 2.61-2.98 1.22-7.16 1.22-7.73-.02-1.45-4.02 5.64-5.38 5.3-3.21-.8-7.49-1.58-9.03.34-4.25 5.28.17 14.35.17 14.35s-1.93 9.11-2.03 10.15c-.87 8.96 1.25 18.92 10.84 23.12l-3.57 7.36 5.69 9.06-1.01 6.34 3.7 9.15-44.52 11.3.33 12.9-80.27-14.58 47.8 55.23c-82.2 69.64-205.86 103.82-320.828 126.51 79.667 108.46 281.168 107.3 633.628-30.5 123.82-312.77 144.05-646.52 9.74-1011.553-394.29-177.537-582.37-135.638-701.009-19.842Z" clip-rule="evenodd"/>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn12(colors),renderFn13(colors),renderFn14(colors),renderFn15(colors),renderFn16(colors),renderFn17(colors),renderFn18(colors)));
      
        return render;
      }
}