//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_03_RIDER_gunner_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.977" d="M811.821 1448.85s19.114 147.91 47.715 175.16c22.319 21.26 90.345-20.25 90.345-20.25l280.239 6.12s111.09 4.82 120.25-16.44c16.38-38.02-6.76-204.45-6.76-204.45l190.66 64.13s-82.32 153.18-99.05 194.17c-15.16 37.13-146.33 60.51-146.33 60.51l-17.53 255.25c-104.44 88.1-263.36 63.63-333.756 16.13l-1.548-254.86c.774 6.7-106.546-3.86-140.292-24.01-30.072-17.97-163.819-137.8-163.819-137.8l179.876-113.66Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" d="m1358.79 1532.6-2.16 44.17c21.81 18.71 78.31 54.25 100.85 22.03l18.69-40.02c-29.27 25.04-87.88 10.63-117.38-26.18Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" d="m1354.8 1588.7-3.47 10.17c17.51 21.11 63.21 55.92 84.41 40.9l-.01-25.83c-28.18 11.22-51.35 2.45-80.93-25.24Zm-516.589-1.22c4.51 14.25 10.541 27.02 18.288 38.1-9.669 25.28-42.177 69.51-75.457 58.99l-27.133-21.64c35.621 1.73 76.41-33.08 84.302-75.45Z" clip-rule="evenodd"/><path fill="',colors[1].toColor()));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="m860.645 1629.31 4.949 2.32c-5.018 24.63-14.178 76.4-38.563 77.37l-19.116-5.9c28.476-7.5 40.658-37.85 52.73-73.79Zm422.365 102.26-2.29 59.46c-15.36 18.39-53.97 48.9-73.9 55.25-19.28 6.14-45.66-17.17-45.66-17.17 53.7-29.72 92.31-62.66 121.85-97.54Zm-5.85 92.46 2.44 48.1-72.07 54.73-44.76-12.46c47.82-20.22 90.16-57.5 114.39-90.37Zm-335.497-87.31 1.719 67.37c18.502 23.42 42.116 38.42 70.278 45.95l49.86-14.37c-45.89-24.43-87.357-56.02-121.857-98.95Zm-1.982 89.54 3.864 58.06s35.64 37.27 55.842 43.53c20.203 6.25 65.353-6 65.353-6-50.42-26.75-92.556-58.35-125.059-95.59Zm160.899-20.28 20.23-1.06 2.04 206.4-12.13 7.37-10.14-212.71Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m1059.88 1994.91 47.58-35.4c-57.25-12.03-67.49-25.8-73.3-56.3 3','2.85 8.96 92.35 1 153.51-8.01-76.63-17.72-134.31-35.79-148.76-54.66l87.83 9.38c-22.22-32.13 82.78-45.84 109.8-88.82l137.71-137.71 66.33-201.36-94.36-17.89 6.66 184.45L990.705 1735l-89.345-109.64-35.738 12.41s-12.118 45.81-35.983 31.89c-23.864-13.93-106.82-127.86-106.82-127.86l-55.788 44.71c19.965 24.05 70.825 82.03 135.15 113.9 42.132 20.87 93.244 22.3 134.061 24.39l4.966 171.72c27.272 40.96 70.462 78.79 118.672 98.39Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.85" d="m758.537 1533.92-35.767 9.31 123.169 473.38 35.768-9.3-123.17-473.39Z"/><path fill="',colors[2].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.852" d="m1468.33 1411.35-36.81-3.3-43.73 487.44 36.81 3.31 43.73-487.45Z"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.077" d="M1335.95 1791.03s-140.1 206.79-215.38 213.53c-75.29 6.74-236.322-173.06-236.322-173.06l.888 203.25c70.77 25.07 145.614 55.56 228.634 52.59 66.06-2.36 138.1-33.16 211.62-52.59l10.56-243.72Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[4].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.245" d="M1099.14 1817.64c37.92 1.73 116.29-58.49 118.01-96.4 2.87-62.95-44.05-160.01-106.89-161.41-94-2.11-126.783 81.51-127.818 147.17-.598 37.94 78.768 108.9 116.698 110.64Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.254" d="M1010.58 1744.16c-5.66-13.13-10.987-59.48 11.42-68.8 5.51-2.29 136.35 31.56 156.51 41.86 13.77 7.04 8.45 35.37-2.38 46.44-13.49 13.8-72.06 36.77-78.97 35.8-6.9-.98-79.52-38.94-86.58-55.3Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.31" d="M1009.7 1737.46c6.9 11.97 13.12 14.23 18.91 10.13 7.15 12.82 14.21 17.24 21.15 11.46 4.87 12.65 10.07 10.71 17.75 2.78 3.75 21.98 24.8 25.09 28.81 11.27 1.5 11.49 13.18 19.87 24.01 1.92 4.3 4.04 9.74 5.98 17.22-5.43 5.7 7.3 9.86 8.41 14.37-3.59 2.7 3.71 8.43 2.91 19.68-6.12l14.88-19.74c-46.07 5.79-104.38 2.63-15','0.26-14.05-10.12-3.68-19.64-8.02-28.29-13.06-5.84 8.5 1.77 24.43 1.77 24.43Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.194" d="M1006.16 1709.33c-1.18-.31 5.33 6.07 12.53 9.98 7.33 3.99 15.38 5.92 16.05 5.73l10.58 23.05 15.74-14.36c27.46 9.93 55.18 8.54 83.9 11.44l-1.33 16.7 17.48-15.08s14.96-1.92 20.61-2.55c4.76-8.38 22.47-15.24 1.24-22.97l-12.92 4.89c1.61-18.65-12.72-9.13-21.02-2.62-2.88-8.51-7.52-8.79-17.54-4.07-3.91-9.26-12.61-9.84-24.67-4.29-9.09-10.77-17.42-10.61-25.33-4.4-7.87-8.54-13.54-8.62-17.76-3.08-7.79-12.91-15.74-14.04-23.82-4.14l-14.95-9.74c-8.69-1.74-11.4 2.6-18.79 15.51Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round','" stroke-miterlimit="1.5" stroke-width="7.254" d="m1097.13 1680.31 12.57 11.32 15.31-6.17-27.88-5.15Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.708" d="M791.895 1371.19s-76.206-77.27-101.48-69.39c-25.265 7.88-33.377 35.25-50.044 49.86-12.435 10.9-18.476 3.05-38.456 23.08-9.759 9.78-15.375 29.05-23.982 40.16-12.13 15.63-21.192 31.45-21.775 44.27-1.855 40.75 56.031 116.77 77.482 133.4 13.072 10.14 51.326-9.26 51.22-33.61 32.717 3.99 47.13-7.14 46.638-30.61 0 0 31.141 24.17 48.515 16.96 19.983-8.3 71.415-66.76 71.415-66.76s31.48-31.11 10.939-61.2c-6.888-10.09-42.491-16.56-42.491-16.56l-27.981-29.6Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.85" d="m736.162 1521.3 60.666-78.05s7.954-19.81 3.158-27.81c-8.971-14.98-57.008-62.04-5'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('7.008-62.04"/><path stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7" d="M798.653 1421.65s-27.764-33.64-39.395-31.7c-6.896 1.16-21.011 27.71-24.68 43.39-1.807 7.73 2.007 14.59 2.007 14.59"/><path fill="#000" fill-opacity=".3" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.78" d="M788.575 1528.82c8.045-7.32 8.68-19.73 1.417-27.71-7.263-7.99-19.673-8.53-27.718-1.21-8.045 7.32-8.679 19.72-1.416 27.71 7.262 7.98 19.672 8.52 27.717 1.21Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.85" d="M675.536 1352.7c-15.127 22.24 46.818 88.3 71.577 106.09 9.645 6.93 38.971 2.2 37.536-.43l-18.798 13.57s-29.851-17.25-41.908-13.91c-12.056 3.','34-35.522 11.43-29.218 42.72 2.809 13.97 39.436 19.38 39.436 19.38m-101.696-12.72 46.885 51.28c-4.446-15.96 2.815-32.81 18.839-43.7 1.454-.99-54.126-75.98-54.126-75.98"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m688.173 1472.04 24.92-16.62-39.725-63.94 1.859-41.83 59.689 70.12 24.625-29.12 56.617 40.18c-26.214 47.24-22.51 68.79 6.237 68.83l-50.226 73.94c-14.972 41.35-1.549 119.83 12.575 199.21 0 0-56.988-228.51-62.147-224.82-12.056 8.63-35.091 25.21-54.509 39.7-14.414 10.75-35.987 3.49-38.116-.96-5.974-12.52-68.41-91.59-68.41-91.59 1.474-47.84 14.77-87.44 41.745-117.48l48.299-30.53c-5.543 7.38-51.269 62.22-46.063 77.61 14.414 42.63 56.847 95.49 71.314 83.93 5.793-4.62-50.199-83.16-46.279-85.59 11.545-7.14 57.595 48.96 57.595 48.96Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.815" d="m1575.07 1325.4-20.36-16.85-15.99-33.93-62.5-33.63c-6.79-59.87-32.1-51.33-57.4-42.81l-59.93 96.24-27 12.22s-34.73 31.53-22.33 49.35c13.17 18.91 45.29 60.33 101.3 64.11 3.33 3.86 26.93-10.98 29.97-9.95 9.38 3.17 25.04 9.59 24.2 24.21-.94 16.1 3.4 33.56 20.96 31.81l81.4-32.25 7.68-108.52Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1455.29 1416.04s-31.18-46.55-5.76-84.11c6.88-10.17 5.71-51.2 5.71-51.2-15.74 3.65-38.25-17.1-47.86-28.84l-11.03-8.9-33.83 50.84 56.45-7.16 21.59 20.94c-17.8 25.67-43.38 30.7-73.85 22.79l-32.57 3.42-26.95 14.21c13 40.03 67.45 73.1 120.16 71.16l-19.14 305.14 47.08-308.29Z" clip-rule="evenodd"/><path',' fill="#000" fill-opacity=".3" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.844" d="M1448.37 1248.43c10.82 0 19.59-4.15 19.59-9.28 0-5.12-8.77-9.27-19.59-9.27s-19.59 4.15-19.59 9.27c0 5.13 8.77 9.28 19.59 9.28Zm2.27 148.86c10.21 0 18.48-8.11 18.48-18.11 0-10.01-8.27-18.12-18.48-18.12s-18.48 8.11-18.48 18.12c0 10 8.27 18.11 18.48 18.11Zm30.47 31.04c7.65 0 13.86-5.4 13.86-12.07 0-6.66-6.21-12.06-13.86-12.06-7.66 0-13.87 5.4-13.87 12.06 0 6.67 6.21 12.07 13.87 12.07Z"/><path fill="#000" fill-opacity=".3" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.714" d="M1490.77 1460.28c8.04 0 14.56-4.95 14.56-11.05 0-6.11-6.52-11.06-14.56-11.06-8.05 0-14.57 4.95-14.57 11.06 0 6.1 6.52 11.05 14.5','7 11.05Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.844" d="M1360.22 1297.39s51.97-12.64 64.66-7.53c12.48 5.03 19.94 28.28 11.43 38.22-10.78 12.61-65.67 36.03-65.67 36.03"/><path fill="#000" fill-opacity=".3" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.844" d="M1393.26 1340.89c8.84 0 16-9.09 16-20.3s-7.16-20.3-16-20.3-16 9.09-16 20.3 7.16 20.3 16 20.3Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.844" d="M1401.95 1232.34s3.88 35.72 10.48 46.01c6.61 10.28 29.14 15.76 29.14 15.76l34.46-38.86 2.25-6.53"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8','.844" d="m1450.54 1283.99-13.18 44.53-17.42 32.34s-1.07 42.13 10.3 45.23c28.43 7.77 69.32-60.92 69.32-60.92l14.45-54.84"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.844" d="M1462.6 1393.69s-12.16 28.72-4.89 36.41c3.63 3.83 21.89-.73 32.76-4.49 3.85-1.32 35.41-31.9 54.36-49.91 10.23-9.73 10.57-23.65 10.57-23.65"/><path fill="',colors[3].toColor()));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="11.506" d="M877.988 1801.2c53.637-1.22 90.952 80.72 90.952 154.66 0 41.42 4.067 80.59 4.654 115.56.3 18.03-196.4-103.49-198.552-117.58-11.149-73.1 57.24-151.61 102.946-152.64Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" d="M875.381 1804.88c46.763-13.25 69.563 48.95 83.023 111.09 12.319 56.89-44.164-19.74-92.773-19.74-48.605 0-97.183 70.15-83.087 13.67 14.675-58.79 63.18-96.62 92.837-105.02Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M895.334 1803.85s-60.542 22.65-45.15 36.57c15.394 13.92 36.885 31.15 36.885 31.15l-36.885 16.78 21.124 15.79-21.73 37.82 32.439 17.94-5.741 47.18c-44.972-12.42-74.676-49.31-102.184-91.05 41.822-90.18 81.943-116.59 121.242-112.18Z" clip-rule="evenodd"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.077" d="M1345.1 1771.31c53.62 1.63 114.38 93.14 109.06 142.77-1.56 14.6-145.37 140.22-155.54 129.35-23.47-25.11-38.02-65-36.66-109.45 2.25-73.91 29.51-164.3 83.14-162.67Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" d="M1355.5 1779.67c-46.76-13.24-69.56 48.96-83.02 111.1-12.32 56.89 44.16-19.74 92.77-19.74s97.19 70.14 83.09 13.67c-14.68-58.79-63.18-96.63-92.84-105.03Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1319.28 1778.61c-19.49 34.85-33.24 69.08-19.06 100.24l27.47 4.36-42 34.66 50.7-11.38-13.05 32 19.93 23.54-11.88 45.17c-42.93 32.14-88.82 54.51-138.86 65.04-45.38 10.71-174.11-.28-207.022-5.32 0 0 15.452-19.22 46.502-18.57 31.26.66 89.35 6.95 69.47-33.95 5.75-16.19 17.97-10.93 40.08-18.68l123.77-105.56c15.61-59.82 34.85-104.85 53.95-111.55Z" clip-rule="evenodd"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors)));
      
        return render;
      }
}