//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_05_BODY_gunner_1 {

using ToColor for bytes4;

function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M1704.94 1939.37c10.55-4.9 21.81-5.31 30.88-2.27 7.57 2.55 13.54 7.64 16.83 14.53 4.08 8.75 2.89 18.83-2.45 27.65-4.35 7.19-11.62 13.43-20.83 17.36-9.31 3.66-18.95 4.35-27.24 2.33-10.09-2.47-18.2-8.69-21.7-17.61-3.34-8.77-1.82-18.48 3.93-26.69 4.56-6.52 11.65-12.12 20.58-15.3Zm1.7 4.16c-7.44 3.46-13.13 8.8-16.58 14.77-3.64 6.33-4.53 13.43-1.57 19.61 2.8 5.99 8.82 9.61 15.86 11 6.43 1.26 13.78.56 20.85-2.45 7.11-2.79 12.75-7.38 16.32-12.72 3.9-5.83 5.46-12.53 3.06-18.65-2.45-6.42-8.27-10.81-15.47-12.73-6.79-1.81-14.71-1.6-22.47 1.17Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M1620.49 2121.57c-17.39 5.38-20.83 15.99-17.24 25.9 5.6 15.48 21.21 17.59 30.01 16.32 18.04-2.6 32.61-7.7 27.81-23.45-4.8-15.75-23.2-24.15-40.58-18.77Z" clip-rule="evenodd"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" d="M1619.9 2119.67c8.9-3.22 18.2-2.89 26.11.11 8.89 3.38 15.88 10.26 19.05 19.34 3.08 9.15.59 15.58-4.8 20.3-2.68 2.35-6.26 4.24-10.48 5.69-4.62 1.58-10.07 2.6-15.84 3.41-5.63.67-13.67.18-20.69-3.58-5.7-3.06-10.82-8.11-13.43-16.22-2.18-6.95-1.65-14.07 3.41-19.86 3.33-3.82 8.65-7.13 16.67-9.19Zm1.17 3.79c-6.56 2.4-10.85 5.49-13.35 8.96-3.09 4.29-2.95 9.19-1.04 13.81 2.29 5.68 6.2 9.02 10.43 10.97 5.37 2.48 11.32 2.57 15.47 1.87 5.14-.76 9.98-1.78 14.12-3.14 2.99-.98 5.61-2.1 7.58-3.67 2.97-2.37 4.15-5.76 2.8-10.7-1.87-7.18-6.97-12.75-13.58-15.95-6.57-3.18-14.52-4.19-22.43-2.15Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M1558.95 2200.35c-19.25 5.96-23.07 17.68-19.11 28.62 6.19 17.07 23.47 19.39 33.21 17.98 19.97-2.89 36.11-8.54 30.81-25.92-5.29-17.38-25.65-26.63-44.91-20.68Z" clip-rule="evenodd"/><path fill="',colors[6].toColor()));
      
        return render;
      }

    function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M1558.31 2198.26c9.84-3.57 20.12-3.22 28.87.08 9.85 3.71 17.59 11.31 21.09 21.35 3.41 10.11.64 17.22-5.35 22.43-2.97 2.6-6.93 4.68-11.6 6.28-5.11 1.75-11.13 2.88-17.51 3.77-6.23.75-15.11.22-22.87-3.92-6.32-3.37-12-8.94-14.89-17.91-1.95-6.22-1.92-12.56 1.18-18.15 3.23-5.81 9.72-11.01 21.08-13.93Zm1.29 4.19c-7.26 2.65-12 6.06-14.78 9.89-3.44 4.74-3.3 10.15-1.19 15.25 2.54 6.28 6.87 9.96 11.54 12.1 5.95 2.72 12.53 2.83 17.13 2.05 5.69-.86 11.04-1.98 15.62-3.48 3.32-1.09 6.22-2.33 8.41-4.06 3.3-2.62 4.62-6.37 3.13-11.83-2.07-7.93-7.73-14.06-15.04-17.58-7.28-3.5-16.07-4.6-24.82-2.34Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M1666.33 2040.99c-16.65 5.79-21.68 11.08-16.98 24.69 4.7 13.61 16.79 18.74 33.44 12.94 16.65-5.79 23.06-17.29 22.22-23.47-1.93-14.27-22.03-19.95-38.68-14.16Z" clip-rule="evenodd"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" d="M1665.68 2039.12c9.79-3.96 20.9-3.99 29.32-.72 7.52 2.93 12.77 8.61 14.12 16.2.68 4.05-.82 10.12-5.66 15.98-3.93 4.76-10.2 9.39-19.08 12.6-8.92 2.92-16.68 3.13-22.91.93-7.45-2.64-12.95-8.45-15.62-17.22-2.09-7.09-2.01-12.23.28-16.27 2.78-4.91 8.98-8.42 19.55-11.5Zm1.3 3.74c-6.73 2.74-11.35 5.23-13.99 8.28-2.86 3.31-2.53 7.33-.14 13.33 2.27 5.86 6.16 9.66 11.36 11.18 4.72 1.39 10.44.84 17-1.58 5.68-1.92 10.02-4.59 13.22-7.43 4.42-3.94 6.79-8.01 6.48-10.93-.58-6.34-5.81-10.58-12.48-12.7-6.45-2.05-14.21-2.26-21.45-.15Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M1703.99 1954.68c-17.98 7.36-21.47 10.64-15.18 25.29 6.28 14.65 14.43 18.51 32.41 11.15 17.98-7.36 26.01-12.18 23.13-22.22-4.4-15.28-22.38-21.59-40.36-14.22Z" clip-rule="evenodd"/><path fill="',colors[6].toColor()));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M1703.14 1952.6c8.85-4.22 17.86-5.06 25.55-3.27 9.61 2.23 17 8.77 20.21 18.26 1.88 5.75.9 10.35-2.28 14.56-2.3 3.07-6.14 5.95-11.6 8.8-3.27 1.7-7.21 3.37-11.73 5.23-9.8 3.75-17.12 4.59-22.79 2.84-6.85-2.11-11.85-7.68-15.55-17.39-2.84-7.69-3.43-12.78-1.71-16.67 1.03-2.31 2.72-4.37 5.48-6.16 3.22-2.07 7.92-3.97 14.42-6.2Zm1.7 4.16c-7.06 3.38-11.65 5.84-14.04 8.69-2.62 3.1-1.22 6.57 1.87 12.86 2.93 6.12 5.93 9.95 10.48 11.04 4.1.99 9.16-.3 16-3.28 8.02-3.19 13.93-5.79 17.65-8.69 2.56-1.99 3.77-4.07 2.99-7.17-1.63-6.85-6.54-11.69-13.09-13.95-6.34-2.18-14-2.22-21.86.5Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" d="M521.719 2169.92c17.396 5.39 35.106-2.09 39.556-16.7 4.449-14.61-6.046-30.81-23.442-36.2-17.397-5.38-35.106 2.1-39.556 16.71-4.449 14.6 6.046 30.81 23.442 36.19Z"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" d="M538.402 2115.18c8.865 2.35 16.135 7.42 20.965 13.71 5.719 7.44 7.851 16.63 5.514 25.43-2.475 9.01-9.31 15.85-18.222 19.38-7.736 3.06-17.068 3.47-26.336.73-9.19-2.97-16.681-8.59-21.371-15.5-5.397-7.94-7.231-17.46-4.271-26.3 2.969-8.62 9.859-15.02 18.744-17.95 7.497-2.47 16.333-2.56 24.977.5Zm-1.141 3.69c-7.751-2.06-15.441-1.42-21.812 1.24-6.66 2.78-11.773 7.92-13.578 14.71-1.805 6.57.11 13.36 4.286 19.01 3.861 5.22 9.749 9.46 16.956 11.59 7.139 2.3 14.359 2.13 20.453-.01 6.589-2.31 11.94-6.84 14.1-13.29 2.291-6.65.917-13.79-3.044-19.87-3.79-5.81-9.796-10.7-17.361-13.38Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" d="M581.305 2252.99c19.265 5.96 38.864-2.28 43.775-18.4 4.91-16.12-6.727-34.02-25.992-39.98-19.265-5.96-38.864 2.27-43.774 18.39-4.911 16.12 6.726 34.02 25.991 39.99Z"/><path fill="',colors[6].toColor()));
      
        return render;
      }

    function renderFn10(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M599.718 2192.57c9.805 2.6 17.849 8.19 23.202 15.12 6.354 8.23 8.729 18.39 6.147 28.12-2.735 9.95-10.309 17.51-20.192 21.39-8.55 3.36-18.866 3.8-29.111.77-10.163-3.29-18.449-9.49-23.649-17.1-5.999-8.79-8.047-19.31-4.776-29.08 3.281-9.52 10.915-16.59 20.764-19.81 8.288-2.71 18.056-2.8 27.615.59Zm-1.261 4.07c-8.577-2.27-17.083-1.58-24.131 1.34-7.38 3.06-13.046 8.73-15.038 16.23-1.993 7.26.14 14.76 4.779 20.99 4.282 5.77 10.804 10.44 18.78 12.8 7.903 2.56 15.89 2.37 22.633.03 7.299-2.54 13.227-7.53 15.611-14.65 2.531-7.35.994-15.25-3.407-21.96-4.206-6.41-10.857-11.8-19.227-14.78Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" d="M476.288 2083.45c16.662 5.79 33.779.04 38.232-12.86 4.453-12.9-5.444-28.05-22.105-33.85-16.662-5.79-33.779-.04-38.232 12.86-4.453 12.9 5.444 28.05 22.105 33.85Z"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" d="M493.065 2034.87c10.193 3.05 18.126 9.5 22.47 16.96 3.673 6.3 4.655 13.37 2.645 20.03-2.599 8.33-9.63 14.39-18.738 17.07-7.357 2.17-16.098 1.97-24.747-.91-8.565-3.11-15.551-8.38-19.988-14.66-5.486-7.76-7.267-16.87-4.175-25.02 2.526-6.49 7.655-11.43 14.429-14.11 8.01-3.16 18.217-3.29 28.104.64Zm-1.301 3.74c-7.25-2.16-14.468-2.02-20.536-.1-6.505 2.07-11.584 6.34-13.395 12.35-1.8 5.77.124 11.89 4.164 17.1 3.66 4.72 9.161 8.68 15.883 10.91 6.652 2.42 13.403 2.73 19.183 1.29 6.377-1.58 11.654-5.19 13.795-10.83 2.281-5.85.926-12.36-2.908-18.02-3.579-5.29-9.157-9.89-16.186-12.7Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" d="M433.492 1998.55c17.715 7.26 36.888 1.93 42.823-11.91 5.935-13.83-3.615-30.93-21.33-38.18-17.716-7.26-36.888-1.93-42.823 11.91-5.936 13.83 3.614 30.93 21.33 38.18Z"/><path fill="',colors[6].toColor()));
      
        return render;
      }

    function renderFn11(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M455.835 1946.38c8.93 3.18 16.016 8.78 20.58 15.3 5.749 8.21 7.269 17.92 3.927 26.69-3.501 8.92-11.609 15.14-21.7 17.61-8.285 2.02-17.924 1.32-27.235-2.34-9.212-3.93-16.485-10.16-20.838-17.36-5.336-8.81-6.525-18.89-2.445-27.64 3.292-6.89 9.258-11.98 16.829-14.53 9.073-3.05 20.327-2.63 30.882 2.27Zm-1.703 4.16c-7.761-2.77-15.676-2.98-22.464-1.17-7.2 1.92-13.023 6.31-15.471 12.73-2.403 6.12-.845 12.82 3.059 18.65 3.566 5.33 9.209 9.92 16.318 12.72 7.069 3.01 14.424 3.71 20.852 2.45 7.04-1.39 13.061-5.01 15.859-11 2.956-6.18 2.073-13.28-1.575-19.61-3.442-5.97-9.136-11.31-16.578-14.77Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M540.286 2128.58c17.385 5.38 20.831 15.99 17.239 25.9-5.606 15.47-21.214 17.59-30.013 16.32-18.035-2.6-32.607-7.7-27.809-23.45 4.798-15.75 23.198-24.15 40.583-18.77Z" clip-rule="evenodd"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" d="M540.874 2126.68c8.015 2.05 13.335 5.37 16.666 9.18 5.06 5.8 5.593 12.92 3.416 19.86-2.611 8.12-7.734 13.16-13.434 16.22-7.019 3.77-15.059 4.26-20.69 3.58-5.769-.8-11.216-1.82-15.835-3.4-4.221-1.45-7.803-3.34-10.488-5.69-5.389-4.72-7.872-11.15-4.792-20.3 3.169-9.08 10.153-15.96 19.044-19.34 7.916-3 17.215-3.34 26.113-.11Zm-1.173 3.79c-7.908-2.04-15.854-1.03-22.429 2.15-6.604 3.2-11.705 8.76-13.582 15.94-1.349 4.94-.171 8.34 2.802 10.71 1.97 1.57 4.59 2.69 7.584 3.67 4.142 1.36 8.974 2.37 14.119 3.14 4.151.7 10.103.6 15.473-1.87 4.222-1.95 8.134-5.29 10.429-10.97 1.91-4.63 2.045-9.52-1.046-13.81-2.501-3.47-6.783-6.56-13.35-8.96Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M601.819 2207.36c19.252 5.96 23.078 17.68 19.113 28.62-6.19 17.07-23.467 19.39-33.21 17.98-19.97-2.89-36.108-8.54-30.813-25.92 5.295-17.38 25.657-26.64 44.91-20.68Z" clip-rule="evenodd"/><path fill="',colors[6].toColor()));
      
        return render;
      }

    function renderFn12(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M602.467 2205.27c11.357 2.92 17.849 8.12 21.073 13.92 3.107 5.6 3.135 11.94 1.183 18.16-2.889 8.97-8.567 14.54-14.886 17.91-7.76 4.14-16.645 4.67-22.871 3.92-6.379-.9-12.402-2.02-17.514-3.77-4.665-1.6-8.627-3.68-11.6-6.28-5.992-5.22-8.755-12.32-5.35-22.44 3.501-10.03 11.241-17.63 21.095-21.34 8.751-3.3 19.03-3.65 28.87-.08Zm-1.297 4.18c-8.751-2.25-17.538-1.15-24.815 2.35-7.316 3.51-12.968 9.65-15.04 17.58-1.491 5.46-.172 9.21 3.13 11.82 2.186 1.74 5.09 2.98 8.407 4.06 4.586 1.51 9.934 2.63 15.625 3.48 4.595.78 11.181.68 17.122-2.04 4.675-2.14 9.008-5.82 11.543-12.1 2.109-5.1 2.249-10.51-1.188-15.25-2.776-3.83-7.518-7.25-14.784-9.9Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M494.442 2048c16.651 5.79 21.682 11.08 16.982 24.69-4.7 13.61-16.796 18.73-33.447 12.94-16.65-5.79-23.055-17.29-22.219-23.47 1.932-14.27 22.034-19.96 38.684-14.16Z" clip-rule="evenodd"/><path fill="',colors[6].toColor(),'" fill-rule="evenodd" d="M495.094 2046.13c10.573 3.08 16.773 6.58 19.551 11.5 2.285 4.03 2.372 9.17.282 16.27-2.676 8.77-8.178 14.58-15.628 17.21-6.228 2.21-13.989 2-22.907-.92-8.881-3.21-15.146-7.84-19.077-12.6-4.837-5.86-6.338-11.93-5.658-15.98 1.345-7.6 6.592-13.27 14.116-16.2 8.416-3.27 19.531-3.25 29.321.72Zm-1.302 3.74c-7.236-2.12-14.997-1.9-21.449.15-6.671 2.11-11.896 6.36-12.482 12.7-.304 2.92 2.058 6.99 6.484 10.93 3.197 2.84 7.539 5.51 13.219 7.42 6.556 2.43 12.281 2.97 17.004 1.59 5.197-1.52 9.09-5.32 11.354-11.18 2.387-6 2.726-10.02-.141-13.33-2.635-3.05-7.259-5.54-13.989-8.28Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="M456.78 1961.69c17.981 7.36 21.469 10.64 15.185 25.29-6.284 14.65-14.427 18.51-32.408 11.15-17.981-7.37-26.017-12.18-23.131-22.22 4.394-15.28 22.373-21.59 40.354-14.22Z" clip-rule="evenodd"/><path fill="',colors[6].toColor()));
      
        return render;
      }

    function renderFn13(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="M457.632 1959.61c6.506 2.23 11.205 4.12 14.419 6.2 2.766 1.79 4.457 3.84 5.479 6.15 1.724 3.9 1.138 8.98-1.703 16.67-3.708 9.72-8.7 15.29-15.553 17.4-5.671 1.75-12.992.91-22.787-2.85-4.525-1.86-8.46-3.52-11.73-5.22-5.465-2.85-9.3-5.74-11.605-8.8-3.175-4.22-4.163-8.81-2.282-14.56 3.215-9.49 10.601-16.03 20.21-18.26 7.689-1.79 16.708-.95 25.552 3.27Zm-1.704 4.16c-7.858-2.72-15.519-2.68-21.853-.5-6.551 2.26-11.465 7.1-13.091 13.94-.778 3.11.426 5.18 2.991 7.18 3.719 2.9 9.632 5.5 17.652 8.68 6.837 2.99 11.893 4.27 15.996 3.29 4.548-1.1 7.554-4.92 10.48-11.04 3.093-6.29 4.487-9.76 1.873-12.86-2.394-2.85-6.98-5.31-14.048-8.69Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".28" fill-rule="evenodd" d="M1364.35 932.755c-99.96-75.837-250.06-85.026-218.76-115.191 17.','06-16.438 271.3-.581 340.6 12.221l-73.15 71.522 18.56 75.334-67.25-43.886Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".25" fill-rule="evenodd" d="M361.061 980.761c-13.073 23.789-161.028 304.229-159.358 378.479 1.675 74.46 284.438 173.74 261.467 107.42l78.169-176.77c-38.111 273.76 34.579 490.52 201.051 681.25 0 0-116.342-68.59-142.598-50.56-26.263 18.02-25.13 174.86-25.13 174.86s-115.425-44.09-134.033-9.54c-39.863 74.02 41.175 280.14 93.665 352.09l-79.184-66.87-146.025-322.97 40.058-125.49c61.65-19.58 118.329-15.22 167.839 23.71l-55.959-269.49c-50.809-61.87-159.554-168.55-159.554-168.55s-39.516.43-67.967-12.69c-66.455-30.66-158.772-94.59-164.335-118.98-6.021-57.59 30.561-106.65 64.755-156.19L321.65 877.336c-21.767 81.777-.944 93.085 39.411 103.425Z" clip-rule="evenodd"/><path fil','l="#fff" fill-rule="evenodd" d="M1356.8 1021.61s168.42 205.95 167.9 337.63c-.9 228.59-108.74 465.15-108.74 465.15 97.2-294.03 47.31-569.97-59.16-802.78Z" clip-rule="evenodd"/>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn7(colors),renderFn8(colors),renderFn9(colors),renderFn10(colors),renderFn11(colors),renderFn12(colors),renderFn13(colors)));
      
        return render;
      }
}