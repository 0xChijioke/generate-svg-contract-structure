//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_02_POD_boulderdash_1 {

using ToColor for bytes4;

function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[8].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.6" d="M1326.76 1758.86c2.83 1.12 6.17 1.48 10.24.74m-39.38-4.92c3.13 1.65 6.51 2.23 10.11 1.8"/><path fill="',colors[9].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5" d="m1156.87 1823.54 161.76 27.83c38.77 24 76.76 44.84 95.55 65.08l-5.72 13.67c-24.65-24.55-56.66-46.32-93.05-66.43l-158.52-25.95-.02-14.2Z" clip-rule="evenodd"/><path fill="',colors[10].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.57" d="m914.546 1557.85-49.64 8.02-74.175-9.53-39.09 10.94-30.407-1.64 10.096 62.21 9.087 129.26 7.923 44.51 41.338-9.65 49.172-9.68 92.227-5.04-17.672-161.23 1.141-58.17Z" clip-rule="evenodd"/><path stroke="',colors[11].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.313" d="m799.483 1739.52-25.61-65.37 87.445-34.57 27.375 96.97m-120.633 7.9-2.983-14.68 14.61 19.88 1.466-25.94 12.468 24.28"/><path stroke="'));
      
        return render;
      }

    function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[11].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.313" d="m805.072 1735.18 20.366 4.36 20.411-3.4s17.68 4.38 37.433 4.88c19.753.51 13.745-5.34 13.745-5.34l-1.092-23.18 12.371 23.48 10.762-3.54m-95.497-47.83 15.541 62.38m-19.388-56.08 30.863-8.47m-4.403-14.24 13.555 69.61m-97.374-58.46 42.389-105.81 73.899 69.03-122.872 20.33"/><path fill="',colors[10].toColor(),'" fill-opacity=".2" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.583" d="m897.64 1546.45-12.433 9.93 30.135 46.99 12.433-9.93-30.135-46.99ZM750.4 1557.1l-13.077-9.14-26.902 48.74 13.077 9.15 26.902-48.75Z"/><path fill="',colors[10].toColor(),'" fill-opacity=".2" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.571" d="m761.629 1768.35-15.328-1.01-2.499 57.47 15.328 1.01 2.499-57.47Z"/><path fill="',colors[10].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.743" d="m798.285 1269.43-52.05 5.95-57.515-5.73-34.915-12.12-25.537 13.99-36.478 8.56 12.438 63.74 9.307 88.66-5.937 34.51 6.139 46.33 43.487-8.02 51.641-7.69 96.239-.87-14.331-109.28 3.569-58.02 3.943-60.01Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[12].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.769" d="m689.992 1409.95 8.019 43.88m10.619 6.39s-14.842-23.27-25.195-12.29c-10.353 10.96 2.939 34.19 13.62 29.12 10.681-5.08 10.825-11.35 10.825-11.35m-31.799-111.16s-25.773 18.14-6.958 41.66c18.815 23.51 24.952 32.86 31.3 30.44 6.347-2.42 23.793-18.01 21.679-25.7-2.114-7.69-34.266-44.57-40.941-40.58-6.674 3.98-24.946 8.42-24.946 8.42m57.428 24.29 28.553 29.54m-.474-13.13s2.587-8.95 11.405 2.51c8.817 11.47 3.682 37.8-5.121 33.91-8.803-3.9-14.809-27.72-14.809-27.72l18.376-16.72"/><path stroke="',colors[12].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.769" d="M685.55 1305.49s-52.67 10.4-58.343 34.6c-5.673 24.2-15.419 37.6-.268 44.9 15.15 7.31 72.319-20.69 76.917-34.69 4.599-14-23.045-50.93-23.045-50.93"/><path stroke="',colors[12].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.769" d="M669.45 1315.94s-8.458-24.97 4.651-27.49c13.11-2.52 38.696 3.92 33.274 11.16a225.57 225.57 0 0 1-10.958 13.41m-61.835 25.95s-5.909-11.76-13.013-9.1 1.682 34.46 1.682 34.46"/><path stroke="',colors[12].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.769" d="m666.443 1342.32-9.191 5.24s6.268 13.72 10.347 7.1c4.079-6.61-1.156-12.34-1.156-12.34Zm13.229-25.73c-9.34 5.83-19.968 2.75-14.844 13.72 5.124 10.97 14.027 18.99 14.027 18.99s18.429-1.89 13.573-12.13c-4.855-10.24-3.416-26.41-12.756-20.58Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[12].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.769" d="m640.515 1338.31-9.664 16.17s3.32 19.88 10.584 17.14c7.264-2.73 4.52-30 4.52-30l3.808-1.91m18.776 46.01s-19.422 21.96-18.631 29.69c.791 7.73 1.726 6.87 1.726 6.87"/><path stroke="',colors[12].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.769" d="M658.466 1411.55c-10.663 1.52-18.771-11.77-16.891 3.06 1.745 13.76-1.78 13.38 5.895 19.02 10.836 7.98 11.282-6.88 11.282-6.88l6.797 1.31 6.255-12.35s-2.675-5.68-13.338-4.16Z" clip-rule="evenodd"/><path stroke="',colors[12].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.769" d="M707.302 1361.31s18.543-17.79 25.106-12.49c6.564 5.3 2.386-4.1 2.386-4.1"/><path stroke="',colors[12].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.769" d="M733.237 1334.99c-5.307 8.39-11.404 13.14-8.116 20.42 3.287 7.26 9.588 20.66 15.089 16.69 5.501-3.98 6.073-13.6 6.073-13.6s-10.64-8.93-7.241-2.16c3.399 6.77 8.771 13.35 8.771 13.35s13.957-14.44 11.081-21.65c-2.876-7.21-14.123-17.53-14.123-17.53l-6.888 8.19"/><path fill="'));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[10].toColor(),'" fill-opacity=".2" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.744" d="m799.485 1255.05-15.907-1.77-5.322 59.22 15.907 1.77 5.322-59.22Z"/><path fill="',colors[10].toColor(),'" fill-opacity=".2" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.748" d="m611.416 1244.24-15.185 5.56 16.74 56.53 15.185-5.55-16.74-56.54Zm2.43 226.29-15.185 5.55 16.739 56.53 15.185-5.55-16.739-56.53Zm206.086-15.13-15.209-5.47-16.497 56.62 15.209 5.47 16.497-56.62Z"/><path fill="#000" fill-rule="evenodd" stroke="gray" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.911" d="m1501.93 1151.91-103.49 112.04c31.64 92.09 48.98 129.96 66.45 231.49l145.59-21c-14.1-108.37-51.7-216.04-108.55-322.53Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" stroke="gray" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.556" d="m1597.89 1516.58-92.76 24.22c-26.88 93','.03-28.8 152.84-76.89 244.51l52.99 57.56c49.13-95.86 84.57-210.39 116.66-326.29Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.3" d="m1458.6 1744.26 6.49 6.37m-8.06-3.35 12.75 11.64m-13.83-8.89 3.29 2.84m2.3 1.45 4.3 4.26m-10.95-6.3 11.84 11.11m-13.71-7.62 6.49 6.37m-8.06-3.35 12.75 11.64m-13.83-8.89 3.29 2.84m2.3 1.45 4.3 4.26m-10.95-6.3 11.84 11.11m21.93-10.41 6.49 6.37m-8.06-3.35 12.75 11.64m-13.83-8.89 3.29 2.84m2.3 1.45 4.3 4.26m-10.95-6.3 11.84 11.11m-15.88-5.89 6.49 6.37m-8.06-3.35 12.75 11.64m-13.83-8.89 3.29 2.84m2.3 1.45 4.3 4.26m-10.95-6.3 11.84 11.11m25.93-225.97 9.08-.36m-8.22-2.93 17.27-.06m-16.22-2.71 4.34.11m2.68.47 6.05-.27m-12.35-2.68 16.24-.29m19.59 8.62 9.09-.36m-8.23-2.93 17.27-.07m-16.22-2.7 4.34.11m2.68.47 6.05-.27m-12.34-2.69 16.23-.28m-91.06 144.61-11.92 33.15m27.12-7.08-18.23 30.24 4.82 3.88m60.22-88.','73-47.61 120.66m15.66-215.39 1.51-10.46m13.04 47.93 10.72 3.67m-3.98-5.2 11.98-53.18 4.89-1.13"/><path stroke="'));
      
        return render;
      }

    function renderFn10(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.391" d="M1510.56 1624.48c-.79-1.67-1.59-3.33-2.38-5 4.33-8.03 8.64-16.15 12.92-24.38.87-1.5 1.74-3.01 2.62-4.52l1.38 1.11c-3.13 8.91-6.3 17.76-9.5 26.55-1.68 2.09-3.36 4.17-5.04 6.24Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.391" d="M1518.83 1614.11a667.31 667.31 0 0 1-4.83 3.18c3.29-5.83 6.56-11.72 9.82-17.66.87-1.5 1.74-3 2.61-4.51.46.37.93.74 1.39 1.11-1.68 4.9-3.37 9.78-5.07 14.64-1.3 1.08-2.61 2.17-3.92 3.24Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.376" d="M1508.33 1621.15c-1.11-.93-2.22-1.86-3.34-2.79 3.81-9.04 7.58-18.16 11.31-27.36.78-1.73 1.57-3.47 2.35-5.21l1.69.12c-2.63 10.15-5.3 20.28-8 30.38-1.34 1.63-2.67 3.25-4.01 4.86Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.383" d="M1537.66 1628.95c1.64-1.36 3.29-2.72 4.93-4.1l.78-26.18c-.04-1.62-.07-3.25-.11-4.87-.63.24-1.26.48-1.88.73-1.61 9.18-3.23 18.37-4.88 27.57.38 2.29.77 4.57 1.16 6.85Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderFn11(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.383" d="m1535.47 1617.15 2.83 4.18c.05-6.33.09-12.67.14-19.01-.04-1.62-.07-3.24-.1-4.86-.63.24-1.26.49-1.89.73-.97 4.98-1.95 9.97-2.93 14.95.65 1.34 1.3 2.68 1.95 4.01Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.36" d="M1541.54 1626.39c1.55-.6 3.1-1.19 4.65-1.79 1.31-9.58 2.6-19.15 3.87-28.71l.48-5.51c-.55-.08-1.1-.17-1.65-.26a3236.12 3236.12 0 0 1-8.49 30.68c.38 1.87.76 3.73 1.14 5.59Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.413" d="M1530.43 1604.11c2.13.36 4.03 1.85 5.78 3.65 2.51 2.58 4.74 6.03 6.65 10.21 1.63 3.56 3.03 7.71 3.97 12.64 1.05 5.46 1.55 12.23.46 19.9-.35 2.52-1.47 4.74-2.44 6.4-.21.35-.41.68-.62 1.01-.27.42-.54.83-.82 1.23-.34.5-.69.98-1.04 1.45-3.03 4.1-6.14 7.38-9.15 11.81-1.37 2.03-2.95 4.55-3.89 7.8-3.1 10.74-6.64 21.24-10.66 30.81-1.27 2.99-2.82 5.27-4.3 7.23-1.77 2.34-3.57 4.32-5.36 6.41-1.22 1.43-2.46 2.89-3.64 4.71-.9 1.38-1.72 3.07-2.47 4.94-.78 1.99-1.49 4.17-2.41 5.88-.64 1.2-1.35 2.06-2.04 2.64-3.93 3.31-7.9 5.14-11.33 4.38-2.99-.67-5.42-3.72-6.68-9.2-.07-.34-.13-.71-.15-1.12-.11-2 .59-4.4 1.1-6.56.45-1.87.79-3.76.84-5.53.05-1.99-.12-3.79-.29-5.52-.24-2.56-.55-5.04-.65-7.79-.08-2.26-.02-4.76.46-','7.39 1.94-10.77 4.78-21.51 8.02-31.71.28-.91.44-1.89.52-2.81.14-1.54.12-2.98.06-4.34-.23-5.08-.98-9.47-1.3-14.44-.1-1.7-.18-3.53.01-5.51.1-1.05.3-2.21.69-3.18 3.33-8.24 7.34-14.79 11.37-19.92 3.15-4.01 6.35-7.22 9.51-9.83 3.68-3.03 7.34-5.27 10.9-6.71 3.06-1.25 6.11-2.02 8.9-1.54Zm-1.49 5.73c-5.83-1.01-13.07 7.07-19.12 17.8a106.78 106.78 0 0 0-3.12 5.96c-1.28 2.64-2.51 5.42-3.69 8.32-1.51 3.75-2.91 7.7-4.17 11.78-3.29 10.69-5.63 22.79-5.33 32.81.05 1.63.17 3.19.37 4.64.24 1.83.6 3.49 1.06 4.94.59 1.86 1.35 3.38 2.24 4.53 1.19 1.53 2.59 2.4 4.11 2.72 3.36.69 7.25-1.3 11.11-5.09 7.47-7.35 14.93-21.51 19.67-38.21 3.29-11.59 5.2-24.36 4.5-34.52-.12-1.68-.31-3.27-.57-4.75-.3-1.73-.7-3.31-1.2-4.68-.6-1.62-1.32-2.96-2.16-3.96-1.08-1.3-2.34-2.05-3.7-2.29Z" clip-rule="evenodd"/><path stroke="',colors[13].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn5(colors),renderFn6(colors),renderFn7(colors),renderFn8(colors),renderFn9(colors),renderFn10(colors),renderFn11(colors)));
      
        return render;
      }
}