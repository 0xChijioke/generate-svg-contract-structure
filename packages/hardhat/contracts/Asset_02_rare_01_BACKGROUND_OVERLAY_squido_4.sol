//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_squido_4 {

using ToColor for bytes4;

function renderFn16(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('.956-4.903-13.31-.514-9.757 1.589-4.319 1.824 4.719 4.983 8.045 14.384 8.767l.43.727c.027.123 5.395-1.203 5.473-.92 3.222-.545-3.694 2.732-4.688 3.742Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m888.661 171.958-4.206-7.04s.604-1.277 1.257-.57c1.001 1.083 2.255 4.41 2.706 5.251.596 1.11.243 2.359.243 2.359Zm13.704 23.231c-2.146-4.111-3.167-4.324-8.985-10.849 0 0 5.72 4.72 7.713 7.695 1.731 2.584 1.272 3.154 1.272 3.154Zm7.618-5.709c-6.905-8.158-4.878-5.767-11.133-11.988 0 0 7.575 5.786 9.918 9.357 2.034 3.099 1.215 2.631 1.215 2.631Zm-10.49-27.747c-4.185-7.151-26.437-21.486-39.012-12.553 1.141-2.669 2.193-8.17 11.419-6.531 9.372 1.666 15.912 4.696 23.579 9.621 2.449 4.29 4.432 6.298 4.014 9.463Zm-1.757 8.763a54.678 54.678 0 0 0 3.796 2.413c3.02 1.762 6','.239 3.33 9.462 4.909 0 0-4.981-3.214-7.918-4.99a46.048 46.048 0 0 0-1.459-.855c-1.257-.694-3.881-1.477-3.881-1.477Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M898.814 172.185c-1.011-.713-2.261.182-1.866-.435s1.08-1.533 2.004-.698c4.673 4.222 4.087 2.173 3.692 2.79-.395.617-2.818-.944-3.83-1.657Zm-26.989-28.884c2.738.058 8.985 2.259 8.051 2.408-.726.115-5.394-1.459-8.133-1.517-2.739-.058-4.811.719-4.851-.014-.04-.733 2.194-.935 4.933-.877Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="M873.66 155.116c2.211.905 5.569-.747 9.269-3.162-3.308 1.256-6.436 1.979-8.981.979l-.288 2.183Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M878.673 179.777c-.755.729-3.356-1.659-2.641-4.326.468-1.747-1.399-2.215-.149','-2.808l-.765 2.005c-.78 4.569-.228 5.394 2.887 6.591l.979-7.069 3.129 8.197-3.121-4.288-.319 1.698Zm-14.383-19.608s2.786-4.282 2.679-3.462c-.106.821.31 2.124-.336 2.625-3.103 2.405-2.884 6.629-2.626 8.173 0 0-1.199-1.673-1.152-2.399.077-1.162 1.435-4.937 1.435-4.937Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.18" d="M885.699 164.929c1.055 2.64 5.314 5.927 3.164 7.92-.394.366-4.52-4.352-4.553-3.621-.098 2.11 4.835 8.609 4.061 9.762-2.023 3.012-5.566-5.885-6.387-6.376-.821-.491 1.77 8.232.825 9.1-1.786 1.643-3.341-8.429-4.14-8.391-.8.038-.154 7.337-.848 7.267-2.061-.209-2.059-7.355-2.059-7.355"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterli','mit="1.5" stroke-width="1.03" d="M882.701 160.384c-1.86.828-4.077-.096-4.947-2.062-.871-1.966 1.051-1.666 2.91-2.494.13-.057.255-.119.378-.183 1.634-.856 2.641-2.152 3.451-.323.87 1.967.068 4.235-1.792 5.062Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.028" d="M871.767 167.524c-1.436 1.415-3.083 1.679-4.479.445-1.888-1.671-.279-2.73 1.156-4.146s1.604-3.903 3.391-2.124 1.367 4.409-.068 5.825Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.36" d="M879.799 157.062c-.121.241.243.7.813 1.027.57.326 1.13.396 1.251.155.121-.24-.243-.7-.813-1.027-.57-.326-1.13-.396-1.251-.155Z"/><path fill=','"#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.244" d="M869.693 163.478c-.266.029-.401.581-.301 1.232.1.652.398 1.157.664 1.128.267-.029.402-.58.302-1.232-.101-.652-.398-1.157-.665-1.128Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.618" d="M687.6 656.943c7.575-1.683-25.719 28.743-24.638 22.61-1.869.121-7.223-1.79-6.172-2.549-.8-.888-12.537-1.455-18.191-5.976-5.138-4.107-6.237-7.712-1.462-5.068 8.348 4.621 20.329 2.711 22.829 2.554 1.67-1.52-2.92-6.798-9.606-11.624-5.725-4.134-7.032-7.238-2.2-5.909 9.35 2.572 15.83 8.629 16.556 8.072.562-.437-4.544-7.487-9.074-11.257-5.734-4.776-8.407-6.95-7.031-7.689 4.188-2.256 22.461 11.695 23.939 15.474 1.239-.132-1.899-5.12-6.329-10.292-3.877-4.53-9.128-9.276-8.276-10.039 2.809-2.519 21.394 15.262 21.881 15.005 1.823-.975-10.336-11.063-4.787-10.474 1.194.127 12.09 14.523 12.561 17.162Z" clip-rule="evenodd"/><path fill="',colors[1].toColor()));
      
        return render;
      }

    function renderFn17(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.618" d="M657.827 683.069c-.495 7.765.243 15.575 7.043 20.439 7.216 5.164 45.313 12.433 55.009 1.402 9.029-10.272-3.992-41.515-10.167-48.163-9.044-9.73-19.669-7.746-25.54-5.733-.175-1.87-3.891-5.71-7.93-14.3-3.843-8.179 1.055-9.029-.756-9.673-1.875-.665-6.469 2.232-6.453 7.353.019 5.591 4.414 13.907 3.828 15.065-.998-.656-7.644-9.957-12.967-14.864-4.837-4.46-6.234-1.03-4.073 3.921 1.34 3.064 8.933 12.893 9.162 15.394-1.242 1.889-7.147-1.848-12.93-7.732-4.954-5.036-8.213-5.855-6.162-1.271 3.972 8.869 10.936 14.359 10.499 15.164-.345.624-8.076-3.352-12.487-7.262-5.588-4.947-4.61-2.184-5.131-.71-1.575 4.5 11.449 15.384 15.4 16.267.061 1.248-5.337-1.094-11.114-4.689-5.059-3','.145-10.543-7.619-11.165-6.657-2.05 3.17 18.327 18.852 18.149 19.374-.681 1.957-12.489-8.541-11.057-3.133.309 1.163 4.855 6.726 11.405 9.265 3.869 1.498 4.764.482 7.437.543Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M706.77 698.61c-1.565.702-3.434.109-4.174-1.326-.74-1.434-.071-3.167 1.495-3.869 1.566-.703 3.435-.109 4.174 1.325.74 1.435.071 3.167-1.495 3.87Z"/><path fill="',colors[3].toColor(),'" d="M697.848 665.268c-1.565.702-3.434.109-4.174-1.326-.74-1.434-.071-3.167 1.495-3.869 1.566-.703 3.435-.109 4.175 1.325.739 1.435.07 3.167-1.496 3.87Zm-23.283 32.269c-1.565.702-3.434.109-4.174-1.326-.74-1.435-.071-3.167 1.495-3.87 1.566-.702 3.435-.109 4.174 1.326.74 1.435.071 3.167-1.495 3.87Z"/><path fill="',colors[2].toColor(),'" d="M718.069 703.312c-1.565.702-3.434.109-4.174-1.326-.74-1.434-.071-3.167 1.495-3.869 1.565-.703 3.434-.109 4.174 1.325.74 1.435.071 3.167-1.495 3.87Zm-2.154-14.707c-1.566.702-3.435.109-4.175-1.326-.74-1.434-.07-3.167 1.495-3.869 1.566-.703 3.435-.109 4.175 1.325.74 1.435.071 3.167-1.495 3.87Zm-14.949 16.948c-.239.95-1.427 1.406-2.653 1.019-1.226-.388-2.026-1.473-1.787-2.424.239-.951 1.427-1.407 2.653-1.019 1.226.388 2.026 1.473 1.787 2.424Zm8.432-38.567c-.717.884-1.996 1.025-2.858.317-.861-.709-.979-1.999-.262-2.882s1.997-1.025 2.858-.316c.862.708.979 1.998.262 2.881Zm5.699 8.618c-.717.883-1.996 1.024-2.858.316-.861-.708-.978-1.998-.262-2.882.717-.883 1.997-1.024 2.858-.316.862.708.979 1.999.262 2.882Zm-38.131 27.63c-.716.884-1.996 1.025-2.858.317-.861-.708-.978-1.999-.261-2.882.716-.88'));
      
        return render;
      }

    function renderFn18(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('3 1.996-1.024 2.857-.316.862.708.979 1.998.262 2.881Zm14.004-23.508c-.531.653-1.513.729-2.194.17-.681-.56-.803-1.544-.272-2.198.531-.653 1.513-.73 2.194-.17.681.56.802 1.544.272 2.198Zm-6.444 1.381c-.53.654-1.513.73-2.193.17-.681-.559-.803-1.543-.272-2.197.53-.654 1.512-.73 2.193-.17.681.56.803 1.544.272 2.197Zm5.815 4.743c-.531.653-1.513.729-2.194.17-.681-.56-.803-1.544-.272-2.198.531-.653 1.513-.73 2.194-.17.681.56.802 1.544.272 2.198Zm-9.014 2.367c-.531.654-1.513.73-2.194.17-.681-.56-.802-1.544-.272-2.197.531-.654 1.513-.73 2.194-.171.681.56.803 1.544.272 2.198Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M655.964 679.104c-6.469-2.133-17.447-17.792-22.393-18.317-1.814-.193 6.037 2.477.806 4.76-1.555.679 2.137 3.053 4.436 6.322 5.471 7.778 15.631 14.37 18.545 10.393l.675',' 2.098c-.248 4.444-.464 8.467 1.712 12.649 1.435 2.758 4.57 5.75 7.076 8.391 19.632 8.227 14.594 1.413 6.58-2.097-6.955-3.047-11.734-8.001-12.197-22.144l-1.06-.693c-.184-.047 2.157-8.008 1.74-8.144 1.029-4.795-4.34 5.358-5.92 6.782Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="m679.37 665.494 10.279 6.77s1.954-.821.937-1.846c-1.557-1.572-6.463-3.672-7.694-4.404-1.626-.966-3.522-.52-3.522-.52Zm-33.926-22.074c6.022 3.488 6.275 5.032 15.674 14.186 0 0-6.7-8.887-11.029-12.071-3.759-2.765-4.645-2.115-4.645-2.115Zm9.061-11.046c11.776 10.889 8.325 7.693 17.24 17.481 0 0-8.175-11.738-13.375-15.486-4.513-3.254-3.865-1.995-3.865-1.995Zm40.91 17.557c10.445 6.746 30.471 41.051 16.25 59.316 4.076-1.535 12.394-2.749 10.544-16.689-1.88-14.161-5.993-24.166-12.872-35.985','-6.269-3.955-9.15-7.061-13.922-6.642Zm-13.256 2.055a81.828 81.828 0 0 1-3.368-5.85c-2.442-4.644-4.582-9.573-6.737-14.509 0 0 4.491 7.68 6.961 12.2.492.902.905 1.678 1.185 2.243.958 1.93 1.959 5.916 1.959 5.916Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M679.7 650.259c1.002 1.563-.422 3.378.529 2.826.951-.551 2.37-1.517 1.179-2.958-6.022-7.285-2.988-6.271-3.939-5.719-.951.551 1.229 4.287 2.231 5.851Zm41.525 42.366c.093-4.11-2.796-13.62-3.08-12.23-.221 1.08 1.833 8.184 1.739 12.294-.093 4.109-1.396 7.165-.299 7.274 1.097.108 1.546-3.229 1.64-7.338Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".3" fill-rule="evenodd" d="M703.633 689.095c-1.211-3.374 1.487-8.299 5.353-13.687-2.102 4.877-3.392 9.519-2.061 13.4l-3.292.287Z" clip-rule="evenodd"/><path fill="#000" fil','l-opacity=".3" fill-rule="evenodd" d="M666.989 679.954c-1.142 1.085 2.266 5.142 6.312 4.246 2.65-.587 3.229 2.243 4.2.408l-3.056 1.014c-6.901.869-8.102-.014-9.692-4.763l10.663-1.001-12.084-5.232 6.224 4.962-2.567.366Zm28.451 22.856s6.603-3.895 5.366-3.789c-1.236.105-3.164-.604-3.956.331-3.81 4.494-10.13 3.887-12.428 3.398 0 0 2.429 1.909 3.521 1.885 1.747-.038 7.497-1.825 7.497-1.825Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.77" d="M689.715 670.399c-3.889-1.755-8.536-8.357-11.666-5.266-.574.567 6.227 7.064 5.129 7.066-3.17.007-12.588-7.817-14.369-6.732-4.649 2.835 8.457 8.733 9.139 9.996.683 1.263-12.225-3.196-13.589-1.837-2.581 2.57 12.417 5.565 12.308 6.761-.11 1.196-11.01-.254-10.951.792.177 3.104 10','.89 3.572 10.89 3.572"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.546" d="M696.33 675.194c-1.363 2.734-.124 6.118 2.767 7.553 2.89 1.435 2.566-1.466 3.93-4.199.095-.19.195-.375.299-.554 1.391-2.393 3.401-3.818.712-5.153-2.891-1.435-6.344-.38-7.708 2.353Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.543" d="M684.905 691.117c-2.217 2.059-2.721 4.512-.962 6.685 2.381 2.942 4.074.6 6.291-1.459 2.217-2.059 5.958-2.147 3.408-4.944-2.549-2.797-6.52-2.34-8.737-.282Z" clip-rule="evenodd"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5"',' stroke-width="3.542" d="M701.119 679.763c-.369.165-1.034-.411-1.486-1.287-.452-.877-.519-1.721-.15-1.886.368-.166 1.034.41 1.486 1.286.451.877.519 1.721.15 1.887Z"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.368" d="M690.834 694.492c-.06.398-.896.564-1.867.371-.971-.193-1.708-.673-1.647-1.07.06-.398.896-.564 1.867-.371.971.193 1.708.673 1.647 1.07Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.69" d="M1471.3 107.014c-1.99 7.859 30.82-25.966 24.38-25.028.19-1.948-1.64-7.6-2.47-6.525-.9-.864-1.13-13.14-5.67-19.185-4.13-5.494-7.86-6.754-5.25-1.685 4.57 8.863 2.2 21.316 1.96 23.922-1.64 1.697-7.01-3.261-11.84-10.394-4.14-6.108-7.34-7.57-6.11-2.482 2.4 9.846 8.52 16.802 7.92 17.543-.48.573-7.68-4.98-11.47-9.828-4.81-6.137-7-8.996-7.82-7.582-2.48 4.304 11.52 23.822 15.42 25.483-.18 1.29-5.29-2.142-10.55-6.93-4.61-4.19-9.41-9.822-10.23-8.956-2.72 2.855 15.27 22.819 14.99 23.32-1.07 1.873-11.23-11.14-10.79-5.326.1 1.25 14.79 13.078 17.53 13.653Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn19(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.69" d="M1499.52 76.732c8.12-.275 16.25.74 21.12 7.993 5.17 7.697 11.58 47.711-.25 57.495-11 9.11-43.23-5.462-49.98-12.119-9.88-9.748-7.48-20.783-5.19-26.851-1.95-.242-5.84-4.242-14.69-8.728-8.42-4.268-9.1-2.1-9.71-4.012-.64-1.979 2.16-3.766 7.51-3.59 5.84.195 14.39 5.044 15.62 4.467-.66-1.062-10.17-8.292-15.12-14.005-4.51-5.19-4.13-9.633.98-7.222 3.16 1.495 16.42 12.821 19.03 13.139 2.01-1.239-1.71-7.523-7.67-13.746-5.11-5.33-5.86-8.76-1.14-6.474 9.14 4.423 14.66 11.868 15.51 11.436.66-.34-3.25-8.538-7.19-13.267-5-5.99-7.33-8.728-5.78-9.222 4.75-1.51 20.9 16.278 21.7 20.431 1.31.103-.97-5.607-4.55-11.753-3.12-5.382-7.63-11.249-6.6-11.867 3.37-2.043 19.12 19.727 19.67 1','9.557 2.06-.65-8.53-13.31-2.93-11.645 1.2.359 6.87 5.28 9.32 12.2 1.44 4.087.36 4.99.34 7.783Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" d="M1514.22 128.332c.79-1.613.22-3.584-1.25-4.401-1.48-.818-3.31-.172-4.09 1.441-.78 1.613-.22 3.584 1.26 4.401 1.47.817 3.3.172 4.08-1.441Z"/><path fill="',colors[3].toColor(),'" d="M1479.68 117.977c.78-1.613.22-3.583-1.26-4.401-1.47-.817-3.3-.172-4.08 1.441-.79 1.614-.22 3.584 1.25 4.402 1.48.817 3.31.172 4.09-1.442Zm34.42-23.312c.79-1.613.23-3.584-1.25-4.401-1.47-.818-3.31-.172-4.09 1.44-.78 1.614-.22 3.585 1.26 4.402 1.47.817 3.3.172 4.08-1.441Z"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn16(colors),renderFn17(colors),renderFn18(colors),renderFn19(colors)));
      
        return render;
      }
}