//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_01_BACKGROUND_OVERLAY_boulderdash_1 {

using ToColor for bytes4;

function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(' 10.474-11.311-37.589-28.016 40.124 5.707 48.8 45.319 26.76-15.449 42.1 47.457 44.52c48.48 15.416 127.96 25.612 170.65 10.251l123.54-95.369 6.31-73.463Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.945" d="M1110.32 1098.77c-3.5-3.58-4.05-8.56-2.49-14.53l6.45-8.22c2.08-2.07 4.32-2.73 6.66-2.47 2.62 3.43 5.93 6.15 9.58 8.54.2 2.9-.59 5.83-1.68 8.78l-7.73 7.22c-5.1 3.24-6.1 2.44-10.79.68Z"/><path fill="#000" fill-opacity=".3" d="m1130.02 1086.09-4.68 8.68.07-2.91-4.31 3.8-3.68-.97 1.5-3.11-2.94-1.9-2.55 1.97-3 .08 2.59-3.93-3.16 1.17-.31-2.31-2.03 2.84-.12 3.09-1.48.62 8.5 9.06c2.7.53 5.37-.51 8.02-1.9l6.51-9.49 1.07-4.79Z"/><path fill="#fff" fill-opacity=".3" d="m1105.62 1087.52 6.53-4.48-2.26-.55 2.95-3.37 1.44.63 3.43 2.26-.63-2.82 1.13-.6 1.32.8 1.19-.94 1.91-.78.96-1.53-8.52.25-9.45 11.13Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.046" d="M981.868 1083.26c-1.882-1.92-2.175-4.6-1.336-7.81l3.465-4.42c1.119-1.11 2.323-1.47 3.584-1.33 1.407 1.85 3.189 3.31 5.15 4.6.11 1.55-.319 3.13-.905 4.72l-4.156 3.88c-2.742 1.74-3.28 1.31-5.802.36Z"/><path fill="#000" fill-opacity=".3" d="m992.465 1076.45-2.521 4.66.043-1.57-2.318 2.05-1.981-.52.805-1.67-1.578-1.02-1.371 1.05-1.614.05 1.394-2.12-1.702.63-.165-1.24-1.09 1.53-.069 1.66-.794.34 4.572 4.86c1.453.29 2.885-.27 4.311-1.02l3.503-5.1.575-2.57Z"/><path fill="#fff" fill-opacity=".3" d="m979.344 1077.21 3.512-2.41-1.218-.29 1.586-1.81.776.34 1.845 1.21-.337-1.52.602-.32.711.43.641-.5 1.03-.42.512-.83-4.581.14-5.079 5.98Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.472" d="M1729.97 2248.2c-12.42-31.75 1.5-47.9 26.89-80.99l57.48-50.41c18.4-7.33 34.11-5.47 48.05 2.45 27.99 23.21 49.72 47.05 37.3 79.02-6.32 18.6-24.06 24.69-38.59 40.18l-62.06 34.43c-40.3 6.55-44.41-1.16-69.07-24.68Z"/><path fill="#000" fill-opacity=".3" d="m1764.55 2161.97-19.86 37.74 22.32-7.71-13.69 19.2 26.09 9.66 34.37-16.09-18.61 25.8 22.75 5.38 13.39-13.51 13.32-2.23 2.1-30.43 12.25 28.19 7.68 18.47-19.09 4.98-13.9 9.19-50.31 23.46-38.45-11.65c-17.94-7.81-13.86-17.85-18.73-33.23l6.58-26.59 31.79-40.63Z"/><path fill="#fff" fill-opacity=".3" d="m1802.28 2131.01 21.52-17.27 27.49 5.65 3.24 15.95-3.67 11.74 7.37 21.21 18.93-14.57 4.62 5.02-4.83 11.54 6.96 4.22 6.2 9.51 8.74-2.07-4.28','-21.37-20.36-20.96-71.93-8.6Z"/><path fill="'));
      
        return render;
      }

    function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6" d="M1374.21 2675.05c-11.47-34.98-.12-48.5 20.5-76.86l47.36-39.25c15.41-3.59 28.81 1.62 40.87 12.63 24.46 29.57 43.6 58.44 33.97 88.4-4.82 17.63-19.71 20.09-31.6 32.81l-51.72 21.99c-34.04-1.82-37.76-10.55-59.38-39.72Z"/><path fill="#000" fill-opacity=".3" d="m1404.58 2572.99-19.19 48.03 18.65 4.57-11.07 16.68 22.44 15.35 28.72-9.15-15.05 22.37 19.47 10.28 10.99-10.94 11.25.53.89-30.56 11.23 31.31 7.06 20.45-16.48 8.94 3.37 8.9-56.55 2.92-33-19.98c-15.46-11.74-6.62-25.21-11.2-41.9l6.93-59.69 21.54-18.11Z"/><path fill="#fff" fill-opacity=".3" d="m1425.01 2553.3 25 4.52 23.51 11.55 3.22 16.94-2.78 11.19 6.87 23.17 15.66-10.85 4.07 6.09-3.77 10.74 6.04 5.77 5.54 11 9.25 2.78-24.05-51.39-68.56','-41.51Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.001" d="M2000.42 2311.86c16.3 3.23 19.11 10.68 25.71 25.07 4.52 7.47 7.32 15.92 4.96 27.31-2 6.86-7.01 10.98-14.01 13.29-17.04 3.08-32.64 4.23-42.29-6.19-9.55-4.25-9.16-9.85-5.92-19.69l2.79-25.22c10.29-8.21 14.94-6.82 28.76-14.57Z"/><path fill="#000" fill-opacity=".3" d="m1981.14 2316-7.69 22.04 3.9 10.56 1.07 16.35 9.3-11.01 12.77-4.7 7.38 9.48 5.08.01.09 7.14 5.4-7.04 3.59 9.07-7.25 4.37 1.7 3.94-25.44 2.46-15.28-8.35c-7.21-4.99-3.5-11.23-5.9-18.67l1.93-27.05 9.35-8.6Z"/><path fill="#fff" fill-opacity=".3" d="m2000.61 2313.29.67 17.6 16.19 6.93-5.65 10.83 14.25-3.05 1.16 3.1-2.78 4.32 2.04 3.16 1.28 5.41 3.77 2.19-5.17-25.08-12.3-17.5-13.46-7.91Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.437" d="M1557.23 363.284c-37.21-33.274-65.48-73.648-62.4-127.72.66-11.572 16.03-28.247 18.23-40.616l-.06-40.221 68.27-58.013c22.61-24.883 48.53-33.495 76.65-31.35 34.53 38.929 76.62 69.406 122.33 95.841 5.35 33.614-1.15 68.135-11.1 102.92l-84.5 87.057c-25.2 17.477-41.84 7.334-57.39 9.276-19.79 2.472-37.85 13.246-70.03 2.826Z"/><path fill="#000" fill-opacity=".3" d="m1778.42 207.962-17.7 51.76-28 34.508-3.21-17.349-47.34 45.925-28.84-2.364-43.1 2.753c-35.9 7.591 0-50.262 5.11-67.969l-28.29 23.859c-24.64 9.076-38.92 11.376-35.55 2.125l26.8-46.834-36.39 14.839-5.99-26.795-21.19 33.944 1.6 35.983-21.18-40.591c8.89 45.647 29.99 84.473 66.92 114.458 15.31 2.416 41.91-1.471 62.41-3.689 23.18-2.5','07 40.29-4.025 56.26-13.182l89.82-85.227 7.86-56.154Z"/><path fill="#fff" fill-opacity=".3" d="m1653.01 68.252-11.69 17.257 13.17 35.483-14.01 24.968 36.17-28.753 7.71 14.486.69 19.056-5.95 49.334 25.88-22.282 11.84 8.742-1.58 18.617 15.67 7.656 17.66 16.32 12.67-45.617 16.2 19.202-1.06-40.489-60.96-36.847-40.39-30.387-22.02-26.746Z"/><path fill="'));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6" d="M2122.67 414.505c25.79 26.267 21.61 43.415 15.71 77.98l-25.04 56.185c-12.23 10.046-26.55 11.322-42.25 6.8-35.02-15.654-64.99-33.042-69.64-64.167-3.5-17.937 8.76-26.748 13.78-43.427l36.6-42.645c31.32-13.463 38.52-7.285 70.84 9.274Z"/><path fill="#000" fill-opacity=".3" d="m2071.04 403.125-36.65 36.505c-6.93 10.656-4.33 15.935 15.32 11.585l-16.77 10.932c-18.32 14.35-11.39 21.406 14.52 22.98l-3.15 9.174-.25 14 25.12.108 13.83 5.724 10.12 4.946 9.19-13.577 1.64 19.069c-26.49 4.122-37.28 10.101-1.61 21.569l-18.68 1.681-.43 9.509-53.08-19.71-22.39-31.415c-9.54-16.911-6.9-28.158.42-45.501l35.89-49.479 26.96-8.1Z"/><path fill="#fff" fill-opacity=".3" d="m2083.21 400.528 5.89 9.354 18.65 18.40','1-2.31 17.089-6.18 9.729 10.93 5.916 6.71-24.292 17.41 20.548-29.26 21.01 11.68-4.362 1.94 7.066-6.97 8.995 18.29 1.9-12.62 17.675c11.75-8.006 12.1-3.682 7.89 5.564 12.74-13.733 16.47-34.549 15.4-59.137l-15.73-37.248-41.72-18.208Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.513" d="M2033.66-15.136c42.38 8.773 49.52 25.591 66.37 58.156l12.29 61.09c-5.37 15.012-18.53 23.655-36.83 28.087-44.47 5.146-85.13 6.141-110.05-17.923-15.15-13.441-8.94-27.416-14.95-44.276l7.87-55.655c21.8-27.998 32.88-26.534 75.3-29.479Z"/><path fill="#000" fill-opacity=".3" d="m1974.04 2.678-11.57 36.287 4.92 19.087 7.22 4.525c-4.48 10.078-4.16 18.449 26.27 16.108l7.17-9.524 9.62 23.714c-2.56 7.084 5.43 10.38 22.18 10.534l-4.65 18.898 25.47-31.907-1.84 22.438 15.54-11.022c-4 9.288-.96 5.563 10.4 11.486l2.96 11.52-16.89 5.782-58.38 2.486-33.01-9.431c-18.34-12.422-18.78-16.156-26.9-34.785l7.05-73.82 14.44-12.376Z"/><path fill="#fff" fill-opacity=".3" d="m1983.66-7.919 26.91 1.73c.94 27.27','1 10.58 29.029 27.4 9.76l13.38 5.916-4.89 25.33c9.29-.088 14.38 7.608 13.68 24.89l12.93-14.143 5.92 6.241-.78 12.448 7.83 5.633 7.2-7.68 11.9 21.067-8.77-40.113-19.91-33.842c-19.47-37.902-60.92-26.03-92.8-17.237Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.001" d="M1886.94 564.703c7.1 15.022 2.78 21.712-4.86 35.572-3.32 8.079-8.45 15.356-19.01 20.237-6.7 2.47-13 .89-19.02-3.366-12.61-11.868-22.8-23.725-20.17-37.684-2.26-10.207 2.48-13.215 12.31-16.469l21.93-12.75c12.73 3.387 14.38 7.951 28.82 14.46Z"/><path fill="#000" fill-opacity=".3" d="m1872.15 551.658-22.29 6.927-6.17 9.421-12.51 10.582 14.38.927 11.37 7.468-3.23 11.573 3.01 4.095-5.69 4.314 8.88.15-5.16 8.288-7.82-3.238-2.17 3.713-17.1-18.994-2.37-17.248c-.28-8.762 6.95-9.488 11.5-15.842l22.9-14.539 12.47 2.403Z"/><path fill="#fff" fill-opacity=".3" d="m1885.91 565.71-13.76 11.002 4.06 17.141-12.07 1.892 10.94 9.643-1.81 2.769-5.13.335-1.33 3.526-3.59 4.247.48 4.332 17.09-19.073 6.76-'));
      
        return render;
      }

    function renderFn8(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('20.292-1.64-15.522Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.141" d="M1432.43 363.305c4.79 11.288-.02 17.205-8.74 29.307-4.04 6.919-9.66 13.406-20.02 18.604-6.5 2.792-12.14 2.264-17.22-.457-10.27-8.086-18.31-16.449-14.21-28.035-.88-7.975 3.87-10.967 13.37-14.765l21.83-12.905c11.39 1.222 12.37 4.713 24.99 8.251Z"/><path fill="#000" fill-opacity=".3" d="m1420.27 354.529-21.48 8.245-6.83 8.343-12.85 10.033 13.21-.961 9.65 4.678-4.36 9.731 2.3 2.949-5.79 4.161 8.21-.934-5.77 7.306-6.86-1.684-2.45 3.255-13.58-13.306-.15-13.647c.78-7.043 7.57-8.49 12.54-14.162l22.94-14.464 11.27.457Z"/><path fill="#fff" fill-opacity=".3" d="m1431.35 364.241-14.06 10.521 1.73 13.361-11.41 2.963 8.98 6.488-2 2.451-4.79.88-1.65 3.006-3.83 3.856-.07 3.442 18.1-17.436 8.68-17','.192.32-12.34Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.667" d="M1327.84 593.102c8.67 8.602 7.04 14.832 4.65 27.316-.57 6.912-2.65 13.826-9.27 20.743-4.34 3.936-9.32 4.809-14.72 3.657-11.98-4.553-22.2-9.871-23.49-20.821-4.02-6.667-1.24-10.362 5.22-15.87l13.13-16.259c10.11-1.625 12.38 1.151 24.48 1.234Z"/><path fill="#000" fill-opacity=".3" d="m1313.98 588.397-14.75 12.16-2.35 8.798-6.73 11.671 10.77-3.938 10.06 1.762.31 9.414 3.15 2.001-3.18 4.948 6.54-2.736-1.86 7.654-6.49.162-.72 3.381-16.93-8.272-5.73-11.728c-2.23-6.254 2.91-9.098 4.78-15.157l13.42-17.863 9.71-2.257Z"/><path fill="#fff" fill-opacity=".3" d="m1327.31 594.163-7.55 12.373 6.94 11.112-8.41 5.237 10.24 3.478-.68 2.584-3.68 1.885-.16 2.98-1.65 4.224 1.35 2.983 8.12-19.286.27-16.8','59-4.79-10.711Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn9(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.57" d="M352.179 2089.3c12.75 11.74 11.968 18.62 11.488 32.58.701 7.88-.521 15.46-7.479 22.11-4.693 3.67-10.821 3.66-17.895 1.22-16.116-7.73-30.142-15.98-34.029-28.92-6.45-8.54-3.689-12.25 3.364-17.3l13.301-16.13c12.474.19 15.91 3.87 31.25 6.44Z"/><path fill="#000" fill-opacity=".3" d="m333.66 2081.02-16.186 11.05-1.17 9.7-6.128 12.13 12.822-2.35 13.11 4.1 2.316 10.96 4.403 2.97-3.01 5.07 7.726-1.82-.798 8.47-8.177-1.14-.229 3.77-23.135-13.05-9.657-14.75c-4.104-7.69 1.818-9.93 2.943-16.56l13.346-17.93 11.824-.62Z"/><path fill="#fff" fill-opacity=".3" d="m351.728 2090.43-7.018 12.77 11.062 14.29-9.583 4.33 13.692 6.13-.34 2.85-4.276 1.43.406 3.41-1.223 4.56 2.326 3.73 6.336-20.66-3.116-19.4','6-8.266-13.38Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.126" d="M698.681 2465.48c13.259 6.35 14.118 12.95 16.788 25.97 2.322 7.01 2.967 14.41-1.396 22.95-3.123 5.01-8.256 7.14-14.717 7.36-15.195-1.5-28.755-4.2-34.858-14.75-7.28-5.61-5.785-9.99-.99-17.1l7.588-19.47c10.487-4.17 14.174-1.99 27.585-4.96Z"/><path fill="#000" fill-opacity=".3" d="m681.351 2464.31-11.121 15.81 1.156 9.33-2.462 13.3 10.218-6.63 11.881-.8 4.352 9.28 4.338 1.19-1.403 5.72 6.068-4.37 1.197 8.08-7.099 1.8.637 3.54-22.243-3.94-11.331-10.2c-5.131-5.66-.665-9.78-1.182-16.27l7.23-21.15 9.764-4.69Z"/><path fill="#fff" fill-opacity=".3" d="m698.55 2466.67-3.064 14.2 12.405 9.29-7.069 7.33 12.813.86.343 2.75-3.266 2.8 1.091 3-.022 4.62-.007 2.29 3.535-20.89-6.893-16.82-9.866-9.4','3Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.686" d="M-54.104 1304.02c-7.261-8.95-13.406-18.07-18.495-27.37-3.811-6.96 8.17-14.26 5.518-21.41-5.663-15.27-22.486-22.44-26.63-38.46-5.033-19.45 3.579-47.92 9.12-68.49l66.732-63.89c21.705-14.65 45.495-14.53 70.662-4.63 28.924 42.99 65.114 80.97 104.779 116.56 2.962 30.1-4.775 57.57-15.636 84.27l-80.773 49.71c-23.545 7.6-37.474.56-51.525-2.21-17.993-3.54-35.296-5.94-63.752-24.08Z"/><path fill="#000" fill-opacity=".3" d="m153.366 1235.53-23.803 49.46-23.967-4.93s-30.969 24.73-45.098 25.43c-14.128.7-39.673-21.23-39.673-21.23s17.968-17.76 15.179-26.99c-2.79-9.23-31.915-28.39-31.915-28.39l-26.748 12.15s-31.194-1.65-32.097-8.4c-.904-6.75 26.678-32.1 26.678-32.1l-33.545 2.16-3.914-24.49-20.922 ','22.76-.54 31.04 26.12 20.57-13.22 25.05 25.96 31.88c29.057 13.73 77.957 26.81 105.975 20.79l85.385-49.29 10.145-45.47Z"/><path fill="#fff" fill-opacity=".3" d="m-107.347 1174.94 68.673-25.56-24.393-12.59 30.658-25.26 15.623 10.94 37.315 33.51-7.47-30.63 11.829-2.68 14.35 12.2 12.505-5.89 20.285-2.03 9.788-12.63-91.097-23.74-98.066 84.36Z"/><path fill="'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn5(colors),renderFn6(colors),renderFn7(colors),renderFn8(colors),renderFn9(colors)));
      
        return render;
      }
}