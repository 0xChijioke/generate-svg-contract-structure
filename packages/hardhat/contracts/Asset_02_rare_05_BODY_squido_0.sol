//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_05_BODY_squido_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.112" d="m399.409 1301.31-46.304-223.81-165.695 140.12 46.303 223.81 165.696-140.12Z"/><path fill="',colors[0].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.112" d="m445.067 1218.55-46.303-223.818-165.696 140.118 46.303 223.82 165.696-140.12Z"/><path fill="',colors[0].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.112" d="M491.534 1120.73 445.23 896.916 279.535 1037.04l46.303 223.81 165.696-140.12Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.112" d="M540.053 1032.76 493.75 808.943l-165.696 140.12 46.304 223.817 165.695-140.12Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.992" d="m698.393 907.87 5.734-228.481-192.103 125.338-65.016 10.524-40.321 241.849 291.706-149.23Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.112" d="m1748.29 1278.63 46.3-223.82 165.7 140.12-46.31 223.82-165.69-140.12Z"/><path fill="',colors[0].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.112" d="m1702.63 1195.86 46.3-223.813 165.7 140.123-46.31 223.81-165.69-140.12Z"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.112" d="m1656.16 1098.05 46.3-223.82 165.7 140.12-46.3 223.82-165.7-140.12Z"/><path fill="',colors[0].toColor(),'" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.112" d="m1607.64 1010.07 46.31-223.812 165.69 140.119-46.3 223.813-165.7-140.12Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="13.686" d="m1466.12 884.764-5.74-228.481 192.11 125.338 65.01 10.524 40.32 241.845-291.7-149.226Z" clip-rule="evenodd"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="13.999" d="M1120.43 351.095c218.75-4.102 806.02 844.235 847.49 974.655 37.17 116.88-281.41 253.78-281.41 391.55 0 138.38-14.21 271.56-45.54 390.67-26.11 99.28 169.27 22.03 117.69 96.65-47.77 69.1-340.88 292.1-406.7 333.52-84.94 53.45-180.04 82.25-272.75 82.25-96.18 0-187.16-33.31-268.017-92.61-55.777-40.9-334.769-247.97-379.282-311.18-51.034-72.47 134.439-4.21 102.787-99.21-40.191-120.62-62.788-256.46-62.788-400.09 0-92.94-298.135-279.23-280.565-363.63 30.599-147.01 688.717-998.068 929.085-1002.575Zm-37.94 534.153c-284.606 0-515.67 263.162-515.67 587.302 0 324.15 231.064 587.31 515.67 587.31 284.61 0 515.68-263.16 515.68-587.31 0-324.14-231.07-587.302-515.68-587.302Z" cl','ip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1970.73 1340.35s-178.9-282.47-254.51-379.932c-153.2-197.49-490.99-555.694-525.18-572.905-40.73-20.503-67.14-22.456-109.26-11.008l186.43 293.101-122.98 82.405 2.41 61.065c110.72 5.802 213.28 74.303 313.3 162.419l-192.85-220.091-16.99-58.506 66.57-53.801-144.94-222.441c291.52 276.724 557.07 583.824 798 919.694Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1086.87 2363.54.55 76.3m-364.471 23.59 70.695-74.47c73.586 51.57 148.287 101.53 253.716 107.37l23.31-51.4 36.48-.41m347.71 10.89-70.69-74.47c-76.77 48.4-154.25 95.91-255.01 114.1l-22.01-50.52m3.3-2100.461-16.87 486.208M417.996 1219.7c55.433-127.4 128.826-241.053 213.943-345.726l62.585 2.504c4'));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('1.199-67.846 90.646-130.751 151.282-186.953l246.304 129.872m678.87 400.303c-58.9-116.52-128-225.625-210.97-324.649l-51.57 10.708c-46.88-78.554-98.97-153.002-165.27-216.234l-246.3 129.872M492.297 1950.01l28.974-155.6 54.521-39.11m1094.528 167.19-28.97-155.6-54.52-39.11"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m237.383 1444.26 62.595-160.62c171.354-176.49 136.293 94.44 186.557 180.43l-18.565 224.55" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m237.383 1444.26 62.595-160.62c171.354-176.49 136.293 94.44 186.556 180.43l-18.564 224.55"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m282.996 1324.66 198.247 176.58-1.987 38.76-212.576-164.05-18.448 46.24 227.732 158.47-3.2 41.1-184.782-129.37 98.818 97.89 80.726 60.98" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m282.996 1324.66 198.247 176.58-1.987 38.76-212.576-164.05-18.448 46.24 227.732 158.47-3.2 41.1-184.782-129.37 98.818 97.89 80.726 60.98"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" d="m1920.07 1426.83-62.6-160.62c-171.35-176.49-136.29 94.44-186.56 180.43l18.57 224.55" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1920.07 1426.83-62.6-160.62c-171.35-176.49-136.29 94.44-186.56 180.43l18.57 224.55"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="m1874.45 1307.23-198.24 176.58 1.98 38.76 212.58-164.05 18.45 46.24-227.73 158.47 3.2 41.1 184.78-129.37-98.82 97.89-80.73 60.98" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1874.45 1307.23-198.24 176.58 1.98 38.76 212.58-164.05 18.45 46.24-227.73 158.47 3.2 41.1 184.78-129.37-98.82 97.89-80.73 60.98"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10" d="m1922.74 1421.17-61.33-151.12-184.9 175.72 18.57 224.55"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="7.001" d="M1081.47 844.881c306.01 0 541.3 276.429 541.3 623.729 0 347.3-224.59 896.05-530.58 896.05-306.012 0-554.061-542.79-554.061-890.11 0-347.3 237.335-629.669 543.341-629.669Zm0 31.897c-289.579 0-523.612 267.772-523.612 596.432 0 328.67 234.033 596.44 523.612 596.44 165.91 0 313.58-87.9 409.45-224.78 71.47-102.04 114.16-231.29 114.16-371.66 0-328.66-234.03-596.432-523.61-596.432Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M396.076 928.281C401.563 909 486.557 804.32 486.557 804.32L330.621 940.2l8.204 46.028-58.334 41.632 5.418 57.97-50.671 38.19 1.901 53.59-46.2 28.93 11.567 90.78 248.183-355.019s-60.1 5.261-54.613-14.02Z" clip-rule="evenodd"/><path fill','="#000" fill-opacity=".3" fill-rule="evenodd" d="M442.366 978.483c-14.408 39.947-145.465 186.157-142.285 219.077 3.18 32.92 51.388 31.6 51.388 31.6l-55.191 49.02-60.686 162.23-32.063-67.44c-32.254-47.5 256.389-443.143 238.837-394.487Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.396" d="M590.047 1972.57c62.52 76.04 121.619 238.49 137.123 265.1 14.438 24.79 29.621 12.19 33.971 26.44 10.832 35.48-2.511 69.19-32.251 81.72-41.673 17.55-97.946-45.28-139.489-143.93-41.556-98.69-58.366-301.11.646-229.33Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M598.257 2053.82c26.581-11.19 65.624 39.82 93.43 105.85 12.703 30.17 24.91 53.13 26.344 77.31 1.706 28.73-4.594 50.01-19.029 56.09-26.58 11.19-70.735-33.34-98.532-99.35-27.806-66.03-28.793-128.71-2.213-139.9Z" clip-rule="evenodd"/><path fill="#fff" d="M662.236 2144.5c10.079-4.25 13.28-19.49 7.148-34.06-6.132-14.56-19.274-22.92-29.354-18.68-10.08 4.25-13.28 19.49-7.148 34.06 6.132 14.56 19.274 22.92 29.354 18.68Z"/><path fill="#fff" d="M657.319 2178.61c7.062-2.97 9.769-12.55 6.048-21.39-3.722-8.84-12.463-13.59-19.525-10.62-7.061 2.98-9.768 12.55-6.047 21.39 3.722 8.84 12.463 13.59 19.524 10.62Z"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M402.961 1228.09c40.469-7.93 135.096-157.97 236.51-221.97 27.188-17.158 211.069-111.919 211.069-111.919C642.798 1','009.99 542.334 1233.2 531.258 1457.41c19.541 241.81 115.272 504.87 232.401 697.61-10.289-6.39-33.728-5.12-48.104-13.64-51.233-30.35-110.67-86.05-133.768-29.72-6.135 14.97 13.608 107.55 3.637 112.1-10.995 5.01-60.915 10.79-60.915 10.79 16.544 80.28 364.919 339.24 543.401 378.77-32.76 13.68-134.278-8.01-201.027-53.25-140.996-95.58-326.355-224.76-447.363-368.63l118.381-45.83c-53.313-149.98-70.517-286.89-68.843-443.33-50.397-57.23-175.296-195.26-228.814-248.94 25.208 2.27 120.306 76.41 132.637 62.71l-120.654-97.38c28.339 7.19 124.403 58.71 134.874 45.89l-125.752-94.05c30.266 9.18 105.548 42.92 118.348 34.49 0 0-7.704-170.84 23.264-176.91Zm1276.199 199.3c-19.36 23.99 3.32 247.34 12.74 237.84l154.33-167.36c-34.02 5.36-66.36 16.69-66.88.47l56.76-38.57c-31.87 9.16-59.06 13.16-63.3-8.04l62.26-50.25','c-30.73 9.85-53.85 11.41-58.34-7.29l53.98-50.79c-31.27 14.36-50.45 17.33-51.56 3.3-25.39 16.66-45.62 43.62-58.21 37.52-24.69-11.94-.49-103.19-1.58-150.99-12.48 77.94-20.38 169.61-40.2 194.16Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M942.971 2032.75s-30.445 30.85-42.438 27.9c-17.432-4.29-70.64-40.58-70.64-40.58s-45.993-39.14-73.308-17.86c-15.638 12.18-41.283 66.66-41.283 66.66-89.662-134.68-151.108-303.9-179.587-513.49-13.219-307.39 92.364-495.06 257.223-622.997l-1.749 47.679C628.297 1090.35 562.825 1285.84 566.898 1542.15c35.86 241.67 175.074 389.51 376.073 490.6Z" clip-rule="evenodd"/><path stroke="'));
      
        return render;
      }

    function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9" d="m1500.6 1830.62 50.71 30.27-5.8 16.28-59.63-36.87"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="9" d="m767.48 2154.83 32.045-62.03 22.648-.05 19.671-31.52-22.361-21.28 18.47-35.56"/><path fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.396" d="M1593.29 1988.28c-33.45 4.88-105.7 172.84-159.21 238.82-9.4 11.57-18.6 3.44-23.55 13.84-25.24 53.03 2.05 89.15 26.83 94.94 44.04 10.23 108.33-47 149.87-145.65 41.55-98.68 56.8-209.39 6.06-201.95Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-rule="evenodd" d="M1570.12 2052.94c-26.58-11.2-59.3 41.2-87.1 107.21-8.41 19.98-25.8 31.78-29.28 49.79-8.03 41.59-2.9 74.43 15.64 82.24 26.58 11.19 70.73-33.33 98.53-99.34 27.81-66.03 28.79-128.71 2.21-139.9Z" clip-rule="evenodd"/><path fill="#fff" d="M1507.75 2134.07c-10.08-4.24-13.28-19.49-7.15-34.05 6.14-14.56 19.28-22.92 29.36-18.68 10.08 4.24 13.28 19.49 7.15 34.05-6.14 14.56-19.28 22.93-29.36 18.68Z"/><path fill="#fff" d="M1512.66 2168.18c-7.06-2.97-9.77-12.55-6.04-21.39 3.72-8.83 12.46-13.59 19.52-10.62 7.06 2.98 9.77 12.55 6.05 21.39-3.72 8.84-12.47 13.59-19.53 10.62Z"/><path fill="#fff" fill-rule="evenodd" d="M1356.8 1021.61s168.42 205.95 167.9 337.63c-.9 228.59-108.74 465.15-108.74 465.15 109.69-302.53 61.79-579.81-59.16-802.78Zm132.06 866.17c-48.87 66.5-148.02 161.65-213.','32 192.08-23.59 10.99-143.18 45.15-111.85 14.34 19.1-18.77 63.92-13.68 127.24-47.59 75.82-40.6 136.27-95.66 197.93-158.83Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="',colors[5].toColor()));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors),renderFn5(colors)));
      
        return render;
      }
}