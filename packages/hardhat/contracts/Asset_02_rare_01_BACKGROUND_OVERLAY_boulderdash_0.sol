//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_01_BACKGROUND_OVERLAY_boulderdash_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<g fill-rule="evenodd" clip-path="url(#a)" clip-rule="evenodd"><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.5" d="M224.98 603.048c-.432-4.33 2.375-7.873 9.636-10.335l23.05 1.218c3.5 4.722 8.872 5.464 19.177 6.295 8.728 3.418 19.196 4.905 24.493 6.403 5.28.87 7.872-1.383 11.728-.661 5.012.938 12.432 5.593 18.348 6.292 5.728 8.55 12.935 14.87 18.414 19.483l2.147 5.994c5.631 4.483 11.26 8.949 16.951 13.907l3.241 7.041c4.226-.213 7.803.115 10.532 1.151 6.006 5.983 9.543 11.18 11.769 15.959-.149 7.745.061 16.363.581 25.733 2.1 5.92 5.104 10.844 11.539 11.995 2.083 1.423 3.913 4.361 5.872 10.052l1.377 23.071c3.097 14.015 7.925 27.504 7.609 42.65 3.898 8.617 4.782 18.982 7.676 28.325 2.957 9.543 11.063 18.068 10.064 28.931-8.726 4.711-17.463 8.241-26.222 9.738-4.193 6.369-8.062 9.4-11.587 8.869l-18.08','5 1.92-4.776-2.476c-13.782 3.789-27.391 4.981-40.884 4.44-18.98 2.279-35.056-.447-51.107-3.217-10.266 4.771-17.963-2.48-25.516-10.401-14.126.333-23.987-2.259-25.53-10.552-8.396-8.599-11.224-18.308-11.24-28.577-14.406-14.109-18.732-23.52-19.011-37.843l3.142-3.105c-3.083-.562-4.824-2.459-5.034-5.877.642-7.708 2.82-13.958 6.917-20.611l-.983-12.012c3.082-10.357 3.749-23.811 3.112-38.935l3.528-3.183c2.254-14.008.616-28.632-2.997-47.525 4.367-4.384 5.073-13.305 4.208-20.729 4.102-6.848 7.628-14.069 7.861-23.428Z"/><path fill="#fff" fill-opacity=".3" d="m293.54 604.842 1.357 8.98-1.417 3.134 5.97-.907 20.59 12.406 3.734 10.599 21.513 21.507 16.885 25.371 5.413-2.204 11.106 1.268 11.134-14.015-6.459-10.174-9.332-2.386-5.136-6.96-17.512-13.791-.859-6.374-18.634-20.045-18.253-4.535-20.1-1.874Z"/><pa','th fill="#000" fill-opacity=".2" d="m411.096 741.139-17.834 1.968-16.662.926-10.253-5.282-9.673-.847 7.646 12.232 1.497 4.105 6.985 8.71 7.556 7.985-.179 7.389 36.051-.669-4.215 6.523-28.064 10.028c-2.428 4.049-5.828 6.682-10.604 7.311-8.129 10.753-19.061 15.58-32.359 15.537-6.075 6.766-10.958 13.249-36.134 14.117-9.075 2.493-16.041.882-20.966-4.701-8.618-.551-16.11-2.717-20.025-10.021l-12.16-18.761-9.245-5.322c-4.487-6.497-3.353-11.888-1.743-17.185l-6.336-25.502c-.487-4.727-2.69-8.227-7.596-9.795l-2.033-27.105 2.452-15.611c-1.522-16.195 3.168-31.072 11.786-45.116-4.956-11.866-7.267-24.729-7.018-38.557l9.367-10.344c.711-2.363-1.821-3.196-6.067-3.222l-1.173-5.66-8.326 4.459-7.036 25.46-4.038 21.584 1.758 48.954-2.714 3.423-2.832 38.763.526 10.552c-6.969 11.579-10.464 21.602-2.721 26.595-4.5','04 16.042 2.929 29.09 15.033 40.967 1.601 12.027 4.517 22.673 12.209 28.307 6.226 9.207 14.607 11.204 23.73 10.715 6.847 6.406 13.899 12.527 27.014 10.22 29.586 6.174 60.984 3.852 92.701.032l25.596.612 7.11-9.57 27.698-8.635-9.975-25.77-9.036-31.624c.029-13.971-3.399-30.155-9.698-48.175Z"/><path fill="#000" fill-opacity=".2" d="M412.107 855.343c-2.306-.043-14.038-3.281-23.007-8.021-4.733-2.5-8.955 2.274-13.611 2.419-4.553.142-10.206.175-12.991 1.735-3.314 1.858-3.633 5.279-8.008 5.293-7.418.025-10.177 1.649-12.062.104 0 0-.926-5.764-5.763-9.516-5.35-4.151-14.946-6.499-21.484-10.355-4.615-2.723-7.462-4.087-11.856-3.935-9.075 2.493-14.512-1.012-19.437-6.595-8.618-.552-16.111-2.718-20.025-10.022l-12.16-18.76-9.245-5.322c-1.044-1.513-5.171-7.142-9.101-6.56-4.174.619-8.246 7.451-12.438 5.57-8.3','36-3.74-17.205-7.276-13.178-4.68-.495 14.045 6.401 15.208 16.006 28.329 1.601 12.027 4.517 22.674 12.208 28.307 6.227 9.208 14.608 11.205 23.731 10.716 6.847 6.406 13.899 12.527 27.014 10.22 29.586 6.174 60.984 3.852 92.701.031 7.431 3.064 16.521 1.819 25.596.612l7.11-9.57Z"/><path fill="#000" fill-opacity=".2" d="M412.108 855.343c-2.307-.043-14.039-3.281-23.008-8.021-4.733-2.5-8.954 2.274-13.611 2.419-4.553.142-10.205.175-12.99 1.735-3.315 1.858-3.634 5.279-8.008 5.293-7.418.025-11.447 2.409-13.333.864 0 0-21.101 4.618-41.502 2.531-5.259-.537-9.069.602-13.944-.698-6.691-1.785-5.859-9.474-9.61-15.127-3.795-5.717-9.616-8.165-13.857-12.666-2.715-2.881-5.839-5.743-7.884-8.394-1.242-1.61-1.149-3.251-3.022-4.46-6.777-4.377-13.686-8.103-18.422-13.184-4.088-4.385-8.153-10.574-11.902-13.437-8.405-','6.42-14.877-5.058-13.354-4.076-1.226 9.896 3.982 15.028 16.086 26.905 1.601 12.027 4.518 22.674 12.209 28.307 4.282 11.416 13.869 12.043 23.73 10.716 7.343 7.603 15.971 17.524 27.014 10.22 29.586 6.174 60.984 3.852 92.702.031 7.431 3.064 16.521 1.819 25.595.612l7.111-9.57Z"/><path fill="'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.499" d="M1977.89 239.108c2.76-5.712 8.95-7.98 19.84-5.516l27.73 19.054c.76 8.534 6.87 13.544 19.05 22.419 8.25 10.89 20.13 20.704 25.58 26.597 5.9 5.099 10.83 4.271 15.08 8.102 5.51 4.98 11.2 16.412 18.02 21.783.61 14.988 4.76 28.328 8.06 38.232l-1.89 9.084c3.59 9.859 7.19 19.693 10.49 30.187l-1.33 11.219c5.42 2.951 9.61 6.081 12.22 9.445 2.91 12.007 3.35 21.159 2.48 28.795-6.07 9.515-12.37 20.386-18.86 32.43-1.89 8.957-1.9 17.365 5.22 23.692 1.51 3.354 1.55 8.398-.35 16.963l-15.84 29.728c-6.82 19.779-11.08 40.22-23 58.809-1.71 13.677-8.5 27.234-12.01 41.052-3.58 14.112.01 30.878-9.5 43.622-14.43-.784-27.98-3.044-40.01-7.849-10.06 4.727-17.17 5.55-21.15 2.208l-23.94-11.374-4.06-6.712c-20.','01-5.778-37.84-14.652-54.2-25.592-25.33-11.609-43.24-27.231-61.08-42.888-16.39-1.881-20.44-16.751-23.81-32.345-17.81-10.336-28.1-21.061-23.7-32.545-3.9-17.078-.02-31.299 7.77-44.076-7.17-28.502-5.39-43.492 5.16-61.509l6.27-1.47c-3.4-3.044-4.12-6.727-1.78-11.135 6.66-9.095 14.12-15.206 24.28-20.36l7.92-15.68c11.71-10.529 22.78-26.746 33.49-46.032l6.81-1.272c13.46-15.698 22.55-35.124 32.44-61.359 8.76-2.126 16.43-12.678 21-22.565 10.31-5.392 20.19-11.685 27.6-23.142Z"/><path fill="#fff" fill-opacity=".3" d="m2061.75 293.506-5.14 12.197-4.15 2.817 8.11 3.415 16.16 31.09-3.43 16.018 10.38 43.105 1.68 44.386 8.41 1.379 12.84 10.028 24.51-8.949-.29-17.563-9.79-10.067-1.08-12.56-11.28-30.47 3.78-8.576-7.91-39.098-19.24-19.527-23.56-17.625Z"/><path fill="#000" fill-opacity=".2" d="m2104.17 552.393','-23.66-11.126-21.42-11.527-8.73-14.368-11.38-8.413.2 21.024-1.26 6.241 2.05 16.143 3.32 15.676-5.85 9.049 45.33 26.601-10.21 4.901-42.51-8.889c-6.1 3.186-12.33 3.872-18.75 1.02-18.29 7.18-35.55 4.863-52.05-5.31-12.7 3.789-23.7 8.132-55.66-9.947-13.17-3.806-20.61-11.109-22.48-21.797-10.3-7.243-17.96-15.637-17.27-27.695l-.84-32.575-7.44-13.65c-.64-11.491 4.88-17.33 10.91-22.69l11.53-36.523c2.99-6.246 2.91-12.273-1.99-17.957l18.09-35.241 14.93-17.54c10.43-21.29 27.58-36.215 48.99-47.115 2.86-18.522 9.78-36.271 20.61-53.27l19.52-5.732c2.68-2.396.16-5.358-5.1-8.62l2.85-7.929-13.74-.792-28.12 26.295-21.44 23.758-35.07 62.192-5.98 2.19-33.01 46.031-7.38 13.518c-17.47 9.09-29.45 18.891-23.62 30.99-17.81 16.514-18.49 38.39-12.49 62.365-7.16 16.169-11.63 31.622-6.36 44.478.74 16.184 9.63 25.044 21.3','5 31.378 3.63 13.173 7.74 26.148 25.8 33.26 32.08 30.189 72.88 51.194 115.21 70.58l31.36 20.237 16.12-6.485 41 10.342 7.21-39.626 12.83-46.187c10.67-17.345 18.72-40.072 24.6-67.265Z"/><path fill="#000" fill-opacity=".2" d="M2018.53 695.129c-2.84-1.809-14.96-14.762-22.5-27.479-3.98-6.709-12.86-3.987-18.76-7.349-5.77-3.289-12.82-7.549-17.47-7.728-5.53-.214-8.53 3.796-13.98.485-9.24-5.613-13.91-5.694-15.07-9.049 0 0 3.23-7.87.07-16.215-3.49-9.231-13.63-19.452-18.82-29.22-3.67-6.896-6.17-10.758-11.75-13.914-13.18-3.806-17.27-12.301-19.14-22.988-10.3-7.244-17.96-15.638-17.27-27.696l-.84-32.574-7.44-13.651c-.15-2.674-1-12.813-6.32-15.079-5.66-2.407-15.92 2.987-19.7-2.541-7.52-10.993-15.86-22.138-12.83-15.846-11.3 17.083-3.61 23.776-1.66 47.396-7.16 16.169-11.63 31.623-6.36 44.478.74 16.185 9.63 ','25.044 21.35 31.378 3.63 13.173 7.74 26.149 25.8 33.261 32.08 30.188 72.88 51.193 115.21 70.579 6.91 9.463 19.16 14.832 31.36 20.238l16.12-6.486Z"/><path fill="#000" fill-opacity=".2" d="M2018.53 695.128c-2.84-1.809-14.96-14.762-22.5-27.479-3.98-6.709-12.86-3.987-18.76-7.349-5.77-3.289-12.82-7.549-17.47-7.728-5.53-.214-8.53 3.796-13.98.485-9.24-5.613-16.06-5.716-17.23-9.071 0 0-29.75-10.316-53.52-28.434-6.13-4.67-11.73-6.153-16.8-11.478-6.96-7.311-.08-16.236-.44-26.117-.36-9.996-5.74-17.468-7.59-26.29-1.18-5.647-2.88-11.582-3.41-16.435-.32-2.945 1.05-4.914-.36-7.843-5.09-10.598-10.85-20.487-12.87-30.407-1.74-8.561-2.09-19.348-4.57-25.761-5.56-14.375-14.65-17.607-13.5-15.227-9.05 11.368-6.48 21.711-.48 45.686-7.16 16.169-11.63 31.623-6.36 44.478-3.36 17.45 8.08 25.525 21.35 31.378 3.34 15.0','39 6.52 33.938 25.8 33.261 32.08 30.188 72.88 51.193 115.21 70.579 6.91 9.463 19.16 14.832 31.36 20.238l16.12-6.486Z"/><path fill="',colors[2].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.5" d="M479.558 2428.38c2.792-4.45 8.096-5.76 16.85-2.73l21.104 18.22c-.153 7.1 4.426 11.79 13.649 20.21 5.803 9.72 14.696 18.89 18.645 24.24 4.396 4.74 8.539 4.51 11.685 8.05 4.091 4.61 7.729 14.54 12.859 19.59-.86 12.4 1.342 23.77 3.158 32.23l-2.387 7.31c2.058 8.45 4.126 16.88 5.89 25.83l-2.119 9.12c4.193 2.92 7.364 5.89 9.204 8.89 1.304 10.16.834 17.74-.578 23.95-5.875 7.29-12.054 15.67-18.494 25-2.377 7.21-3.154 14.13 2.138 19.99.935 2.9.507 7.06-1.835 13.95l-15.763 23.04c-7.417 15.67-12.793 32.13-24.306 46.35-2.658 11.11-9.486 21.66-13.639 32.73-4.24 11.3-2.813 25.43-11.808 35.07-11.817-1.97-22.772-5.06-32.243-10.12-8.716 2.98-14.654 3.01-17.626-.11l-18.688-11.55-2.726-5.9c-15.963-6.5','8-29.838-15.52-42.319-26.02-19.807-11.88-33.137-26.38-46.411-40.91-13.332-3.04-15.313-15.66-16.661-28.81-13.733-10.14-21.228-19.92-16.563-28.98-1.65-14.42 2.837-25.78 10.423-35.6-3.309-24.13-.472-36.32 9.863-50.2l5.298-.64c-2.527-2.82-2.786-5.92-.456-9.34 6.319-6.88 13.025-11.23 21.861-14.55l7.953-12.2c10.608-7.61 21.204-19.96 31.792-34.87l5.724-.42c12.521-11.71 21.783-26.88 32.318-47.59 7.415-.96 14.692-8.95 19.361-16.68 8.986-3.5 17.697-7.78 24.847-16.55Z"/><path fill="#fff" fill-opacity=".3" d="m543.685 2480.84-5.352 9.58-3.673 1.95 6.372 3.55 10.473 27.08-4.28 12.89 4.619 36.45-2.66 36.72 6.798 1.91 9.665 9.43 21.004-5.14 1.365-14.49-7.143-9.19.247-10.45-6.509-26.13 3.897-6.72-2.951-32.93-14.069-17.84-17.803-16.67Z"/><path fill="#000" fill-opacity=".2" d="m555.024 2697.99-18.483-11.33-','16.592-11.45-5.879-12.63-8.608-7.97-1.754 17.34-1.61 5.03.221 13.48 1.303 13.22-5.64 6.92 34.913 26.05-8.853 3.11-34.215-11.2c-5.316 2.07-10.511 2.06-15.536-.87-15.72 4.25-29.731.76-42.394-9.12-10.808 1.96-20.269 4.53-44.947-13.27-10.51-4.34-15.967-11.03-16.536-20.01-7.82-6.91-13.37-14.52-11.7-24.39l2.277-26.91-4.886-11.93c.525-9.52 5.598-13.83 11.056-17.69l12.828-29.04c3.035-4.87 3.522-9.85-.001-14.98l18.123-27.38 13.897-13.09c10.535-16.58 26.024-27.32 44.649-34.34 4.051-15 11.367-28.99 21.84-42.01l16.6-2.94c2.427-1.73.627-4.4-3.408-7.57l3.07-6.27-11.249-1.91-25.564 19.1-19.832 17.62-34.559 48.04-5.125 1.26-31.397 34.91-7.308 10.46c-15.224 5.9-25.981 12.88-22.284 23.38-16.175 11.98-18.737 29.94-15.973 50.24-7.375 12.66-12.471 24.99-9.298 36.06-.871 13.4 5.651 21.51 14.723 27.79 1.795 11.1','9 3.997 22.25 18.226 29.76 23.675 27.79 55.37 48.82 88.479 68.65l23.983 19.53 13.872-3.87 32.835 12.25 9.553-31.98 14.782-36.88c10.369-13.32 19.076-31.31 26.401-53.17Z"/><path fill="#000" fill-opacity=".2" d="M471.453 2807.76c-2.17-1.74-10.974-13.52-16.028-24.68-2.667-5.89-10.232-4.46-14.785-7.77-4.452-3.23-9.873-7.39-13.687-7.96-4.539-.68-7.375 2.35-11.562-.87-7.101-5.47-10.937-5.96-11.594-8.83 0 0 3.383-6.19 1.543-13.35-2.035-7.93-9.459-17.27-12.845-25.79-2.392-6.02-4.1-9.43-8.407-12.54-10.51-4.33-13.105-11.7-13.674-20.68-7.82-6.91-13.37-14.52-11.7-24.39l2.277-26.91-4.886-11.93c.122-2.21.349-10.64-3.834-13-4.443-2.49-13.387 1.01-15.997-3.88-5.19-9.75-11.04-19.69-9.118-14.23-10.868 13.04-5.145 19.26-5.689 38.9-7.374 12.66-12.47 24.99-9.297 36.06-.871 13.4 5.651 21.51 14.723 27.79 1.795 11','.19 3.997 22.25 18.225 29.76 23.676 27.79 55.37 48.82 88.48 68.65 4.826 8.42 14.426 13.96 23.983 19.53l13.872-3.88Z"/><path fill="#000" fill-opacity=".2" d="M471.454 2807.77c-2.171-1.75-10.974-13.53-16.029-24.69-2.667-5.89-10.231-4.46-14.784-7.77-4.452-3.23-9.873-7.39-13.687-7.96-4.54-.68-7.376 2.35-11.563-.87-7.1-5.47-12.711-6.18-13.368-9.05 0 0-23.563-11.21-41.496-28.3-4.623-4.41-9.103-6.14-12.795-10.99-5.067-6.66 1.418-13.38 2.022-21.56.609-8.26-3.136-14.91-3.853-22.35-.46-4.76-1.324-9.8-1.314-13.85.006-2.45 1.31-3.95.416-6.49-3.23-9.2-7.068-17.87-7.829-26.22-.656-7.22.044-16.13-1.416-21.64-3.272-12.35-10.459-15.84-9.732-13.78-8.495 8.54-7.322 17.3-4.558 37.6-7.374 12.66-12.47 24.99-9.298 36.06-4.362 14.07 4.326 21.76 14.724 27.79 1.382 12.7 2.275 28.56 18.225 29.76 23.676 27.79 55.37 4','8.82 88.479 68.65 4.827 8.42 14.427 13.96 23.983 19.53l13.873-3.87Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.501" d="M1084.47 53.15c1.42-2.19 4.07-2.796 8.4-1.222l10.34 9.231c-.14 3.527 2.1 5.893 6.62 10.154 2.8 4.88 7.15 9.51 9.07 12.202 2.14 2.391 4.2 2.31 5.74 4.097 1.99 2.322 3.72 7.29 6.23 9.84-.53 6.158.47 11.827 1.31 16.046l-1.25 3.615c.95 4.216 1.91 8.423 2.72 12.884l-1.13 4.516c2.06 1.488 3.61 2.985 4.5 4.496.57 5.059.27 8.823-.48 11.899-2.98 3.572-6.12 7.688-9.4 12.273-1.24 3.562-1.68 6.998.9 9.955.44 1.449.2 3.513-1.02 6.915l-8.02 11.326c-3.82 7.729-6.63 15.862-12.46 22.84-1.42 5.501-4.9 10.688-7.05 16.153-2.2 5.582-1.61 12.621-6.15 17.335-5.86-1.071-11.28-2.7-15.95-5.29-4.35 1.409-7.31 1.375-8.76-.198l-9.19-5.895-1.31-2.954c-7.88-3.403-14.7-7.958-20.82-13.281-9.75-6.063-16.26-13.38-2'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors)));
      
        return render;
      }
}