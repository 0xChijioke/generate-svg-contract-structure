//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_04_aku_03_RIDER_aku_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.968" d="M1329.38 1594.06s-27.9-69.87-51.34-89.41c-23.43-19.54-89.27-27.84-89.27-27.84l-208.235 4.28s-74.571 28.89-92.879 47.3c-13.906 13.99-25.177 64.59-25.177 64.59l-44.587 53.66 6.614 60.33-41.217 90.61-8.872 30.61 11.043 48.65-25.517 13.5-12.081 34.32 105.61 79.68c70.466 121.58 418.798 100.31 467.388-9.17l106.2-66.67-27.6-25.16-4.72-33.65-36.44-7.4s63.06-51.35 66.67-76.25c3.6-24.91-45.02-73.17-45.02-73.17l-3.61-86.84-46.96-31.97Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m987.24 1479.59-52.012 92.86 25.002 66.66-46.799-79.66-17.405 22.55 14.185 58.79-26.307-37.01-42.019 46.73 21.625 73.26-20.72-25 31.099 41.53-39.3-6.76-23.354',' 6.21 36.487 12.25s-46.578 16.73-37.694 17.41c8.885.69 54.706-9.33 54.706-9.33l-37.185 23.51 23.971-2.25-31.603 53.5 39.028 28.71.85-33.82 12.042 52.96-24.8 9.78 30.829 31.25-75.765-15.79 41.766 54.23-65.429-44.23 37.448 47.69-61.073-49.31 8.796-26.79 21.852-10.85-3.578-28.36-7.333-18.8 10.081-37.8 39.358-92.52-7.58-59.25 45.479-46.96 27.926-68.66 97.426-46.73Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-opacity=".5" fill-rule="evenodd" d="m1220.91 1664.99-66.61 108.32 21.14-80.15-54.35 98.7-31.26-14.91-50.95-69.33 14.02 65.36-76.634-118.77 15.305 70.72-49.388-37.52 84.317 89.57-55.344-32.66 19.148 101.61-35.689-10.81 3.142 58.24-67.191 16.46 31.795 6.64-81.71 26.78 59.794 25.44-41.18 5.01 24.902 18.97-13.481 10.88 39.955 21.66c132.989 50.85 254.769 92.54 408.969-33.07l28.85-38.82-32.69 2.33 42.4-60.1-31.28 7.36-.21-55.77-52.81.25-16.45-41.98-12.77-7.15-8.1 54.64-1.65-70.16-55.85 32.36 64.06-116.22-22.2-33.88Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-opacity=".52" stroke="'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[1].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".31" stroke-width="93.54" d="M1094.65 2136.65c84.15 0 152.36-54.75 152.36-122.3 0-67.54-68.21-122.29-152.36-122.29-84.15 0-152.36 54.75-152.36 122.29 0 67.55 68.21 122.3 152.36 122.3Z"/><path fill="',colors[3].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.956" d="M1104.91 1759.48c13.84-1.15 24.3-25.52 38.11-54.01 19.3-39.84 40.02-89.52 40.47-110.75 1.4-67 5.37-147.13-92.96-145.27-108.541 2.05-95.703 81.68-97.105 148.68-.762 36.42 91.655 163.01 111.485 161.35Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="m1163.98 1565.23 4.32 36.47-67.97 57.09-27.21 36.85 34.03 65.05 38.57-58.5-1.45 23.05 35.24-65.93 12.79-4.57 12.25-39.01-10.4-40.88-30.17-9.62Z" clip-rule="evenodd"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" d="m999.999 1484.13-12.187-9.8 5.498-9.15 3.009-11.63 16.701-6.27 10.64-10.39 10.13-1.89 10.39-7.69 20.49-4.84 18.69-9.82 17.74 6.51 12.53-4.16 19.55 6.5 24.9-2.56 4.46 6.4 2.85 13.95 13.5 4.8-7.5 22.29s-81.88 22.85-85.51 24.6c-3.63 1.75-85.881-6.85-85.881-6.85Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="m999.999 1484.13-12.187-9.8 5.498-9.15 3.009-11.63 16.701-6.27 10.64-10.39 10.13-1.89 10.39-7.69 20.49-4.84 18.69-9.82 17.74 6.51 12.53-4.16 19.55 6.5 24.9-2.56 4.46 6.4 2.85 13.95 13.5 4.8-7.5 22.29s-81.88 22.85-85.51 24.6c-3.63 1.75-85.881-6.85-85.881-6.85Zm84.811 3.48c6.89-2.55 72.1-20.84 83.83-24.13l5.79-17.23-10.22-3.63a3.527 3.527 0 0 1-2.28-2.62l-2.7-13.24-2.86-4.09-22.84 2.34c-.49.05-.99 0-1.47-.16l-18.44-6.12-11.41 3.79c-.76.25-1.58.23-2.3','3-.04l-16.27-5.98-17.3 9.1c-.26.14-.54.24-.83.31l-19.78 4.67-9.8 7.26c-.43.32-.93.54-1.46.64l-9.08 1.68-9.87 9.64c-.35.35-.76.61-1.22.78l-14.989 5.64-2.553 9.85a3.25 3.25 0 0 1-.392.93l-3.907 6.5 8.971 7.22c7.47.78 53.39 5.5 74.36 6.7 4.36.24 8.49.2 9.05.19Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="4.477" d="m1081.16 1565.74 12.05-8.97 9.52 7.37-21.57 1.6Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1069.6 1505.11a.662.662 0 0 1 .33-.88c.34-.16.73-.01.89.33 0 0 6.67 12.3 6.84 19 .08 3.4-1.52 5.5-4.24 6.18-2.91.71-7.17.4-12.37-.53-4.83-.87-10.52-2.23-16.66-3.72-5.14-1.25-10.61-2.52-16.15-3.63-3.54-.71-7.09-1.38-10.63-1.86-7.72-1.05-15.33-1.34-22.313.8-2.773.79-3.364 4.16-3.608 7.84-.55 ','8.28 1.888 18.38 1.888 18.38a.673.673 0 0 1-.422.85.667.667 0 0 1-.848-.42s-5.488-12.96-5.192-22.21c.159-4.94 2.214-8.69 5.996-10.4 5.223-2.28 10.909-3.47 16.849-3.81 5.52-.33 11.23.07 16.87.99 4.12.68 8.18 1.68 12.11 2.79 4.06 1.14 7.96 2.45 11.64 3.71 6.04 2.06 11.4 4.05 15.77 5.16 2.48.62 4.55 1.08 6.19.92.06 0 .07.16.11.12.28-.32.45-.81.53-1.4.15-1.23.1-2.72-.11-4.32-.81-6.3-3.47-13.89-3.47-13.89Zm18.01-.23c-.05-.37.2-.71.56-.77.36-.06.71.19.77.56 0 0 1.29 4.87 3.62 7.19 1.13 1.13 2.37.73 4.18-1.89 2.79-3.93 6.17-8.89 10.12-13.98 3.5-4.5 7.35-9.11 11.35-13.23 2.27-2.34 4.61-4.52 6.96-6.41 4.45-3.6 8.87-6.25 12.74-7.72 6.29-2.19 12.15-.99 17.11 2.4 7.52 5.13 12.71 14.57 14.2 18.03.18.33.06.74-.27.92-.32.17-.73.06-.91-.27-1.94-2.83-8.25-10.29-15.82-13.7-3.52-1.58-7.33-2.05-11.11-.04-2.36'));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(' 1.19-4.81 3.14-7.47 5.38-1.58 1.33-3.19 2.8-4.87 4.31-3.71 3.32-7.57 6.99-11.36 10.66-6.35 6.15-12.51 12.14-17.01 16.72-3.82 3.78-6.61 3.84-8.59 2.47-1.26-.87-2.28-2.39-2.91-4.18-1.07-3-1.29-6.45-1.29-6.45Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1065.62 1528.57c-.3.16-.6.7-.85 1.33 1.04-.22 1.76-.41 1.6-.8-.15-.33-.3-.51-.46-.57l.85-.09c7.88-.67 6.19 7.09 4.93 8.18-.29.25-.9.75-1.99 1.15-.91.33-2.69.87-5.15 1.46-6.21 1.48-16.97 3.69-27.85 5.64-10.71 1.93-21.44 3.55-27.95 4.61-2.72.44-4.67.74-5.58.91-.11.02-.22.02-.3.03h-.02c-.08 0-.14.01-.13.05v.01c-.04.02-.07.02-.11.03-.52.11-1.21-1.03.2-1.51.87-.31 2.76-.93 5.4-1.78 5.15-1.66 13.04-4.22 21.45-6.85-3.55.15-7.01.27-10.31.38-15.59.5-27.315.65-27.315.65a.68.68 0 0 1-.733-.6.678.678 0 0 1 .599-.74s11.529-2.17 26.899-','4.79c5.61-.96 11.71-1.96 17.95-2.93 4.99-.77 10.03-1.56 14.98-2.2 4.8-.63 9.5-1.09 13.89-1.57Zm-62.77 21.85c0 .29-.04.42-.13.06a.31.31 0 0 0 .13-.06Zm62.77-21.85c.09-.06.19-.07.29-.04-.1.01-.2.03-.29.04Z" clip-rule="evenodd"/><path fill="gray" d="M1139.97 1544.59c6.63 0 12-4.87 12-10.88 0-6.01-5.37-10.88-12-10.88s-12 4.87-12 10.88c0 6.01 5.37 10.88 12 10.88Z"/><path fill="#000" fill-rule="evenodd" d="M1139.97 1522.16c3.59-.56 6.91.37 9.63 2.11 3.26 2.08 5.14 5.52 5.68 9.44.44 4.22-1.33 8.14-4.26 11.09-2.71 2.74-6.7 4.27-11.05 4.49-1.68-.02-3.31-.21-4.81-.7-2.42-.79-4.6-2.04-6.27-3.76-2.9-2.98-4.71-6.89-4.26-11.12.55-3.93 2.42-7.38 5.7-9.46 2.73-1.72 6.05-2.66 9.64-2.09Zm0 1.34c-2.89.45-5.21 1.94-6.91 3.91-1.5 1.74-2.07 3.98-1.74 6.3.21 2 1.6 3.46 3.18 4.63 1.48 1.1 3.4 1.64 5.47 1.55 2.08.','1 4.01-.42 5.5-1.52 1.59-1.17 2.99-2.65 3.2-4.66.32-2.33-.27-4.57-1.78-6.31-1.69-1.97-4.03-3.45-6.92-3.9Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".4" fill-rule="evenodd" d="m1017.13 1567.79 27.73 34.83 1.56 50.91 56.07 25.75-17.5 13.51 24.7 13.72-20.26 1.35 23.86 16.66-22.27 2.38 13.21 40.52-15.08-9.52-53.98-80.39-58.613-59.22 6.376-49.68 34.197-.82Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".6" fill-rule="evenodd" d="M1008.32 1603.44c37.18 39.58 96.59 57.27 100.85 49.87-16.09 5.92-9.81 25.67-22.19 21.96 11.97 16.77 2.52 36.9 19.28 50.31-17.51-8.18-34.66-16.94-48.22-31.68l44.58 71.88-48.28-53.41-42.24-54.9-3.78-54.03Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-opacity=".4" fill-rule="evenodd" d="m1100.86 1548.36-20.27 2.04-16.34 12.44 16.86-5.39 12.19-4.85 8.28 5.24 16.58 5-17.3-14.48Zm-9.6 28.68c-16.7.71-49.58-7.73-49.58-7.73l19.7 14.44-22.44-.99-14.15.86 20.48 19.45 14.66 23.82-4.28 7.6s33.39 18.56 41.63 18c8.24-.55 34.06-16.08 34.06-16.08l-16.82 4.34 20.44-25.07s-23.09 11.64-16.82 7.85c6.28-3.8 40.91-50.45 40.91-50.45l-24.9 12.26s33.41-20.74 16.5-16.86c-16.92 3.88-40.64 7.77-59.39 8.56Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1021.76 1575.8c25.69 17.9 109.93 15.06 138.9.66 0 0-46.01 45.6-71.71 49.43-23.48 3.49-67.07-49.89-67.19-50.09Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1022.31 1575.01c7.35 4.84 19.36 7.76 33.41 9.36 10.9 1.25 23.02 1.64 35.2 1.33 12.04-.3 24.11-1.27 35.08-2.87 13.71-','1.98 25.67-4.85 33.5-8.7 1.14-.58 2.53-.23 3.28.81.74 1.04.62 2.47-.29 3.37 0 0-19.88 19.45-40.93 33.94-11.4 7.85-23.17 14.21-32.33 15.49-8.96 1.24-20.75-5.25-31.96-14.28-18.81-15.14-36.25-37.01-36.33-37.13a.96.96 0 0 1 .15-1.22c.33-.32.84-.36 1.22-.1Zm4.21 4.83c6.26 7.04 19.15 20.83 32.62 31.23 10.51 8.1 21.31 14.28 29.53 12.96 8.69-1.37 19.67-7.75 30.36-15.39 11.66-8.32 22.94-18.19 30.49-25.16-6.62 1.97-14.35 3.6-22.73 4.79-11.19 1.59-23.53 2.46-35.81 2.48-12.4.02-24.74-.82-35.79-2.57-11.37-1.8-21.36-4.6-28.67-8.34Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="m1047.41 1588.95 13.93 12.49.14-5.78 54.97.32-1.09 5.36 16.49-11.81c-28.46 1.78-56.69 2.02-84.44-.58Zm5.65 17.69s24.14 16.54 34.75 15.96c11.38-.62 39.92-16.21 39.92-16.21-13.05 3.5-27.21 6.99-39.71 6.75-13.46-.26-','25.1-4.46-34.96-6.5Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M1053.25 1605.69c6.25 1.15 13.21 3.14 20.88 4.45 4.41.76 9.05 1.28 13.92 1.27 5.04 0 10.34-.64 15.72-1.62 7.8-1.43 15.75-3.6 23.32-5.77 1.21-.33 2.46.3 2.93 1.45.46 1.16-.01 2.48-1.11 3.08 0 0-11.9 6.81-23.51 11.64-6.64 2.77-13.2 4.8-17.44 4.99-4.07.1-9.97-1.95-15.77-4.98-9.93-5.19-19.69-12.76-19.69-12.76a.972.972 0 0 1 .75-1.75Zm6.68 3.73c3.86 2.09 9 4.74 14.09 6.91 5.15 2.2 10.19 3.98 13.66 3.69 3.82-.24 9.62-2.41 15.62-4.89 1.39-.58 2.81-1.18 4.2-1.8-1.03.17-2.04.34-3.06.48-5.66.82-11.2 1.26-16.45 1.05-5.06-.2-9.85-.94-14.39-1.91-4.85-1.04-9.4-2.35-13.67-3.53Z" clip-rule="evenodd"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.069" d="m1184.74 1487.78-76.76 10.47-21 8.37-19.23-2.88-88.636 12.09 2.089 24.63-6.383 21.53 85.13-9.32 30.83-12.03 40.59 4.55 71.6-13.59-13.55-27.51-4.68-16.31Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.05" d="M1038.55 1555.07c18.37 0 33.26-13.23 33.26-29.54s-14.89-29.54-33.26-29.54c-18.37 0-33.26 13.23-33.26 29.54s14.89 29.54 33.26 29.54Z"/><path fill="',colors[5].toColor(),'" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.996" d="M1149.64 1484.79c-17.37-6.47-35.41.79-40.28 16.22-4.87 15.44 5.27 33.19 22.64 39.66 17.38 6.47 35.41-.79 40.28-16.22 4.87-15.43-5.27-33.19-22.64-39.66Z"/><path fill="#000" fill-opacity=".6" fill-rule="evenodd" d="m1007.74 1654.29 15.38-88.97c13.17-.56 55.37-3.68 57.29-15.3l22.4-1.77c6.83 16.24 49.59 10.91 61.07 4.74l23.2 97.35 31.53-71.11-76.04-136.24s-146.417 57-147.319 66.14c-.898 9.14 12.489 145.16 12.489 145.16Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-opacity=".4" fill-rule="evenodd" d="M1022.84 1533.17s9.33 9.11 17.34 8.12c12.24-1.52 20.04-10.55 20.04-10.55-14.47-14.86-26.85-13.41-37.38 2.43Zm95.75-11.38s7.99 10.43 16.06 10.66c12.32.35 21.26-7.42 21.26-7.42-12.31-16.89-24.76-17.32-37.32-3.24Z" clip-rule="evenodd"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.979" d="M1048.32 1547.15c11.97.25 21.88-8.76 22.12-20.13.24-11.36-9.28-20.78-21.25-21.03-11.98-.26-21.89 8.75-22.13 20.12-.24 11.36 9.28 20.78 21.26 21.04Z"/><path fill="',colors[0].toColor(),'" stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.932" d="M1138.28 1500.96c-11.24-4.36-23.36.76-27.06 11.44-3.7 10.68 2.41 22.87 13.65 27.23 11.25 4.36 23.36-.76 27.06-11.44 3.71-10.68-2.41-22.87-13.65-27.23Z"/><path fill="#fff" d="M1044.83 1527.43c1.08 0 1.96-.99 1.96-2.22 0-1.24-.88-2.23-1.96-2.23s-1.95.99-1.95 2.23c0 1.23.87 2.22 1.95 2.22Zm5.49 3.26c1.55 0 2.81-1.43 2.81-3.2 0-1.77-1.26-3.2-2.81-3.2s-2.8 1.43-2.8 3.2c0 1.77 1.25 3.2 2.8 3.2Zm76.21-7.71c1.08 0 1.95-.99 1.95-2.22 0-1.23-.87-2.23-1.95-2.23s-1.96 1-1.96 2.23.88 2.22 1.96 2.22Zm5.42 3.26c1.52 0 2.74-1.43 2.74-3.2 0-1.77-1.22-3.2-2.74-3.2-1.51 0-2.74 1.43-2.74 3.2 0 1.77 1.23 3.2 2.74 3.2Z"/><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.917" d="m1092.28 1473.05-81.22 55.33-1.02 141.09-32.899-33.35-44.053-65.45 63.521-119.35 1.229-20.46 84.092-62.57 108.06 50.59-9.75 20.97 10.53 25.43 2.24 13.75 48.15 88.67-50.13 88.26-23.81-138.01-74.94-44.9Z" clip-rule="evenodd"/><path fill="#000" fill-rule="evenodd" d="M992.864 1595.02c.02.53-.397.98-.93 1a.963.963 0 0 1-1.005-.92s-1.351-20.16-1.867-40.68c-.15-5.96-.211-11.95-.166-17.49.067-8.24.394-15.5 1.067-20.18.391-2.73.981-4.7 1.593-5.74 1.099-1.86 4.081-4.54 8.504-7.74 8.13-5.86 21.33-13.92 34.94-23.37 12.68-8.68 25.76-18.38 36.14-25.01 7.8-4.97 14.23-8.19 17.98-8.39 1.64-.08 4.11.49 7.18 1.76 5.69 2.34 13.81 6.99 22.8 12.7 26.81 17.03 61.45 43.36 61.45 43.36','.29.22.48.55.52.92l3.54 35.45a.981.981 0 0 1-.86 1.07.974.974 0 0 1-1.07-.86l-4.18-34.78c-4.18-3.04-36.34-26.33-61.55-41.72-8.82-5.38-16.76-9.8-22.32-11.97-2.26-.89-4.04-1.42-5.23-1.34-3.3.22-8.79 3.41-15.6 7.9-10.26 6.74-23.19 16.56-35.72 25.35-13.6 9.41-26.75 17.5-34.91 23.28-3.646 2.58-6.272 4.55-7.197 6.06-.599.97-.956 3.18-1.332 6.2-.553 4.45-.928 10.46-1.188 17.16-.213 5.5-.342 11.45-.443 17.36-.349 20.48-.146 40.62-.146 40.62ZM1095 1429.23c-2.86-.11-5.83.65-8.65 1.66-7.28 2.62-13.52 7.09-13.52 7.09-.4.35-1.01.32-1.37-.09a.965.965 0 0 1 .09-1.36s2.38-2.54 6.1-5.35c2-1.51 4.37-3.07 6.96-4.35 3.53-1.74 7.42-2.83 11.15-2.85.32.01 1.01.13 1.93.65 1.03.58 3.04 1.96 5.67 3.98 3.28 2.52 7.59 6.06 12.33 10.01 5.82 4.82 12.23 10.29 18.21 15.26 7.88 6.55 14.9 12.26 18.56 14.57.9.57 1.47.99 1.7','8.97a.964.964 0 1 1 .19 1.92c-.45.06-1.37-.19-2.63-.84-3.22-1.65-9.41-5.89-16.61-11.11-6.29-4.55-13.35-9.82-19.82-14.72-4.88-3.7-9.43-7.15-13.04-9.93-3.36-2.58-5.87-4.56-7.16-5.41-.06-.03-.11-.07-.17-.1Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="m980.516 1481.57-46.515 87.42 5.674 9.82 2.224-9.38 24.246 25.16-14.489-41.11 31.638 34.13-19.581-52.01 24.96-41.23 19.007-2.25-6.73-8.1 50.89-40.25-48.83 29.88 17.25-19.49-20.796 5.45 52.486-38.06-30.63 2.53 65.12-25.9-17.54 23.16 39.56-19.27 27.17 21.19-3.1-17 54.77 103.71-11.34-50.41 35.13 91.82 5.48-14.96.87 17.49 8.92 2.8-8.73 18.27 20.24-10.01 13.71-27.9 2.74 10.48 13.3-12.79-30.7 58.33 39.99-44.33-4.08 56.99 19.89-47.86 18.41 36.26-16.58 51.63 25.31-30.95-12.83 32.63 20.8-23.03 20.13 13.41 11.61 48.2-43','.47 8.67 42.97 22.02-17.49 2.49 17.22 44.43-26.93 69.36 38.55-38.5-23.08 53.23s45.07-47.75 35.54-37.98c-9.53 9.77-32.05 59.41-32.05 59.41l25.19 11.56-10.65 25.36 18.03-2.91-39.5 37.83 41.95-18.14 23.64-4.03-13.7-16.4-1.81-28.7-33.95-13.39s62.47-55.15 64.59-79.04c2.12-23.9-44.3-69-44.3-69l-3.13-83.2-53.23-38.99-41.26-83.26-84.29-27.27-7.13-5-10.01-32.95 9.95-21.81-108.64-48.77-82.25 54.83-1.691 20.8-18.123 34.88Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors)));
      
        return render;
      }
}