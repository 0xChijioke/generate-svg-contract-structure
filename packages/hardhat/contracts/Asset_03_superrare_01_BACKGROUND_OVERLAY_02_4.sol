//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_03_superrare_01_BACKGROUND_OVERLAY_02_4 {

using ToColor for bytes4;

function renderFn30(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" stroke="',colors[5].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="3.671" d="M601.081 804.134c7.483 1.238 22.817 21.936 21.629 27.217-1.521 6.759-31.12 31.58-40.581 31.788-5.071.112-22.265-20.099-21.628-27.217.85-9.502 31.249-33.331 40.58-31.788Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" d="m602.091 804.244 3.898 2.827a108.888 108.888 0 0 1-19.149 20.393c-6.574 5.39-13.786 9.969-21.352 13.318l3.493 4.976c4.307-2.849 8.81-5.883 13.393-9.157a328.805 328.805 0 0 0 6.309-4.629c4.498-3.384 9.025-7.005 13.34-11.182l1.357 1.291a111.184 111.184 0 0 1-5.978 6.59 120.836 120.836 0 0 1-9.877 8.97c-6.029 4.902-12.214 9.011-17.916 12.928a2.158 2.158 0 0 1-2.969-.541l-6.393-8.917a2.258 2.258 0 0 1 .992-3.392c8.063-3.312 15.729-8.137 22.651-13.889a105.076 105.076 0 0 0 18.201-19.586Zm6.205 25.533 1.111 1.069c-2.249 2.799-4.576 5.474-7.086 8.024-2.505 2.553-5.105 4.996-7.886 7.259-2.205 1.796-4.528 3.454-6.891 5.059-3.509 2.384-7.163 4.571-10.849 6.732l-2.172-3.619c2.967-1.9 5.87-3.874 8.752-5.864 1.924-1.329 3.819-2.689 5.718-4.037 1.269-.9 2.538-1.793 3.808-2.686 1','.915-1.349 3.819-2.682 5.696-4.073 3.381-2.494 6.661-5.053 9.799-7.864Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M570.222 836.834c12.446 15.242 24.524 14.441 36.511 9.649l-5.978 19.44s32.634 99.169 58.564 141.707c34.962 57.37 153.835 200.14 153.835 200.14l19.134 2s-18.78 11.17-24.503 5.02c-30.49-32.76-125.483-158.62-158.441-201.6-13.244-17.28-58.67-149.791-58.67-149.791-16.438-3.003-19.926-14.793-26.675-24.37l6.223-2.195Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".2" fill-rule="evenodd" d="M517.532 1089.12c-1.073.66-2.034 1.1-2.829 1.25-3.484.67-17.666-11.26-18.043-16.24-.506-6.65 17.732-26.61 24.342-26.64 5.306-.02 18.259 12.46 18.044 16.24-.049.88-.664 2.26-1.677 3.96 9.417 3.92 101.874 27.44 120.314 39.59 2.88 1.89 100.134 99.81 100.13','4 99.81s20.754 14.91 27.994 25.19c10.043 14.28-64.262 69.52-81.13 61.15-11.481-5.7-28.633-25.77-28.633-25.77s-74.131-87.44-79.84-91.3c-21.782-14.73-70.501-75.23-76.779-87.1-.658-.03-1.29-.07-1.897-.14Z" clip-rule="evenodd"/><path fill="',colors[0].toColor()));
      
        return render;
      }

    function renderFn31(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-opacity=".3" fill-rule="evenodd" stroke="',colors[0].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="5.359" d="M2139.9 318.18c-3.85-1.734-145.79-95.191-145.79-95.191s-27.97-13.999-38.72-25.023c-14.91-15.293 41.34-106.274 63.35-99.41 14.98 4.671 39.61 25.593 39.61 25.593s138.66 88.917 144.9 94.621c22.17 20.247 88.97 109.274 88.97 109.274l-17.69 27.832s-108.32-25.84-134.63-37.696Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" fill-rule="evenodd" d="M1994.53 119.027s15.02-19.075 22.79-16.324c18.17 6.437 95.34 64.478 95.34 64.478s-76.38-50.421-94.56-56.857c-6.67-2.362-23.57 8.703-23.57 8.703Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="',colors[2].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.465" d="m2112.91 299.748-116.89-75.538c13.75-32.576 30.97-59.928 55.04-87.094l116.28 74.004c-22.77 28.92-40.03 57.678-54.43 88.628Z" clip-rule="evenodd"/><path fill="',colors[3].toColor()));
      
        return render;
      }

    function renderFn32(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" fill-rule="evenodd" d="m2092.15 285.472-73.11-47.249c15.46-31.184 32.61-58.323 54.74-86.452l72.92 45.991c-21.47 29.465-38.88 57.857-54.55 87.71Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="',colors[2].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.337" d="M2081.95 267.213c-4.54 1.788-37.54-21.181-40.71-28.023-2.43-5.239 29.13-55.996 37.28-58.013 5.93-1.47 38.79 20.152 41.07 25.76 1.19 2.935-9.99 17.898-19.6 32.637-8.73 13.388-15.8 26.755-18.04 27.639Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1960.05 174.509s2.8 16.949 8.47 21.133c29.24 21.65 166.72 116.949 166.72 116.949s-148.76-91.13-176.97-116.907c-4.23-3.869 1.78-21.175 1.78-21.175Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M2099.21 218.695a14.167 14.167 0 0 1-6.21 6.272c-1.14.589-2.39.948-3.66 1.137-3.99.594-8.28-.239-11.79-2.911-3.39-2.546-5.58-6.055-6.28-9.892-.69-3.815-.17-7.873 2.15-11.27 2.12-3.515 5.55-5.692 9.28-6.584 3.71-','.888 7.74-.322 11.36 1.764 3.74 2.122 6.15 5.644 7.27 9.448.84 2.842 1.04 5.993-.08 8.799a11.1 11.1 0 0 1-2.04 3.237Zm-7.38-4.765c.22-.514.13-1.074.27-1.591.32-1.192.66-2.373.44-3.564-.33-1.811-1.18-3.595-2.8-4.776-1.72-1.24-3.74-1.83-5.65-1.517-1.99.321-3.84 1.403-5.04 3.189-1.08 1.844-1.25 3.988-.68 5.921.54 1.841 1.97 3.327 3.8 4.33 1.35.729 2.83.758 4.24.614.8-.085 1.54-.419 2.29-.726 1.12-.463 2.33-.858 3.13-1.88Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.593" d="m2084.23 233.793-11.76 18.898m-6.43-29.664-11.75 18.897"/><path stroke="#fff" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="7.322" d="m2074.2 231.197-8.15 13.099"/><path fill="#fff" d="M2124.87 250.675s1.81-3.252 2.61-3.78c.66-.433 1.8.075 2.15.79','1.73 1.519 2.24 6.171 2.41 7.829.1.838-.52 2.263-1.35 2.126-1.08-.179-4.15-2.811-5.16-3.204-.4-.157-.48.902-.89.849-.46-.062-2.13-.865-1.88-1.213.24-.329.7-1.102.7-1.102s-1.58-.523-1.62-1.052c-.05-.532.84-1.92 1.35-2.127.5-.209 1.68.883 1.68.883Zm1.82 1.382s2 1.68 2.2 1.393c.2-.289-.7-2.616-1.06-2.838-.35-.223-1.14 1.445-1.14 1.445Zm-1.65 4.563c1.66 1.07 2.62 2.119 2.9 3.146.28 1.029.03 2.158-.75 3.387-.38.592-.76 1.03-1.14 1.317-.39.286-.77.474-1.16.563-.38.091-.74.122-1.08.095a4.512 4.512 0 0 1-1.11-.247 10.01 10.01 0 0 1-2.19-1.066c-1.58-1.023-2.56-2.039-2.95-3.052-.39-1.012-.17-2.178.67-3.495.47-.739.96-1.26 1.49-1.564.52-.305 1.1-.456 1.73-.456.46-.004 1 .114 1.64.356.62.241 1.28.581 1.95 1.016Zm-1.54 2.415c-1.11-.716-1.93-1.108-2.46-1.172-.53-.064-.92.091-1.16.466-.16.248-.21.518-.15','.811.06.294.24.603.56.93.32.326.87.744 1.66 1.253 1.16.747 2 1.151 2.52 1.21.53.06.91-.108 1.16-.503.26-.403.24-.827-.05-1.268-.29-.441-.98-1.017-2.08-1.727Z"/><path fill="'));
      
        return render;
      }

    function renderFn33(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[0].toColor(),'" fill-opacity=".3" fill-rule="evenodd" stroke="',colors[0].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="10.427" d="M2037.53 471.975c7.64 3.006 292.22 171.173 292.22 171.173s55.68 24.555 77.6 44.957c30.4 28.305-70.36 210.373-113.77 199.117-29.55-7.662-79.36-45.983-79.36-45.983s-277.79-159.657-290.46-170.148c-44.97-37.244-183.13-203.898-183.13-203.898l31.75-55.741s212.92 39.973 265.15 60.523Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".8" fill-rule="evenodd" d="m1796.09 430.707 224.47 55.462 71.12 45.222-68.93-9.104-226.66-91.58Zm542.57 414.466s-27.4 38.502-42.75 33.888c-35.92-10.793-191.31-116.313-191.31-116.313s153.15 90.783 189.07 101.574c13.17 3.96 44.99-19.149 44.99-19.149Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="',colors[2].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.85" d="m2091.67 505.2 234.26 135.754c-23.65 64.591-54.54 119.356-98.76 174.408L1994.24 682.53c41.53-58.337 72.37-115.838 97.43-177.33Z" clip-rule="evenodd"/><path fill="'));
      
        return render;
      }

    function renderFn34(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" fill-rule="evenodd" d="m2133.36 530.973 146.54 84.921c-27.13 62.054-57.89 116.404-98.26 173.149l-146.05-82.497c38.96-59.279 70.12-116.089 97.77-175.573Z" clip-rule="evenodd"/><path fill="',colors[1].toColor(),'" fill-rule="evenodd" stroke="',colors[2].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="2.601" d="M2154.9 565.483c8.65-3.901 74.95 37.623 81.76 50.62 5.22 9.95-51.34 111.557-66.99 116.245-11.4 3.415-77.29-35.505-82.25-46.188-2.59-5.591 17.73-35.72 35.02-65.266 15.7-26.839 28.18-53.481 32.46-55.411Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M2400.49 734.117s-7.04-32.679-18.43-40.277c-58.85-39.314-334.92-211.538-334.92-211.538s297.58 163.056 354.82 210.489c8.59 7.119-1.47 41.326-1.47 41.326Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M2125.92 661.396c2.46-5.574 6.55-9.918 11.48-12.771 2.16-1.251 4.56-2.067 7.01-2.554 7.7-1.532 16.1-.315 23.19 4.545 6.81 4.628 11.4 11.241 13.12 18.629 1.71 7.348 1.09 15.283-3.11 22.102-3.79 7.029-10.25',' 11.583-17.41 13.668-7.13 2.075-15.03 1.355-22.24-2.359-7.49-3.77-12.49-10.385-15.03-17.672-1.89-5.443-2.59-11.546-.67-17.106.82-2.341 2.04-4.482 3.66-6.482Zm14.78 8.565c-.37 1.019-.14 2.098-.36 3.117-.52 2.345-1.06 4.673-.53 6.965.81 3.489 2.65 6.874 5.89 9.017 3.47 2.248 7.44 3.205 11.14 2.416 3.82-.811 7.32-3.088 9.48-6.672 1.93-3.685 2.05-7.867.76-11.569-1.22-3.526-4.14-6.279-7.78-8.056-2.69-1.288-5.58-1.205-8.3-.793-1.55.241-2.96.96-4.38 1.627-2.14 1.006-4.45 1.887-5.92 3.948Z" clip-rule="evenodd"/><path fill="#fff" d="M2073.07 601.699s-3.21 6.49-4.71 7.591c-1.24.903-3.51.024-4.25-1.334-1.57-2.882-4.93-11.779-5.43-14.985-.26-1.621.81-4.448 2.43-4.259 2.12.247 8.32 5.071 10.32 5.74.8.267.86-1.798 1.66-1.733.9.077 4.22 1.479 3.76 2.18-.43.661-1.26 2.208-1.26 2.208s3.12.866 3.26 1.89c.15',' 1.028-1.46 3.809-2.42 4.259-.96.453-3.36-1.557-3.36-1.557Zm-3.67-2.514s-4.03-3.076-4.4-2.499c-.37.581 1.62 5.017 2.32 5.414.71.401 2.08-2.915 2.08-2.915Zm2.79-9.025c-3.32-1.922-5.3-3.869-5.93-5.839-.65-1.973-.26-4.19 1.14-6.653.67-1.184 1.37-2.071 2.09-2.666.72-.592 1.45-.994 2.19-1.203a6.887 6.887 0 0 1 2.11-.286c.67.023 1.4.147 2.18.374 1.48.426 2.93 1.047 4.34 1.867 3.18 1.837 5.18 3.72 6.04 5.65.85 1.93.53 4.216-.98 6.855-.84 1.48-1.76 2.538-2.74 3.179-.99.641-2.1.99-3.34 1.051-.89.05-1.95-.128-3.2-.54-1.25-.409-2.55-1.007-3.9-1.789Zm2.77-4.837c2.22 1.286 3.86 1.969 4.89 2.044 1.04.074 1.78-.262 2.21-1.015a2.09 2.09 0 0 0 .21-1.588c-.14-.567-.53-1.149-1.18-1.754-.65-.605-1.76-1.363-3.34-2.279-2.32-1.343-3.99-2.048-5.01-2.113-1.02-.069-1.76.295-2.21 1.087-.46.807-.39 1.628.22 2.458.61.'));
      
        return render;
      }

    function renderFn35(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('83 2.01 1.883 4.21 3.16Z"/><path fill="',colors[4].toColor(),'" fill-rule="evenodd" stroke="',colors[5].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="6.104" d="M1726.82 372.941c12.6-.697 48.67 20.097 50.03 28.993.98 6.359-3.84 29.648-14.67 47.478-8.56 14.093-22.52 23.692-28.94 26.372-7.79 3.253-43.51-14.555-50.02-28.993-6.52-14.448 14.75-72.253 43.6-73.85Z" clip-rule="evenodd"/><path fill="',colors[5].toColor(),'" fill-rule="evenodd" d="m1729.13 375.826 6.5-4.719c3.16 4.452 4.73 10.215 4.79 16.726.09 10.821-4.01 23.843-10.93 35.558-7.97 13.47-19.64 25.122-32.48 30.026l6.63 4.387c9.22-4.051 19.21-12.308 27.19-22.9 4.52-6.016 8.45-12.735 11.1-20.082 1.73-4.803 2.99-9.813 3.51-15.041l3.1.151a62.872 62.872 0 0 1-2.14 16.314c-2.16 8.131-5.8 15.747-10.37 22.45-8.76 12.85-20.85 22.262-31.44 26.61a3.599 3.599 0 0 1-3.3-.332l-15.33-9.934a3.76 3.76 0 0 1-1.59-3.952 3.705 3.705 0 0 1 3.12-2.879c14.07-1.941 26.92-14.423 35.31-28.813 5.12-8.783 8.56-18.344 9.45-26.888.68-6.546-.1-12.461-3.12-16.682Zm30.62 34.813 2.53.465c-.62 6.172-2.06 12.475-4.28 18.652-2.18 6.059-5.02 11.953-8.49 17.304-2.89 4.471-6.26 8.513-9.79 12.054-6.18 6.205-13.04 10.761-19.72 13.118l-2.43-6.627c5.7-2.25 11.32-6.61 16.62-12.044 3.2-3.','266 6.23-6.968 9.13-10.876 3.54-4.777 6.91-9.824 9.68-15.155 2.87-5.535 5.26-11.182 6.75-16.891Z" clip-rule="evenodd"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h2142v2700H0z"/></clipPath></defs>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn30(colors),renderFn31(colors),renderFn32(colors),renderFn33(colors),renderFn34(colors),renderFn35(colors)));
      
        return render;
      }
}