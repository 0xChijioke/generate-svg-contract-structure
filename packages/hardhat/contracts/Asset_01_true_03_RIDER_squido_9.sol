//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_01_true_03_RIDER_squido_9 {

using ToColor for bytes4;

function renderFn29(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('06.94-.03 3.53.23 4.18.71 4.18.71Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".5" d="M1306.62 1543.83c4.46 0 8.07-3.2 8.07-7.14 0-3.95-3.61-7.14-8.07-7.14-4.46 0-8.07 3.19-8.07 7.14 0 3.94 3.61 7.14 8.07 7.14Z"/><path fill="#fff" fill-rule="evenodd" d="M1306.62 1529.31c2.23-.1 4.29.6 5.85 1.8 1.76 1.35 2.86 3.34 2.95 5.58.06 2.29-.97 4.39-2.69 5.89-1.58 1.37-3.74 2.2-6.11 2.23-2.37-.04-4.53-.86-6.1-2.23-1.72-1.5-2.76-3.6-2.69-5.89.08-2.24 1.18-4.23 2.94-5.58 1.56-1.2 3.62-1.9 5.85-1.8Zm0 .47c-2.05.09-3.88.88-5.21 2.09-1.38 1.24-2.21 2.95-2.14 4.82.05 1.81.99 3.39 2.39 4.51 1.31 1.05 3.05 1.68 4.96 1.65 1.91.03 3.65-.61 4.96-1.65 1.4-1.12 2.34-2.71 2.39-4.51.07-1.87-.76-3.58-2.14-4.82-1.33-1.21-3.16-2-5.21-2.09Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1307','.42 1532.21c.25-.19.6-.15.79.09.2.25.15.6-.09.79 0 0 .13.31-.12 1.79-.03.16-.04.23-.11.38-.07.17-.13.32-.26.44-.09.07-.19.11-.3.14-.24.05-.36.04-.59.02-1.49-.08-1.76-.29-1.76-.29-.25.19-.6.15-.79-.09-.2-.25-.15-.6.09-.79 0 0-.14-.32.13-1.78.04-.23.05-.35.16-.57.05-.1.11-.2.2-.26.15-.11.31-.13.49-.16.17-.03.24-.02.4-.01 1.49.1 1.76.3 1.76.3Z" clip-rule="evenodd"/><path fill="#fff" fill-opacity=".5" d="M1189.16 1293.7c3.61 0 6.53-2.58 6.53-5.77 0-3.19-2.92-5.78-6.53-5.78-3.6 0-6.53 2.59-6.53 5.78 0 3.19 2.93 5.77 6.53 5.77Z"/><path fill="#fff" fill-rule="evenodd" d="M1189.16 1281.96c1.81-.08 3.47.48 4.74 1.45 1.42 1.09 2.31 2.71 2.38 4.52.05 1.85-.79 3.55-2.18 4.76-1.27 1.11-3.02 1.78-4.94 1.8-1.91-.02-3.66-.69-4.93-1.8-1.39-1.21-2.23-2.91-2.18-4.76.07-1.81.96-3.42 2.38-4.52a7.306 7.306 0 0 ','1 4.73-1.45Zm0 .38c-1.65.07-3.13.71-4.21 1.69-1.12 1-1.79 2.39-1.73 3.9.04 1.46.8 2.74 1.93 3.65 1.06.84 2.47 1.36 4.01 1.33 1.55.02 2.95-.49 4.01-1.33 1.14-.91 1.9-2.19 1.94-3.65.06-1.51-.61-2.89-1.73-3.9-1.08-.98-2.56-1.62-4.22-1.69Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M1190.37 1285.07c-.01-.03-.01-.04.01-.04.15 0 .09.02-.01.04Zm-.37-.85c.16-.04.34.02.45.16.16.2.12.48-.35.73 0 0 .16-.02.27-.04 0 .02.01.06.01.1-.02.35.05.45-.1 1.29-.02.13-.03.19-.08.31-.06.14-.11.26-.22.36a.58.58 0 0 1-.24.11c-.2.05-.29.03-.48.02-1.42-.08-1.71-.14-1.71-.14a.44.44 0 0 1-.35-.17.433.433 0 0 1-.09-.18c-.23-.22-.36-.47.16-.48.04 0 0-.03 0-.14.01-.34-.05-.45.1-1.28.04-.19.04-.28.13-.46.05-.08.09-.16.17-.21.12-.09.25-.1.39-.13.14-.02.2-.02.32-.01.86.05.95.14 1.28.21.11.02.13.07.14.03.','09-.37.15-.3.2-.08Z" clip-rule="evenodd"/><path fill="#000" fill-opacity=".3" fill-rule="evenodd" d="M1542.11 1272.16c-.16-12.97-219.82 16.35-293.08 70.24 65.07-34.27 206.5-58.11 171.74-10.42 1.08 3.73-81.42 50.81-41.38 40.98 28.35-6.96 167.77-70.42 171.45-65.69 40.42 51.91-107 268.28-126.15 311.29 53.31 13.76-93.08-66.56-144.87-61.33 27.11 10.54 32.88 25.72 20.75 44.8 55.48 18.59 58.43 58.39 58.14 99.5-7.53 38.33-36.12 63.59-71.76 84.48 3.82 22.4-.18 38.74-25.85 38.39 4.09 12.5 24.31 38.24 19.39 43.45-3.77 4-30.66-10.89-40.63-11.9-16.99-10.57-25.92 2.06-13.43 26.11 43.44 53.37 19.96 47.77-84.06 44.01 75.42 89.25-118.92 72.3-115.35 113.88-67.345-9.16-140.621-6.92-157.608 32.45 140.308 116.19 339.338 98.83 563.848-7.36 191.29-299.71 182.83-808.81 108.85-792.88Z" clip-rule="evenodd"/>'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn29(colors)));
      
        return render;
      }
}