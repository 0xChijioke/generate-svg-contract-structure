//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import './ToColor.sol';

contract Asset_02_rare_04_ARMS_BACK_squido_0 {

using ToColor for bytes4;

function renderFn0(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('<g clip-path="url(#a)"><path fill="',colors[0].toColor(),'" fill-rule="evenodd" stroke="',colors[1].toColor(),'" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="8" d="M262.627 792.928c-8.247-30.462-34.208-53.621-63.297-73.714-40.892-28.261-89.237-49.72-125.456-67.893-28.055-14.071-49.951-27.245-61.014-39.069C.348 598.882-4.512 585.08-3.914 572.165c.76-16.387 11.047-41.022 53.148-57.912 178.155-71.472 394.879 9.759 551.094 8.168 44.467-.447 83.541-7.871 113.565-31.914 10.464-8.38 2.504-17.493-5.417-25.557-19.461-19.805-49.824-34.909-49.824-34.909-9.807-4.627-14.011-16.348-9.385-26.156 4.627-9.807 16.342-14.008 26.153-9.389 0 0 67.844 32.677 83.615 68.997 8.679 19.984 6.824 41.24-16.387 61.443-36.576 31.842-84.789 45.025-140.778 47.898-143.797 7.364-344.734-62.016-508.573 1.802 4.642 2.389 9.416 4.735 13.886 6.75 46.858 21.151 111.392 47.134 161.139 83.824 45.14 33.293 77.547 75.879 85.44',' 127.989 1.57 10.365-5.172 36.864-29.327 70.083-42.833 58.905-144.666 178.048-190.525 315.628-25.267 75.8-32.427 157.73 4.588 236.74 100.394 214.32 109.134 429.3 79.92 616.97-52.046 334.34-228.57 580.86-228.57 580.86-27.516 37.17-80.036 45.01-117.208 17.5-37.17-27.52-45.007-80.04-17.492-117.21 0 0 163.995-212.18 222.183-506.1 32.36-163.47 32.726-352.27-47.58-543.77-45.738-109.08-35.293-219.72 3.144-320.98 47.21-124.39 135.484-233.728 192.176-302.401 14.941-18.097 30.483-38.306 37.556-47.591ZM1734.03 1976.33c4.85-1.95 9.75-4.02 14.19-6.08 46.66-21.6 108.54-53.39 168.83-67 54.72-12.35 108.13-8.99 152.69 19.14 8.87 5.59 24.5 28.03 33.81 68.03 16.52 70.94 39.98 225.91 114 350.61 40.79 68.7 98.06 127.74 182.02 151.44 227.76 64.33 396.05 198.39 518.84 343.28 218.77 258.14 289.68 552.94 289.68 55','2.94 10.1 45.13-18.33 89.98-63.47 100.08-45.12 10.1-89.97-18.34-100.07-63.47 0 0-53.14-262.85-237.32-499.18-102.44-131.44-244.97-255.26-442.33-319.84-112.41-36.79-189.24-117.09-240.66-212.42-63.17-117.09-88.09-255.39-102.92-343.19-3.91-23.14-9.02-48.12-11.41-59.54-28.44-13.7-62.94-9.22-97.16-.37-48.13 12.43-95.99 34.94-133.44 50.44-29 12.01-53.29 19.94-69.47 20.57-18.29.71-31.91-4.64-41.29-13.55-11.89-11.29-23.79-35.19-9.01-78.08 62.53-181.49 265.77-292.22 366.79-411.39 28.76-33.91 48.71-68.32 50.18-106.76.51-13.39-11.59-13.34-22.87-12.62-27.71 1.75-59 14.83-59 14.83-9.92 4.39-21.53-.1-25.92-10.02-4.39-9.91.1-21.52 10.01-25.92 0 0 69.1-29.92 106.89-18.08 20.79 6.52 35.65 21.83 35.74 52.6.14 48.49-21.44 93.58-55.9 137.8-88.53 113.55-272.47 220.1-331.43 385.75ZM1859.67 88.35c-5.94-.662-15.31','-1.438-22.73-.765-29.72 2.692-62.66 12.127-62.66 12.127-10.36 3.22-21.38-2.56-24.61-12.912-3.22-10.352 2.57-21.376 12.92-24.606 0 0 70.3-22.504 106.59-17.196 17.15 2.509 28.59 11.103 34.13 22.343 4.52 9.18 5.66 22.106-2.12 39.482-12.26 27.402-44 45.885-87.58 60.876-53.68 18.455-127.28 33.674-190.43 73.62-45.41 28.73-84.69 71.376-105.05 139.655-2.23 7.51-3.23 17.345-3.57 21.535 2.69.51 7.57 1.375 11.19 1.605 10.14.656 21.92-.052 34.9-.987 71.45-5.179 170.79-16.902 250.53 33.312 7.75 4.873 15.22 13.288 19.51 27.064 2.99 9.617 3.5 30.123.39 58.708-8.85 81.258-43.75 259.522 4.99 392.95 26.38 72.211 82.14 127.349 188.82 136.769 233.76 20.66 423.96 117.27 572.48 232.27 267.67 207.26 397.12 477.25 397.12 477.25 19.3 42.02.85 91.81-41.18 111.11-42.02 19.31-91.81.85-111.12-41.18 0 0-105.28-243.06-3'));
      
        return render;
      }

    function renderFn1(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('34.23-436.72-126.57-107.07-290.51-199.68-495.84-226.8-159.75-21.09-238.77-109.12-273.73-219.38-40.8-128.66-16.76-290.484.72-392.16 3.88-22.522 7.29-46.721 9.18-60.797-50.22-25.88-109.46-22.43-157.69-20.447-43.69 1.784-80.69 2.115-103.2-7.401-33.09-13.979-55.74-42.032-33.19-107.265 29.16-84.319 80.44-135.663 138.8-169.143 68.99-39.582 147.63-53.368 205.57-70.54 28.48-8.434 51.89-15.45 61.09-32.377Z" clip-rule="evenodd"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="6.124" d="M1741.66 731.049c10.15 8.294 25.27 6.588 33.77-3.81 8.49-10.399 7.15-25.551-3-33.845s-25.26-6.588-33.76 3.811c-8.5 10.398-7.16 25.551 2.99 33.844Zm117.01 341.471c10.15 8.29 25.27 6.59 33.77-3.81 8.49-10.4 7.15-25.55-3-33.85-10.15-8.29-25.26-6.58-33.76 3.82-8.5 10.39-7.16 25.55 2.99 33.84Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor()));
      
        return render;
      }

    function renderFn2(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="4.264" d="M2080.36 1507.02c6.65 5.44 17.14 3.61 23.42-4.08 6.29-7.69 5.99-18.34-.66-23.77-6.65-5.44-17.14-3.61-23.43 4.08-6.28 7.7-5.98 18.34.67 23.77Zm-199.79 215.17c6.65 5.43 17.14 3.6 23.42-4.09 6.29-7.69 5.99-18.34-.66-23.77-6.65-5.44-17.14-3.61-23.43 4.09-6.28 7.69-5.99 18.33.67 23.77Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="6.084" d="M1674.74 1992.89c8.95 7.31 23.92 3.8 33.43-7.84 9.51-11.64 9.97-27.01 1.02-34.32-8.95-7.31-23.92-3.8-33.43 7.84-9.51 11.64-9.97 27-1.02 34.32Zm356.15 20.29c8.95 7.31 23.92 3.8 33.43-7.84 9.51-11.64 9.97-27.01 1.02-34.32-8.95-7.31-23.92-3.81-33.43 7.84-9.51 11.64-9.97 27-1.02 34.32Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor()));
      
        return render;
      }

    function renderFn3(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="8.634" d="M14.179 2296.48c12.536 10.25 33.785 4.98 47.462-11.76 13.676-16.73 14.6-38.61 2.065-48.85-12.536-10.24-33.785-4.98-47.462 11.76-13.676 16.74-14.601 38.61-2.065 48.85Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="6.82" d="M23.59 1346.04c11.65 1.43 22.932-12.37 25.201-30.84 2.269-18.46-5.336-34.59-16.986-36.02-11.65-1.43-22.933 12.38-25.202 30.84-2.269 18.46 5.336 34.59 16.986 36.02Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor()));
      
        return render;
      }

    function renderFn4(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="7.647" d="M306.361 820.183c17.386 2.136 33.029-8.739 34.94-24.292 1.911-15.553-10.634-29.892-28.02-32.029-17.386-2.136-33.029 8.74-34.941 24.292-1.911 15.553 10.634 29.893 28.021 32.029Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="6.692" d="M46.269 583.379c16.57 2.036 31.248-6.442 32.784-18.937 1.535-12.494-10.654-24.274-27.224-26.31-16.571-2.036-31.25 6.442-32.785 18.937-1.535 12.494 10.654 24.274 27.225 26.31Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor()));
      
        return render;
      }

    function renderFn5(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="5.733" d="M472.226 540.247c15.96 1.961 29.847-4.168 31.017-13.69 1.17-9.521-10.82-18.83-26.78-20.791-15.96-1.961-29.847 4.168-31.017 13.689-1.17 9.522 10.82 18.831 26.78 20.792Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="4.737" d="M724.632 467.335c9.202 8.809 21.298 11.108 27.016 5.135 5.719-5.974 2.895-17.958-6.307-26.767-9.202-8.81-21.297-11.109-27.016-5.135-5.719 5.974-2.895 17.958 6.307 26.767Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor()));
      
        return render;
      }

    function renderFn6(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked('" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="5.477" d="M1770.72 503.702c8.43 6.892 21.9 4.364 30.08-5.648 8.18-10.011 7.98-23.714-.46-30.606-8.43-6.892-21.9-4.364-30.08 5.648-8.18 10.011-7.98 23.714.46 30.606Zm-269.45-50.048c6.34 8.858 20 9.94 30.51 2.416 10.52-7.524 13.9-20.804 7.56-29.662-6.34-8.858-20-9.94-30.51-2.416-10.52 7.524-13.9 20.804-7.56 29.662Zm40.84-204.217c4.14 10.078 17.18 14.271 29.14 9.365 11.97-4.906 18.31-17.053 14.18-27.13-4.13-10.078-17.18-14.271-29.14-9.366-11.96 4.906-18.31 17.053-14.18 27.131Z"/><path fill="',colors[2].toColor(),'" fill-opacity=".8" stroke="',colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-opacity=".8" stroke-width="4.337" d="M1816.97 136.323c3.4 8.292 13.54 11.985 22.66 8.247 9.11-3.737 13.74-13.489 10.34-21.782-3.4-8.292-13.55-11.985-22.66-8.247-9.11 3.737-13.74 13.489-10.34 21.782Z"/><path fill="gray" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="12" d="M483.875 2702.42c10.099 53.54 11.512 137.25 11.512 137.25.358 41.39-32.956 75.29-74.348 75.65-41.392.36-75.288-32.96-75.646-74.35 0 0 .18-79.04-10.167-116.54-3.009-10.9-4.931-27.4-.003-48.6 3.605-15.51 12.851-39.5 27.186-68.61 64.158-130.26 240.128-398.94 240.128-398.94 22.703-34.61 69.235-44.28 103.848-21.58 34.612 22.71 44.281 69.24 21.579 103.85 0 0-206.432 312.49-244.089 411.87Z" clip-rule="ev','enodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.996" d="m391.448 2544.91 34.527-9.76-12.263 38.51 93.356 35.35 14.539-36.23 23.138 15.04"/><path fill="',colors[2].toColor(),'" stroke="'));
      
        return render;
      }

    function renderFn7(bytes4[] memory colors) internal pure returns (string memory) {
        string memory render = string(abi.encodePacked(colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.996" d="M439.745 2614.32c13.821 13.41 36.161 12.8 49.899-1.36 13.737-14.16 13.669-36.51-.152-49.92-13.821-13.4-36.161-12.8-49.898 1.36-13.738 14.16-13.67 36.51.151 49.92Z"/><path fill="gray" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="12" d="M729.459 2608.58c11.963 53.15 83.977 246.79 83.977 246.79 14.208 38.88-5.821 81.98-44.7 96.19-38.879 14.21-81.979-5.82-96.187-44.7 0 0-87.72-243.85-93.276-286.61-1.815-13.97 1.838-45.09 16.557-84.18 35.161-93.38 129.818-273.54 129.818-273.54 19.288-36.63 64.683-50.7 101.308-31.41 36.625 19.29 50.699 64.68 31.411 101.3 0 0-108.552 203.97-128.908 276.16Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round"',' stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.996" d="m584.984 2633.56 24.853-25.87 8.891 39.42 98.417-16.71-5.774-38.6 27.568 1.28"/><path fill="',colors[2].toColor(),'" stroke="',colors[3].toColor(),'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.996" d="M661.749 2669.03c18.704 4.58 37.67-7.24 42.363-26.4 4.692-19.17-6.666-38.41-25.37-42.99-18.704-4.58-37.671 7.24-42.363 26.4-4.693 19.16 6.666 38.41 25.37 42.99Z"/><path fill="gray" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="12" d="M815.141 2384.93c-20.01-36.24-6.836-81.9 29.4-101.91 36.236-20.01 81.9-6.84 101.91 29.4 0 0 117.449 213.52 155.789 402.53 19.48 96.08 16.8 186.56-16.77 249.83-19.41 36.56-64.85 50.49-101.41 31.09-36.565-19.4-50.498-64.84-31.095-101.41 12.107-22.81 13.461-52.55 11.335-85.04-2.799-42.76-13.307-89.49-27.068-135.61-44.044-147.63-122.091-288.88-122.091-288.88Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round','" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="8.996" d="m966.457 2733.44 13.882-33.08 22.471 33.58 85.83-50.99-19.28-33.94 26.18-8.72"/><path fill="'));
      
        return render;
      }

    function renderMain(bytes4[] memory colors) public pure returns (string memory) {
        string memory render = string(abi.encodePacked(renderFn0(colors),renderFn1(colors),renderFn2(colors),renderFn3(colors),renderFn4(colors),renderFn5(colors),renderFn6(colors),renderFn7(colors)));
      
        return render;
      }
}